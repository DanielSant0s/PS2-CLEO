//                               # ===========================================================================
//
//                               # Segment type: Pure code
//                                              .text
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x20
//
//                               # _DWORD __fastcall readString(CRunningScript *, char *, unsigned __int8)
//                                              .globl readString(CRunningScript *, char *, unsigned char)
//                              readString(CRunningScript *, char *, unsigned char):
//
//                              var_20          = -0x20
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_8           = -8
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035C7E8,extended,27BDFFD0//                                   addiu   $sp, -0x30
patch=0,EE,2035C7EC,extended,FFBF0028 //                                  sd      $ra, 0x20+var_s8($sp)
patch=0,EE,2035C7F0,extended,FFBE0020 //                                  sd      $fp, 0x20+var_s0($sp)
patch=0,EE,2035C7F4,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035C7F8,extended,AFC40010 //                                  sw      $a0, 0x20+var_10($fp)
patch=0,EE,2035C7FC,extended,AFC50014 //                                  sw      $a1, 0x20+var_C($fp)
patch=0,EE,2035C800,extended,00C01025 //                                  move    $v0, $a2
patch=0,EE,2035C804,extended,A3C20018 //                                  sb      $v0, 0x20+var_8($fp)
patch=0,EE,2035C808,extended,8FC40010 //                                  lw      $a0, 0x20+var_10($fp)  # this
patch=0,EE,2035C80C,extended,0C0D7A9A //                                  jal     CRunningScript::GetBytePointer(void)
patch=0,EE,2035C810,extended,00000000 //                                  nop
patch=0,EE,2035C814,extended,90420000 //                                  lbu     $v0, 0($v0)
patch=0,EE,2035C818,extended,A3C20000 //                                  sb      $v0, 0x20+var_20($fp)
patch=0,EE,2035C81C,extended,93C20000 //                                  lbu     $v0, 0x20+var_20($fp)
patch=0,EE,2035C820,extended,14400004 //                                  bnez    $v0, loc_35C834
patch=0,EE,2035C824,extended,00000000 //                                  nop
patch=0,EE,2035C828,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035C82C,extended,10000059 //                                  b       loc_35C994
patch=0,EE,2035C830,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35C834:
patch=0,EE,2035C834,extended,93C20000 //                                  lbu     $v0, 0x20+var_20($fp)
patch=0,EE,2035C838,extended,1040002A //                                  beqz    $v0, loc_35C8E4
patch=0,EE,2035C83C,extended,00000000 //                                  nop
patch=0,EE,2035C840,extended,93C20000 //                                  lbu     $v0, 0x20+var_20($fp)
patch=0,EE,2035C844,extended,2C420009 //                                  sltiu   $v0, 9
patch=0,EE,2035C848,extended,10400026 //                                  beqz    $v0, loc_35C8E4
patch=0,EE,2035C84C,extended,00000000 //                                  nop
patch=0,EE,2035C850,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035C854,extended,8FC40010 //                                  lw      $a0, 0x20+var_10($fp)
patch=0,EE,2035C858,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035C85C,extended,00000000 //                                  nop
patch=0,EE,2035C860,extended,8FC20014 //                                  lw      $v0, 0x20+var_C($fp)
patch=0,EE,2035C864,extended,1040001B //                                  beqz    $v0, loc_35C8D4
patch=0,EE,2035C868,extended,00000000 //                                  nop
patch=0,EE,2035C86C,extended,93C20018 //                                  lbu     $v0, 0x20+var_8($fp)
patch=0,EE,2035C870,extended,2C420081 //                                  sltiu   $v0, 0x81
patch=0,EE,2035C874,extended,10400007 //                                  beqz    $v0, loc_35C894
patch=0,EE,2035C878,extended,00000000 //                                  nop
patch=0,EE,2035C87C,extended,93C20018 //                                  lbu     $v0, 0x20+var_8($fp)
patch=0,EE,2035C880,extended,10400004 //                                  beqz    $v0, loc_35C894
patch=0,EE,2035C884,extended,00000000 //                                  nop
patch=0,EE,2035C888,extended,93C20018 //                                  lbu     $v0, 0x20+var_8($fp)
patch=0,EE,2035C88C,extended,10000002 //                                  b       loc_35C898
patch=0,EE,2035C890,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35C894:
patch=0,EE,2035C894,extended,24020080 //                                  li      $v0, 0x80
//
//                              loc_35C898:
patch=0,EE,2035C898,extended,A3C20018 //                                  sb      $v0, 0x20+var_8($fp)
patch=0,EE,2035C89C,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035C8A0,extended,8C43DFB0 //                                  lw      $v1, opcodeParams
patch=0,EE,2035C8A4,extended,93C20018 //                                  lbu     $v0, 0x20+var_8($fp)
patch=0,EE,2035C8A8,extended,2442FFFF //                                  addiu   $v0, -1
patch=0,EE,2035C8AC,extended,00403025 //                                  move    $a2, $v0         # unsigned int
patch=0,EE,2035C8B0,extended,00602825 //                                  move    $a1, $v1         # char *
patch=0,EE,2035C8B4,extended,8FC40014 //                                  lw      $a0, 0x20+var_C($fp)  # char *
patch=0,EE,2035C8B8,extended,0C154760 //                                  jal     strncpy(char *,char const*,uint)
patch=0,EE,2035C8BC,extended,00000000 //                                  nop
patch=0,EE,2035C8C0,extended,93C20018 //                                  lbu     $v0, 0x20+var_8($fp)
patch=0,EE,2035C8C4,extended,2442FFFF //                                  addiu   $v0, -1
patch=0,EE,2035C8C8,extended,8FC30014 //                                  lw      $v1, 0x20+var_C($fp)
patch=0,EE,2035C8CC,extended,00621021 //                                  addu    $v0, $v1, $v0
patch=0,EE,2035C8D0,extended,A0400000 //                                  sb      $zero, 0($v0)
//
//                              loc_35C8D4:
patch=0,EE,2035C8D4,extended,3C020070 //
patch=0,EE,2035C8D8,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035C8DC,extended,1000002D //                                 b       loc_35C994
patch=0,EE,2035C8E0,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35C8E4:
patch=0,EE,2035C8E4,extended,8FC20014 //                                  lw      $v0, 0x20+var_C($fp)
patch=0,EE,2035C8E8,extended,14400011 //                                  bnez    $v0, loc_35C930
patch=0,EE,2035C8EC,extended,00000000 //                                  nop
patch=0,EE,2035C8F0,extended,24060080 //                                  li      $a2, 0x80        # unsigned int
patch=0,EE,2035C8F4,extended,00002825 //                                  move    $a1, $zero       # int
patch=0,EE,2035C8F8,extended,3C020036 //                                  lui     $v0, 0x36  # '6'
patch=0,EE,2035C8FC,extended,2444F560 //                                  addiu   $a0, $v0, (readString(CRunningScript *,char *,uchar)::result - 0x360000)  # void *
patch=0,EE,2035C900,extended,0C15395A //                                  jal     memset(void *,int,uint)
patch=0,EE,2035C904,extended,00000000 //                                  nop
patch=0,EE,2035C908,extended,24060080 //                                  li      $a2, 0x80
patch=0,EE,2035C90C,extended,3C020036 //                                  lui     $v0, 0x36  # '6'
patch=0,EE,2035C910,extended,2445F560 //                                  addiu   $a1, $v0, (readString(CRunningScript *,char *,uchar)::result - 0x360000)
patch=0,EE,2035C914,extended,8FC40010 //                                  lw      $a0, 0x20+var_10($fp)
patch=0,EE,2035C918,extended,0C07DC80 //                                  jal     GetScriptStringParam(CRunningScript *,char *,uchar)
patch=0,EE,2035C91C,extended,00000000 //                                  nop
patch=0,EE,2035C920,extended,3C020036 //
patch=0,EE,2035C924,extended,2442F560 //                      li      $v0, readString(CRunningScript *,char *,uchar)::result
patch=0,EE,2035C928,extended,1000001A //                                 b       loc_35C994
patch=0,EE,2035C92C,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35C930:
patch=0,EE,2035C930,extended,93C20018 //                                  lbu     $v0, 0x20+var_8($fp)
patch=0,EE,2035C934,extended,2C420081 //                                  sltiu   $v0, 0x81
patch=0,EE,2035C938,extended,10400007 //                                  beqz    $v0, loc_35C958
patch=0,EE,2035C93C,extended,00000000 //                                  nop
patch=0,EE,2035C940,extended,93C20018 //                                  lbu     $v0, 0x20+var_8($fp)
patch=0,EE,2035C944,extended,10400004 //                                  beqz    $v0, loc_35C958
patch=0,EE,2035C948,extended,00000000 //                                  nop
patch=0,EE,2035C94C,extended,93C20018 //                                  lbu     $v0, 0x20+var_8($fp)
patch=0,EE,2035C950,extended,10000002 //                                  b       loc_35C95C
patch=0,EE,2035C954,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35C958:
patch=0,EE,2035C958,extended,24020080 //                                  li      $v0, 0x80
//
//                              loc_35C95C:
patch=0,EE,2035C95C,extended,A3C20018 //                                  sb      $v0, 0x20+var_8($fp)
patch=0,EE,2035C960,extended,93C20018 //                                  lbu     $v0, 0x20+var_8($fp)
patch=0,EE,2035C964,extended,00403025 //                                  move    $a2, $v0         # unsigned int
patch=0,EE,2035C968,extended,00002825 //                                  move    $a1, $zero       # int
patch=0,EE,2035C96C,extended,8FC40014 //                                  lw      $a0, 0x20+var_C($fp)  # void *
patch=0,EE,2035C970,extended,0C15395A //                                  jal     memset(void *,int,uint)
patch=0,EE,2035C974,extended,00000000 //                                  nop
patch=0,EE,2035C978,extended,93C20018 //                                  lbu     $v0, 0x20+var_8($fp)
patch=0,EE,2035C97C,extended,00403025 //                                  move    $a2, $v0
patch=0,EE,2035C980,extended,8FC50014 //                                  lw      $a1, 0x20+var_C($fp)
patch=0,EE,2035C984,extended,8FC40010 //                                  lw      $a0, 0x20+var_10($fp)
patch=0,EE,2035C988,extended,0C07DC80 //                                  jal     GetScriptStringParam(CRunningScript *,char *,uchar)
patch=0,EE,2035C98C,extended,00000000 //                                  nop
patch=0,EE,2035C990,extended,8FC20014 //                                  lw      $v0, 0x20+var_C($fp)
//
//                              loc_35C994:
patch=0,EE,2035C994,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035C998,extended,DFBF0028 //                                  ld      $ra, 0x20+var_s8($sp)
patch=0,EE,2035C99C,extended,DFBE0020 //                                  ld      $fp, 0x20+var_s0($sp)
patch=0,EE,2035C9A0,extended,27BD0030 //                                  addiu   $sp, 0x30
patch=0,EE,2035C9A4,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035C9A8,extended,00000000 //                                  nop
//                               # } // starts at 35C7E8
//                               # End of function readString(CRunningScript *,char *,uchar)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x170
//
//                               # _DWORD __fastcall format(CRunningScript *, char *, unsigned int, const char *)
//                                              .globl format(CRunningScript *, char *, unsigned int, char const*)
//                              format(CRunningScript *, char *, unsigned int, char const*):
//
//                              var_170         = -0x170
//                              var_16C         = -0x16C
//                              var_168         = -0x168
//                              var_164         = -0x164
//                              var_160         = -0x160
//                              var_15C         = -0x15C
//                              var_158         = -0x158
//                              var_154         = -0x154
//                              var_150         = -0x150
//                              var_50          = -0x50
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_8           = -8
//                              var_4           = -4
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035C9AC,extended,27BDFE80 //                                  addiu   $sp, -0x180
patch=0,EE,2035C9B0,extended,FFBF0178 //                                  sd      $ra, 0x170+var_s8($sp)
patch=0,EE,2035C9B4,extended,FFBE0170 //                                  sd      $fp, 0x170+var_s0($sp)
patch=0,EE,2035C9B8,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035C9BC,extended,AFC40160 //                                  sw      $a0, 0x170+var_10($fp)
patch=0,EE,2035C9C0,extended,AFC50164 //                                  sw      $a1, 0x170+var_C($fp)
patch=0,EE,2035C9C4,extended,AFC60168 //                                  sw      $a2, 0x170+var_8($fp)
patch=0,EE,2035C9C8,extended,AFC7016C //                                  sw      $a3, 0x170+var_4($fp)
patch=0,EE,2035C9CC,extended,AFC00000 //                                  sw      $zero, 0x170+var_170($fp)
patch=0,EE,2035C9D0,extended,8FC2016C //                                  lw      $v0, 0x170+var_4($fp)
patch=0,EE,2035C9D4,extended,AFC20004 //                                  sw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035C9D8,extended,100001CF //                                  b       loc_35D118
patch=0,EE,2035C9DC,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35C9E0:
patch=0,EE,2035C9E0,extended,8FC20000 //                                  lw      $v0, 0x170+var_170($fp)
patch=0,EE,2035C9E4,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035C9E8,extended,AFC30000 //                                  sw      $v1, 0x170+var_170($fp)
patch=0,EE,2035C9EC,extended,8FC30168 //                                  lw      $v1, 0x170+var_8($fp)
patch=0,EE,2035C9F0,extended,0043102B //                                  sltu    $v0, $v1
patch=0,EE,2035C9F4,extended,38420001 //                                  xori    $v0, 1
patch=0,EE,2035C9F8,extended,304200FF //                                  andi    $v0, 0xFF
patch=0,EE,2035C9FC,extended,10400004 //                                  beqz    $v0, loc_35CA10
patch=0,EE,2035CA00,extended,00000000 //                                  nop
patch=0,EE,2035CA04,extended,2402FFFF //                                  li      $v0, 0xFFFFFFFF
patch=0,EE,2035CA08,extended,100001D4 //                                  b       loc_35D15C
patch=0,EE,2035CA0C,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CA10:
patch=0,EE,2035CA10,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CA14,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CA18,extended,AFC30004 //                                  sw      $v1, 0x170+var_16C($fp)
patch=0,EE,2035CA1C,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CA20,extended,8FC20164 //                                  lw      $v0, 0x170+var_C($fp)
patch=0,EE,2035CA24,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CA28,extended,AFC40164 //                                  sw      $a0, 0x170+var_C($fp)
patch=0,EE,2035CA2C,extended,A0430000 //                                  sb      $v1, 0($v0)
//
//                              loc_35CA30:
patch=0,EE,2035CA30,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CA34,extended,80420000 //                                  lb      $v0, 0($v0)
patch=0,EE,2035CA38,extended,10400006 //                                  beqz    $v0, loc_35CA54
patch=0,EE,2035CA3C,extended,00000000 //                                  nop
patch=0,EE,2035CA40,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CA44,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CA48,extended,24020025 //                                  li      $v0, 0x25  # '%'
patch=0,EE,2035CA4C,extended,1462FFE4 //                                  bne     $v1, $v0, loc_35C9E0
patch=0,EE,2035CA50,extended,00000000 //                                  nop
//
//                              loc_35CA54:
patch=0,EE,2035CA54,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CA58,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CA5C,extended,24020025 //                                  li      $v0, 0x25  # '%'
patch=0,EE,2035CA60,extended,146201AD //                                  bne     $v1, $v0, loc_35D118
patch=0,EE,2035CA64,extended,00000000 //                                  nop
patch=0,EE,2035CA68,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CA6C,extended,24420001 //                                  addiu   $v0, 1
patch=0,EE,2035CA70,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CA74,extended,24020025 //                                  li      $v0, 0x25  # '%'
patch=0,EE,2035CA78,extended,14620017 //                                  bne     $v1, $v0, loc_35CAD8
patch=0,EE,2035CA7C,extended,00000000 //                                  nop
patch=0,EE,2035CA80,extended,8FC20000 //                                  lw      $v0, 0x170+var_170($fp)
patch=0,EE,2035CA84,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CA88,extended,AFC30000 //                                  sw      $v1, 0x170+var_170($fp)
patch=0,EE,2035CA8C,extended,8FC30168 //                                  lw      $v1, 0x170+var_8($fp)
patch=0,EE,2035CA90,extended,0043102B //                                  sltu    $v0, $v1
patch=0,EE,2035CA94,extended,38420001 //                                  xori    $v0, 1
patch=0,EE,2035CA98,extended,304200FF //                                  andi    $v0, 0xFF
patch=0,EE,2035CA9C,extended,10400004 //                                  beqz    $v0, loc_35CAB0
patch=0,EE,2035CAA0,extended,00000000 //                                  nop
patch=0,EE,2035CAA4,extended,2402FFFF //                                  li      $v0, 0xFFFFFFFF
patch=0,EE,2035CAA8,extended,100001AC //                                  b       loc_35D15C
patch=0,EE,2035CAAC,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CAB0:
patch=0,EE,2035CAB0,extended,8FC20164 //                                  lw      $v0, 0x170+var_C($fp)
patch=0,EE,2035CAB4,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CAB8,extended,AFC30164 //                                  sw      $v1, 0x170+var_C($fp)
patch=0,EE,2035CABC,extended,24030025 //                                  li      $v1, 0x25  # '%'
patch=0,EE,2035CAC0,extended,A0430000 //                                  sb      $v1, 0($v0)
patch=0,EE,2035CAC4,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CAC8,extended,24420002 //                                  addiu   $v0, 2
patch=0,EE,2035CACC,extended,AFC20004 //                                  sw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CAD0,extended,10000191 //                                  b       loc_35D118
patch=0,EE,2035CAD4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CAD8:
patch=0,EE,2035CAD8,extended,27C20120 //                                  addiu   $v0, $fp, 0x170+var_50
patch=0,EE,2035CADC,extended,AFC20008 //                                  sw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CAE0,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CAE4,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CAE8,extended,AFC30004 //                                  sw      $v1, 0x170+var_16C($fp)
patch=0,EE,2035CAEC,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CAF0,extended,8FC20008 //                                  lw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CAF4,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CAF8,extended,AFC40008 //                                  sw      $a0, 0x170+var_168($fp)
patch=0,EE,2035CAFC,extended,A0430000 //                                  sb      $v1, 0($v0)
patch=0,EE,2035CB00,extended,1000002D //                                  b       loc_35CBB8
patch=0,EE,2035CB04,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CB08:
patch=0,EE,2035CB08,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CB0C,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CB10,extended,2402002A //                                  li      $v0, 0x2A  # '*'
patch=0,EE,2035CB14,extended,1462001F //                                  bne     $v1, $v0, loc_35CB94
patch=0,EE,2035CB18,extended,00000000 //                                  nop
patch=0,EE,2035CB1C,extended,27C20020 //                                  addiu   $v0, $fp, 0x170+var_150
patch=0,EE,2035CB20,extended,AFC2000C //                                  sw      $v0, 0x170+var_164($fp)
patch=0,EE,2035CB24,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035CB28,extended,8FC40160 //                                  lw      $a0, 0x170+var_10($fp)
patch=0,EE,2035CB2C,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035CB30,extended,00000000 //                                  nop
patch=0,EE,2035CB34,extended,3C020070 //
patch=0,EE,2035CB38,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035CB3C,extended,00403025 //                                 move    $a2, $v0
patch=0,EE,2035CB40,extended,3C020036 //                                  lui     $v0, 0x36  # '6'
patch=0,EE,2035CB44,extended,2445F1A0 //                                  addiu   $a1, $v0, (int_fmt - 0x360000)  # char *
patch=0,EE,2035CB48,extended,8FC4000C //                                  lw      $a0, 0x170+var_164($fp)  # char *
patch=0,EE,2035CB4C,extended,0C1543C4 //                                  jal     sprintf(char *,char const*,...)
patch=0,EE,2035CB50,extended,00000000 //                                  nop
patch=0,EE,2035CB54,extended,10000009 //                                  b       loc_35CB7C
patch=0,EE,2035CB58,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CB5C:
patch=0,EE,2035CB5C,extended,8FC2000C //                                  lw      $v0, 0x170+var_164($fp)
patch=0,EE,2035CB60,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CB64,extended,AFC3000C //                                  sw      $v1, 0x170+var_164($fp)
patch=0,EE,2035CB68,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CB6C,extended,8FC20008 //                                  lw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CB70,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CB74,extended,AFC40008 //                                  sw      $a0, 0x170+var_168($fp)
patch=0,EE,2035CB78,extended,A0430000 //                                  sb      $v1, 0($v0)
//
//                              loc_35CB7C:
patch=0,EE,2035CB7C,extended,8FC2000C //                                  lw      $v0, 0x170+var_164($fp)
patch=0,EE,2035CB80,extended,80420000 //                                  lb      $v0, 0($v0)
patch=0,EE,2035CB84,extended,1440FFF5 //                                  bnez    $v0, loc_35CB5C
patch=0,EE,2035CB88,extended,00000000 //                                  nop
patch=0,EE,2035CB8C,extended,10000007 //                                  b       loc_35CBAC
patch=0,EE,2035CB90,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CB94:
patch=0,EE,2035CB94,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CB98,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CB9C,extended,8FC20008 //                                  lw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CBA0,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CBA4,extended,AFC40008 //                                  sw      $a0, 0x170+var_168($fp)
patch=0,EE,2035CBA8,extended,A0430000 //                                  sb      $v1, 0($v0)
//
//                              loc_35CBAC:
patch=0,EE,2035CBAC,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CBB0,extended,24420001 //                                  addiu   $v0, 1
patch=0,EE,2035CBB4,extended,AFC20004 //                                  sw      $v0, 0x170+var_16C($fp)
//
//                              loc_35CBB8:
patch=0,EE,2035CBB8,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CBBC,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CBC0,extended,24020030 //                                  li      $v0, 0x30  # '0'
patch=0,EE,2035CBC4,extended,1062FFD0 //                                  beq     $v1, $v0, loc_35CB08
patch=0,EE,2035CBC8,extended,00000000 //                                  nop
patch=0,EE,2035CBCC,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CBD0,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CBD4,extended,2402002B //                                  li      $v0, 0x2B  # '+'
patch=0,EE,2035CBD8,extended,1062FFCB //                                  beq     $v1, $v0, loc_35CB08
patch=0,EE,2035CBDC,extended,00000000 //                                  nop
patch=0,EE,2035CBE0,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CBE4,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CBE8,extended,2402002D //                                  li      $v0, 0x2D  # '-'
patch=0,EE,2035CBEC,extended,1062FFC6 //                                  beq     $v1, $v0, loc_35CB08
patch=0,EE,2035CBF0,extended,00000000 //                                  nop
patch=0,EE,2035CBF4,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CBF8,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CBFC,extended,24020020 //                                  li      $v0, 0x20  # ' '
patch=0,EE,2035CC00,extended,1062FFC1 //                                  beq     $v1, $v0, loc_35CB08
patch=0,EE,2035CC04,extended,00000000 //                                  nop
patch=0,EE,2035CC08,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CC0C,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CC10,extended,2402002A //                                  li      $v0, 0x2A  # '*'
patch=0,EE,2035CC14,extended,1062FFBC //                                  beq     $v1, $v0, loc_35CB08
patch=0,EE,2035CC18,extended,00000000 //                                  nop
patch=0,EE,2035CC1C,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CC20,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CC24,extended,24020023 //                                  li      $v0, 0x23  # '#'
patch=0,EE,2035CC28,extended,1062FFB7 //                                  beq     $v1, $v0, loc_35CB08
patch=0,EE,2035CC2C,extended,00000000 //                                  nop
patch=0,EE,2035CC30,extended,10000009 //                                  b       loc_35CC58
patch=0,EE,2035CC34,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CC38:
patch=0,EE,2035CC38,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CC3C,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CC40,extended,AFC30004 //                                  sw      $v1, 0x170+var_16C($fp)
patch=0,EE,2035CC44,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CC48,extended,8FC20008 //                                  lw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CC4C,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CC50,extended,AFC40008 //                                  sw      $a0, 0x170+var_168($fp)
patch=0,EE,2035CC54,extended,A0430000 //                                  sb      $v1, 0($v0)
//
//                              loc_35CC58:
patch=0,EE,2035CC58,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CC5C,extended,80420000 //                                  lb      $v0, 0($v0)
patch=0,EE,2035CC60,extended,2442FFD0 //                                  addiu   $v0, -0x30
patch=0,EE,2035CC64,extended,2C42000A //                                  sltiu   $v0, 0xA
patch=0,EE,2035CC68,extended,304200FF //                                  andi    $v0, 0xFF
patch=0,EE,2035CC6C,extended,1440FFF2 //                                  bnez    $v0, loc_35CC38
patch=0,EE,2035CC70,extended,00000000 //                                  nop
patch=0,EE,2035CC74,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CC78,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CC7C,extended,2402002E //                                  li      $v0, 0x2E  # '.'
patch=0,EE,2035CC80,extended,1462003B //                                  bne     $v1, $v0, loc_35CD70
patch=0,EE,2035CC84,extended,00000000 //                                  nop
patch=0,EE,2035CC88,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CC8C,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CC90,extended,AFC30004 //                                  sw      $v1, 0x170+var_16C($fp)
patch=0,EE,2035CC94,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CC98,extended,8FC20008 //                                  lw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CC9C,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CCA0,extended,AFC40008 //                                  sw      $a0, 0x170+var_168($fp)
patch=0,EE,2035CCA4,extended,A0430000 //                                  sb      $v1, 0($v0)
patch=0,EE,2035CCA8,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CCAC,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CCB0,extended,2402002A //                                  li      $v0, 0x2A  # '*'
patch=0,EE,2035CCB4,extended,14620027 //                                  bne     $v1, $v0, loc_35CD54
patch=0,EE,2035CCB8,extended,00000000 //                                  nop
patch=0,EE,2035CCBC,extended,27C20020 //                                  addiu   $v0, $fp, 0x170+var_150
patch=0,EE,2035CCC0,extended,AFC20010 //                                  sw      $v0, 0x170+var_160($fp)
patch=0,EE,2035CCC4,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035CCC8,extended,8FC40160 //                                  lw      $a0, 0x170+var_10($fp)
patch=0,EE,2035CCCC,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035CCD0,extended,00000000 //                                  nop
patch=0,EE,2035CCD4,extended,3C020070 //
patch=0,EE,2035CCD8,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035CCDC,extended,00403025 //                                 move    $a2, $v0
patch=0,EE,2035CCE0,extended,3C020036 //                                  lui     $v0, 0x36  # '6'
patch=0,EE,2035CCE4,extended,2445F1A0 //                                  addiu   $a1, $v0, (int_fmt - 0x360000)  # char *
patch=0,EE,2035CCE8,extended,8FC40010 //                                  lw      $a0, 0x170+var_160($fp)  # char *
patch=0,EE,2035CCEC,extended,0C1543C4 //                                  jal     sprintf(char *,char const*,...)
patch=0,EE,2035CCF0,extended,00000000 //                                  nop
patch=0,EE,2035CCF4,extended,10000009 //                                  b       loc_35CD1C
patch=0,EE,2035CCF8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CCFC:
patch=0,EE,2035CCFC,extended,8FC20010 //                                  lw      $v0, 0x170+var_160($fp)
patch=0,EE,2035CD00,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CD04,extended,AFC30010 //                                  sw      $v1, 0x170+var_160($fp)
patch=0,EE,2035CD08,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CD0C,extended,8FC20008 //                                  lw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CD10,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CD14,extended,AFC40008 //                                  sw      $a0, 0x170+var_168($fp)
patch=0,EE,2035CD18,extended,A0430000 //                                  sb      $v1, 0($v0)
//
//                              loc_35CD1C:
patch=0,EE,2035CD1C,extended,8FC20010 //                                  lw      $v0, 0x170+var_160($fp)
patch=0,EE,2035CD20,extended,80420000 //                                  lb      $v0, 0($v0)
patch=0,EE,2035CD24,extended,1440FFF5 //                                  bnez    $v0, loc_35CCFC
patch=0,EE,2035CD28,extended,00000000 //                                  nop
patch=0,EE,2035CD2C,extended,10000010 //                                  b       loc_35CD70
patch=0,EE,2035CD30,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CD34:
patch=0,EE,2035CD34,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CD38,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CD3C,extended,AFC30004 //                                  sw      $v1, 0x170+var_16C($fp)
patch=0,EE,2035CD40,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CD44,extended,8FC20008 //                                  lw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CD48,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CD4C,extended,AFC40008 //                                  sw      $a0, 0x170+var_168($fp)
patch=0,EE,2035CD50,extended,A0430000 //                                  sb      $v1, 0($v0)
//
//                              loc_35CD54:
patch=0,EE,2035CD54,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CD58,extended,80420000 //                                  lb      $v0, 0($v0)
patch=0,EE,2035CD5C,extended,2442FFD0 //                                  addiu   $v0, -0x30
patch=0,EE,2035CD60,extended,2C42000A //                                  sltiu   $v0, 0xA
patch=0,EE,2035CD64,extended,304200FF //                                  andi    $v0, 0xFF
patch=0,EE,2035CD68,extended,1440FFF2 //                                  bnez    $v0, loc_35CD34
patch=0,EE,2035CD6C,extended,00000000 //                                  nop
//
//                              loc_35CD70:
patch=0,EE,2035CD70,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CD74,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CD78,extended,24020068 //                                  li      $v0, 0x68  # 'h'
patch=0,EE,2035CD7C,extended,10620006 //                                  beq     $v1, $v0, loc_35CD98
patch=0,EE,2035CD80,extended,00000000 //                                  nop
patch=0,EE,2035CD84,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CD88,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CD8C,extended,2402006C //                                  li      $v0, 0x6C  # 'l'
patch=0,EE,2035CD90,extended,14620009 //                                  bne     $v1, $v0, loc_35CDB8
patch=0,EE,2035CD94,extended,00000000 //                                  nop
//
//                              loc_35CD98:
patch=0,EE,2035CD98,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CD9C,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CDA0,extended,AFC30004 //                                  sw      $v1, 0x170+var_16C($fp)
patch=0,EE,2035CDA4,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CDA8,extended,8FC20008 //                                  lw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CDAC,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CDB0,extended,AFC40008 //                                  sw      $a0, 0x170+var_168($fp)
patch=0,EE,2035CDB4,extended,A0430000 //                                  sb      $v1, 0($v0)
//
//                              loc_35CDB8:
patch=0,EE,2035CDB8,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CDBC,extended,80420000 //                                  lb      $v0, 0($v0)
patch=0,EE,2035CDC0,extended,24030063 //                                  li      $v1, 0x63  # 'c'
patch=0,EE,2035CDC4,extended,10430032 //                                  beq     $v0, $v1, loc_35CE90
patch=0,EE,2035CDC8,extended,00000000 //                                  nop
patch=0,EE,2035CDCC,extended,24030073 //                                  li      $v1, 0x73  # 's'
patch=0,EE,2035CDD0,extended,1443004C //                                  bne     $v0, $v1, loc_35CF04
patch=0,EE,2035CDD4,extended,00000000 //                                  nop
patch=0,EE,2035CDD8,extended,00003025 //                                  move    $a2, $zero       # unsigned __int8
patch=0,EE,2035CDDC,extended,00002825 //                                  move    $a1, $zero       # char *
patch=0,EE,2035CDE0,extended,8FC40160 //                                  lw      $a0, 0x170+var_10($fp)  # CRunningScript *
patch=0,EE,2035CDE4,extended,0C0D71FA //                                  jal     readString(CRunningScript *,char *,uchar)
patch=0,EE,2035CDE8,extended,00000000 //                                  nop
patch=0,EE,2035CDEC,extended,AFC2001C //                                  sw      $v0, 0x170+var_154($fp)
patch=0,EE,2035CDF0,extended,8FC2001C //                                  lw      $v0, 0x170+var_154($fp)
patch=0,EE,2035CDF4,extended,10400004 //                                  beqz    $v0, loc_35CE08
patch=0,EE,2035CDF8,extended,00000000 //                                  nop
patch=0,EE,2035CDFC,extended,8FC2001C //                                  lw      $v0, 0x170+var_154($fp)
patch=0,EE,2035CE00,extended,10000003 //                                  b       loc_35CE10
patch=0,EE,2035CE04,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CE08:
patch=0,EE,2035CE08,extended,3C020036 //
patch=0,EE,2035CE0C,extended,2442F1B8 //                      li      $v0, none
//
//                              loc_35CE10:
patch=0,EE,2035CE10,extended,AFC20014 //                                 sw      $v0, 0x170+var_15C($fp)
patch=0,EE,2035CE14,extended,10000015 //                                  b       loc_35CE6C
patch=0,EE,2035CE18,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CE1C:
patch=0,EE,2035CE1C,extended,8FC20000 //                                  lw      $v0, 0x170+var_170($fp)
patch=0,EE,2035CE20,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CE24,extended,AFC30000 //                                  sw      $v1, 0x170+var_170($fp)
patch=0,EE,2035CE28,extended,8FC30168 //                                  lw      $v1, 0x170+var_8($fp)
patch=0,EE,2035CE2C,extended,0043102B //                                  sltu    $v0, $v1
patch=0,EE,2035CE30,extended,38420001 //                                  xori    $v0, 1
patch=0,EE,2035CE34,extended,304200FF //                                  andi    $v0, 0xFF
patch=0,EE,2035CE38,extended,10400004 //                                  beqz    $v0, loc_35CE4C
patch=0,EE,2035CE3C,extended,00000000 //                                  nop
patch=0,EE,2035CE40,extended,2402FFFF //                                  li      $v0, 0xFFFFFFFF
patch=0,EE,2035CE44,extended,100000C5 //                                  b       loc_35D15C
patch=0,EE,2035CE48,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CE4C:
patch=0,EE,2035CE4C,extended,8FC20014 //                                  lw      $v0, 0x170+var_15C($fp)
patch=0,EE,2035CE50,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CE54,extended,AFC30014 //                                  sw      $v1, 0x170+var_15C($fp)
patch=0,EE,2035CE58,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CE5C,extended,8FC20164 //                                  lw      $v0, 0x170+var_C($fp)
patch=0,EE,2035CE60,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CE64,extended,AFC40164 //                                  sw      $a0, 0x170+var_C($fp)
patch=0,EE,2035CE68,extended,A0430000 //                                  sb      $v1, 0($v0)
//
//                              loc_35CE6C:
patch=0,EE,2035CE6C,extended,8FC20014 //                                  lw      $v0, 0x170+var_15C($fp)
patch=0,EE,2035CE70,extended,80420000 //                                  lb      $v0, 0($v0)
patch=0,EE,2035CE74,extended,1440FFE9 //                                  bnez    $v0, loc_35CE1C
patch=0,EE,2035CE78,extended,00000000 //                                  nop
patch=0,EE,2035CE7C,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CE80,extended,24420001 //                                  addiu   $v0, 1
patch=0,EE,2035CE84,extended,AFC20004 //                                  sw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CE88,extended,100000A3 //                                  b       loc_35D118
patch=0,EE,2035CE8C,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CE90:
patch=0,EE,2035CE90,extended,8FC20000 //                                  lw      $v0, 0x170+var_170($fp)
patch=0,EE,2035CE94,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035CE98,extended,AFC30000 //                                  sw      $v1, 0x170+var_170($fp)
patch=0,EE,2035CE9C,extended,8FC30168 //                                  lw      $v1, 0x170+var_8($fp)
patch=0,EE,2035CEA0,extended,0043102B //                                  sltu    $v0, $v1
patch=0,EE,2035CEA4,extended,38420001 //                                  xori    $v0, 1
patch=0,EE,2035CEA8,extended,304200FF //                                  andi    $v0, 0xFF
patch=0,EE,2035CEAC,extended,10400004 //                                  beqz    $v0, loc_35CEC0
patch=0,EE,2035CEB0,extended,00000000 //                                  nop
patch=0,EE,2035CEB4,extended,2402FFFF //                                  li      $v0, 0xFFFFFFFF
patch=0,EE,2035CEB8,extended,100000A8 //                                  b       loc_35D15C
patch=0,EE,2035CEBC,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CEC0:
patch=0,EE,2035CEC0,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035CEC4,extended,8FC40160 //                                  lw      $a0, 0x170+var_10($fp)
patch=0,EE,2035CEC8,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035CECC,extended,00000000 //                                  nop
patch=0,EE,2035CED0,extended,3C020070 //
patch=0,EE,2035CED4,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035CED8,extended,00021E00 //                                 sll     $v1, $v0, 24
patch=0,EE,2035CEDC,extended,00031E03 //                                  sra     $v1, 24
patch=0,EE,2035CEE0,extended,8FC20164 //                                  lw      $v0, 0x170+var_C($fp)
patch=0,EE,2035CEE4,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CEE8,extended,AFC40164 //                                  sw      $a0, 0x170+var_C($fp)
patch=0,EE,2035CEEC,extended,A0430000 //                                  sb      $v1, 0($v0)
patch=0,EE,2035CEF0,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CEF4,extended,24420001 //                                  addiu   $v0, 1
patch=0,EE,2035CEF8,extended,AFC20004 //                                  sw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CEFC,extended,10000086 //                                  b       loc_35D118
patch=0,EE,2035CF00,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CF04:
patch=0,EE,2035CF04,extended,27C20020 //                                  addiu   $v0, $fp, 0x170+var_150
patch=0,EE,2035CF08,extended,AFC20018 //                                  sw      $v0, 0x170+var_158($fp)
patch=0,EE,2035CF0C,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CF10,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CF14,extended,24020070 //                                  li      $v0, 0x70  # 'p'
patch=0,EE,2035CF18,extended,10620006 //                                  beq     $v1, $v0, loc_35CF34
patch=0,EE,2035CF1C,extended,00000000 //                                  nop
patch=0,EE,2035CF20,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CF24,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CF28,extended,24020050 //                                  li      $v0, 0x50  # 'P'
patch=0,EE,2035CF2C,extended,1462000F //                                  bne     $v1, $v0, loc_35CF6C
patch=0,EE,2035CF30,extended,00000000 //                                  nop
//
//                              loc_35CF34:
patch=0,EE,2035CF34,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035CF38,extended,8FC40160 //                                  lw      $a0, 0x170+var_10($fp)
patch=0,EE,2035CF3C,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035CF40,extended,00000000 //                                  nop
patch=0,EE,2035CF44,extended,3C020070 //
patch=0,EE,2035CF48,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035CF4C,extended,00403025 //                                 move    $a2, $v0
patch=0,EE,2035CF50,extended,3C020036 //                                  lui     $v0, 0x36  # '6'
patch=0,EE,2035CF54,extended,2445F1A8 //                                  addiu   $a1, $v0, (ptrstr - 0x360000)
patch=0,EE,2035CF58,extended,8FC40018 //                                  lw      $a0, 0x170+var_158($fp)  # char *
patch=0,EE,2035CF5C,extended,0C1543C4 //                                  jal     sprintf(char *,char const*,...)
patch=0,EE,2035CF60,extended,00000000 //                                  nop
patch=0,EE,2035CF64,extended,1000004E //                                  b       loc_35D0A0
patch=0,EE,2035CF68,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35CF6C:
patch=0,EE,2035CF6C,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CF70,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CF74,extended,8FC20008 //                                  lw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CF78,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035CF7C,extended,AFC40008 //                                  sw      $a0, 0x170+var_168($fp)
patch=0,EE,2035CF80,extended,A0430000 //                                  sb      $v1, 0($v0)
patch=0,EE,2035CF84,extended,8FC20008 //                                  lw      $v0, 0x170+var_168($fp)
patch=0,EE,2035CF88,extended,A0400000 //                                  sb      $zero, 0($v0)
patch=0,EE,2035CF8C,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CF90,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CF94,extended,24020061 //                                  li      $v0, 0x61  # 'a'
patch=0,EE,2035CF98,extended,10620024 //                                  beq     $v1, $v0, loc_35D02C
patch=0,EE,2035CF9C,extended,00000000 //                                  nop
patch=0,EE,2035CFA0,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CFA4,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CFA8,extended,24020041 //                                  li      $v0, 0x41  # 'A'
patch=0,EE,2035CFAC,extended,1062001F //                                  beq     $v1, $v0, loc_35D02C
patch=0,EE,2035CFB0,extended,00000000 //                                  nop
patch=0,EE,2035CFB4,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CFB8,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CFBC,extended,24020065 //                                  li      $v0, 0x65  # 'e'
patch=0,EE,2035CFC0,extended,1062001A //                                  beq     $v1, $v0, loc_35D02C
patch=0,EE,2035CFC4,extended,00000000 //                                  nop
patch=0,EE,2035CFC8,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CFCC,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CFD0,extended,24020045 //                                  li      $v0, 0x45  # 'E'
patch=0,EE,2035CFD4,extended,10620015 //                                  beq     $v1, $v0, loc_35D02C
patch=0,EE,2035CFD8,extended,00000000 //                                  nop
patch=0,EE,2035CFDC,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CFE0,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CFE4,extended,24020066 //                                  li      $v0, 0x66  # 'f'
patch=0,EE,2035CFE8,extended,10620010 //                                  beq     $v1, $v0, loc_35D02C
patch=0,EE,2035CFEC,extended,00000000 //                                  nop
patch=0,EE,2035CFF0,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035CFF4,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035CFF8,extended,24020046 //                                  li      $v0, 0x46  # 'F'
patch=0,EE,2035CFFC,extended,1062000B //                                  beq     $v1, $v0, loc_35D02C
patch=0,EE,2035D000,extended,00000000 //                                  nop
patch=0,EE,2035D004,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035D008,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035D00C,extended,24020067 //                                  li      $v0, 0x67  # 'g'
patch=0,EE,2035D010,extended,10620006 //                                  beq     $v1, $v0, loc_35D02C
patch=0,EE,2035D014,extended,00000000 //                                  nop
patch=0,EE,2035D018,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035D01C,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035D020,extended,24020047 //                                  li      $v0, 0x47  # 'G'
patch=0,EE,2035D024,extended,14620012 //                                  bne     $v1, $v0, loc_35D070
patch=0,EE,2035D028,extended,00000000 //                                  nop
//
//                              loc_35D02C:
patch=0,EE,2035D02C,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035D030,extended,8FC40160 //                                  lw      $a0, 0x170+var_10($fp)
patch=0,EE,2035D034,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035D038,extended,00000000 //                                  nop
patch=0,EE,2035D03C,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D040,extended,C440DFB0 //                                  lwc1    $f0, opcodeParams
patch=0,EE,2035D044,extended,46000306 //                                  mov.s   $f12, $f0        # float
patch=0,EE,2035D048,extended,0C14C450 //                                  jal     __extendsfdf2(float)
patch=0,EE,2035D04C,extended,00000000 //                                  nop
patch=0,EE,2035D050,extended,00403025 //                                  move    $a2, $v0
patch=0,EE,2035D054,extended,3C020036 //                                  lui     $v0, 0x36  # '6'
patch=0,EE,2035D058,extended,2445F1B0 //                                  addiu   $a1, $v0, (fltstr - 0x360000)  # char *
patch=0,EE,2035D05C,extended,8FC40018 //                                  lw      $a0, 0x170+var_158($fp)  # char *
patch=0,EE,2035D060,extended,0C1543C4 //                                  jal     sprintf(char *,char const*,...)
patch=0,EE,2035D064,extended,00000000 //                                  nop
patch=0,EE,2035D068,extended,1000000D //                                  b       loc_35D0A0
patch=0,EE,2035D06C,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D070:
patch=0,EE,2035D070,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035D074,extended,8FC40160 //                                  lw      $a0, 0x170+var_10($fp)
patch=0,EE,2035D078,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035D07C,extended,00000000 //                                  nop
patch=0,EE,2035D080,extended,3C020070 //
patch=0,EE,2035D084,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035D088,extended,27C30120 //                                 addiu   $v1, $fp, 0x170+var_50
patch=0,EE,2035D08C,extended,00403025 //                                  move    $a2, $v0
patch=0,EE,2035D090,extended,00602825 //                                  move    $a1, $v1         # char *
patch=0,EE,2035D094,extended,8FC40018 //                                  lw      $a0, 0x170+var_158($fp)  # char *
patch=0,EE,2035D098,extended,0C1543C4 //                                  jal     sprintf(char *,char const*,...)
patch=0,EE,2035D09C,extended,00000000 //                                  nop
//
//                              loc_35D0A0:
patch=0,EE,2035D0A0,extended,10000015 //                                  b       loc_35D0F8
patch=0,EE,2035D0A4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D0A8:
patch=0,EE,2035D0A8,extended,8FC20000 //                                  lw      $v0, 0x170+var_170($fp)
patch=0,EE,2035D0AC,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035D0B0,extended,AFC30000 //                                  sw      $v1, 0x170+var_170($fp)
patch=0,EE,2035D0B4,extended,8FC30168 //                                  lw      $v1, 0x170+var_8($fp)
patch=0,EE,2035D0B8,extended,0043102B //                                  sltu    $v0, $v1
patch=0,EE,2035D0BC,extended,38420001 //                                  xori    $v0, 1
patch=0,EE,2035D0C0,extended,304200FF //                                  andi    $v0, 0xFF
patch=0,EE,2035D0C4,extended,10400004 //                                  beqz    $v0, loc_35D0D8
patch=0,EE,2035D0C8,extended,00000000 //                                  nop
patch=0,EE,2035D0CC,extended,2402FFFF //                                  li      $v0, 0xFFFFFFFF
patch=0,EE,2035D0D0,extended,10000022 //                                  b       loc_35D15C
patch=0,EE,2035D0D4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D0D8:
patch=0,EE,2035D0D8,extended,8FC20018 //                                  lw      $v0, 0x170+var_158($fp)
patch=0,EE,2035D0DC,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035D0E0,extended,AFC30018 //                                  sw      $v1, 0x170+var_158($fp)
patch=0,EE,2035D0E4,extended,80430000 //                                  lb      $v1, 0($v0)
patch=0,EE,2035D0E8,extended,8FC20164 //                                  lw      $v0, 0x170+var_C($fp)
patch=0,EE,2035D0EC,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035D0F0,extended,AFC40164 //                                  sw      $a0, 0x170+var_C($fp)
patch=0,EE,2035D0F4,extended,A0430000 //                                  sb      $v1, 0($v0)
//
//                              loc_35D0F8:
patch=0,EE,2035D0F8,extended,8FC20018 //                                  lw      $v0, 0x170+var_158($fp)
patch=0,EE,2035D0FC,extended,80420000 //                                  lb      $v0, 0($v0)
patch=0,EE,2035D100,extended,1440FFE9 //                                  bnez    $v0, loc_35D0A8
patch=0,EE,2035D104,extended,00000000 //                                  nop
patch=0,EE,2035D108,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035D10C,extended,24420001 //                                  addiu   $v0, 1
patch=0,EE,2035D110,extended,AFC20004 //                                  sw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035D114,extended,00000000 //                                  nop
//
//                              loc_35D118:
patch=0,EE,2035D118,extended,8FC20004 //                                  lw      $v0, 0x170+var_16C($fp)
patch=0,EE,2035D11C,extended,80420000 //                                  lb      $v0, 0($v0)
patch=0,EE,2035D120,extended,1440FE43 //                                  bnez    $v0, loc_35CA30
patch=0,EE,2035D124,extended,00000000 //                                  nop
patch=0,EE,2035D128,extended,8FC30000 //                                  lw      $v1, 0x170+var_170($fp)
patch=0,EE,2035D12C,extended,8FC20168 //                                  lw      $v0, 0x170+var_8($fp)
patch=0,EE,2035D130,extended,0062102B //                                  sltu    $v0, $v1, $v0
patch=0,EE,2035D134,extended,14400004 //                                  bnez    $v0, loc_35D148
patch=0,EE,2035D138,extended,00000000 //                                  nop
patch=0,EE,2035D13C,extended,2402FFFF //                                  li      $v0, 0xFFFFFFFF
patch=0,EE,2035D140,extended,10000006 //                                  b       loc_35D15C
patch=0,EE,2035D144,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D148:
patch=0,EE,2035D148,extended,8FC20164 //                                  lw      $v0, 0x170+var_C($fp)
patch=0,EE,2035D14C,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035D150,extended,AFC30164 //                                  sw      $v1, 0x170+var_C($fp)
patch=0,EE,2035D154,extended,A0400000 //                                  sb      $zero, 0($v0)
patch=0,EE,2035D158,extended,8FC20000 //                                  lw      $v0, 0x170+var_170($fp)
//
//                              loc_35D15C:
patch=0,EE,2035D15C,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D160,extended,DFBF0178 //                                  ld      $ra, 0x170+var_s8($sp)
patch=0,EE,2035D164,extended,DFBE0170 //                                  ld      $fp, 0x170+var_s0($sp)
patch=0,EE,2035D168,extended,27BD0180 //                                  addiu   $sp, 0x180
patch=0,EE,2035D16C,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D170,extended,00000000 //                                  nop
//                               # } // starts at 35C9AC
//                               # End of function format(CRunningScript *,char *,uint,char const*)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl customOpcodeHandler(CRunningScript *, unsigned short)
//                              customOpcodeHandler(CRunningScript *, unsigned short):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035D174,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035D178,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D17C,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D180,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D184,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D188,extended,00A01025 //                                  move    $v0, $a1
patch=0,EE,2035D18C,extended,A7C20004 //                                  sh      $v0, 0x10+var_C($fp)
patch=0,EE,2035D190,extended,97C20004 //                                  lhu     $v0, 0x10+var_C($fp)
patch=0,EE,2035D194,extended,2443F574 //                                  addiu   $v1, $v0, -0xA8C
patch=0,EE,2035D198,extended,3C020036 //                                  lui     $v0, 0x36  # '6'
patch=0,EE,2035D19C,extended,00031880 //                                  sll     $v1, 2
patch=0,EE,2035D1A0,extended,2442F3D0 //                                  li      $v0, _fdata
patch=0,EE,2035D1A4,extended,00621021 //                                  addu    $v0, $v1, $v0
patch=0,EE,2035D1A8,extended,8C420000 //                                  lw      $v0, 0($v0)
patch=0,EE,2035D1AC,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D1B0,extended,0040F809 //                                  jalr    $v0
patch=0,EE,2035D1B4,extended,00000000 //                                  nop
patch=0,EE,2035D1B8,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D1BC,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D1C0,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D1C4,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035D1C8,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D1CC,extended,00000000 //                                  nop
//                               # } // starts at 35D174
//                               # End of function customOpcodeHandler(CRunningScript *,ushort)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x18
//
//                                              .globl opcode_defa(CRunningScript *)
//                              opcode_defa(CRunningScript *):
//
//                              var_18          = -0x18
//                              var_s0          =  0
//
//                               # __unwind {
patch=0,EE,2035D1D0,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035D1D4,extended,FFBE0018 //                                  sd      $fp, 0x18+var_s0($sp)
patch=0,EE,2035D1D8,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D1DC,extended,AFC40000 //                                  sw      $a0, 0x18+var_18($fp)
patch=0,EE,2035D1E0,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D1E4,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D1E8,extended,DFBE0018 //                                  ld      $fp, 0x18+var_s0($sp)
patch=0,EE,2035D1EC,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035D1F0,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D1F4,extended,00000000 //                                  nop
//                               # } // starts at 35D1D0
//                               # End of function opcode_defa(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x20
//
//                                              .globl opcode_0A8C(CRunningScript *)
//                              opcode_0A8C(CRunningScript *):
//
//                              var_20          = -0x20
//                              var_1C          = -0x1C
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035D1F8,extended,27BDFFD0 //                                  addiu   $sp, -0x30
patch=0,EE,2035D1FC,extended,FFBF0028 //                                  sd      $ra, 0x20+var_s8($sp)
patch=0,EE,2035D200,extended,FFBE0020 //                                  sd      $fp, 0x20+var_s0($sp)
patch=0,EE,2035D204,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D208,extended,AFC40010 //                                  sw      $a0, 0x20+var_10($fp)
patch=0,EE,2035D20C,extended,24050003 //                                  li      $a1, 3
patch=0,EE,2035D210,extended,8FC40010 //                                  lw      $a0, 0x20+var_10($fp)
patch=0,EE,2035D214,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035D218,extended,00000000 //                                  nop
patch=0,EE,2035D21C,extended,3C020070 //
patch=0,EE,2035D220,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035D224,extended,AFC20000 //                                 sw      $v0, 0x20+var_20($fp)
patch=0,EE,2035D228,extended,3C020070 //
patch=0,EE,2035D22C,extended,2442DFB0 //                      li      $v0, opcodeParams
patch=0,EE,2035D230,extended,8C420004 //                                 lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
patch=0,EE,2035D234,extended,AFC20004 //                                  sw      $v0, 0x20+var_1C($fp)
patch=0,EE,2035D238,extended,8FC30004 //                                  lw      $v1, 0x20+var_1C($fp)
patch=0,EE,2035D23C,extended,24020002 //                                  li      $v0, 2
patch=0,EE,2035D240,extended,1062000D //                                  beq     $v1, $v0, loc_35D278
patch=0,EE,2035D244,extended,00000000 //                                  nop
patch=0,EE,2035D248,extended,8FC30004 //                                  lw      $v1, 0x20+var_1C($fp)
patch=0,EE,2035D24C,extended,24020004 //                                  li      $v0, 4
patch=0,EE,2035D250,extended,10620011 //                                  beq     $v1, $v0, loc_35D298
patch=0,EE,2035D254,extended,00000000 //                                  nop
patch=0,EE,2035D258,extended,3C020070 //
patch=0,EE,2035D25C,extended,2442DFB0 //                      li      $v0, opcodeParams
patch=0,EE,2035D260,extended,90420008 //                                 lbu     $v0, (dword_6FDFB8 - 0x6FDFB0)($v0)
patch=0,EE,2035D264,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035D268,extended,8FC20000 //                                  lw      $v0, 0x20+var_20($fp)
patch=0,EE,2035D26C,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035D270,extended,1000000F //                                  b       loc_35D2B0
patch=0,EE,2035D274,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D278:
patch=0,EE,2035D278,extended,3C020070 //
patch=0,EE,2035D27C,extended,2442DFB0 //                      li      $v0, opcodeParams
patch=0,EE,2035D280,extended,84420008 //                                 lh      $v0, (dword_6FDFB8 - 0x6FDFB0)($v0)
patch=0,EE,2035D284,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035D288,extended,8FC20000 //                                  lw      $v0, 0x20+var_20($fp)
patch=0,EE,2035D28C,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035D290,extended,10000007 //                                  b       loc_35D2B0
patch=0,EE,2035D294,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D298:
patch=0,EE,2035D298,extended,3C020070 //
patch=0,EE,2035D29C,extended,2442DFB0 //                      li      $v0, opcodeParams
patch=0,EE,2035D2A0,extended,8C430008 //                                 lw      $v1, (dword_6FDFB8 - 0x6FDFB0)($v0)
patch=0,EE,2035D2A4,extended,8FC20000 //                                  lw      $v0, 0x20+var_20($fp)
patch=0,EE,2035D2A8,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035D2AC,extended,00000000 //                                  nop
//
//                              loc_35D2B0:
patch=0,EE,2035D2B0,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D2B4,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D2B8,extended,DFBF0028 //                                  ld      $ra, 0x20+var_s8($sp)
patch=0,EE,2035D2BC,extended,DFBE0020 //                                  ld      $fp, 0x20+var_s0($sp)
patch=0,EE,2035D2C0,extended,27BD0030 //                                  addiu   $sp, 0x30
patch=0,EE,2035D2C4,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D2C8,extended,00000000 //                                  nop
//                               # } // starts at 35D1F8
//                               # End of function opcode_0A8C(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x20
//
//                               # _DWORD __fastcall opcode_0A8D(CRunningScript *)
//                                              .globl opcode_0A8D(CRunningScript *)
//                              opcode_0A8D(CRunningScript *):
//
//                              var_20          = -0x20
//                              var_1C          = -0x1C
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035D2CC,extended,27BDFFD0 //                                  addiu   $sp, -0x30
patch=0,EE,2035D2D0,extended,FFBF0028 //                                  sd      $ra, 0x20+var_s8($sp)
patch=0,EE,2035D2D4,extended,FFBE0020 //                                  sd      $fp, 0x20+var_s0($sp)
patch=0,EE,2035D2D8,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D2DC,extended,AFC40010 //                                  sw      $a0, 0x20+var_10($fp)
patch=0,EE,2035D2E0,extended,03C02825 //                                  move    $a1, $fp
patch=0,EE,2035D2E4,extended,8FC40010 //                                  lw      $a0, 0x20+var_10($fp)
patch=0,EE,2035D2E8,extended,0C0D7BD2 //                                  jal     operator>><ulong>(CRunningScript &,ulong *&)
patch=0,EE,2035D2EC,extended,00000000 //                                  nop
patch=0,EE,2035D2F0,extended,27C30004 //                                  addiu   $v1, $fp, 0x20+var_1C
patch=0,EE,2035D2F4,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035D2F8,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035D2FC,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035D300,extended,00000000 //                                  nop
patch=0,EE,2035D304,extended,8FC20004 //                                  lw      $v0, 0x20+var_1C($fp)
patch=0,EE,2035D308,extended,24030002 //                                  li      $v1, 2
patch=0,EE,2035D30C,extended,1043000A //                                  beq     $v0, $v1, loc_35D338
patch=0,EE,2035D310,extended,00000000 //                                  nop
patch=0,EE,2035D314,extended,24030004 //                                  li      $v1, 4
patch=0,EE,2035D318,extended,1043000F //                                  beq     $v0, $v1, loc_35D358
patch=0,EE,2035D31C,extended,00000000 //                                  nop
patch=0,EE,2035D320,extended,8FC20000 //                                  lw      $v0, 0x20+var_20($fp)
patch=0,EE,2035D324,extended,90430000 //                                  lbu     $v1, 0($v0)
patch=0,EE,2035D328,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D32C,extended,A043DFB0 //                                  sb      $v1, opcodeParams
patch=0,EE,2035D330,extended,1000000E //                                  b       loc_35D36C
patch=0,EE,2035D334,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D338:
patch=0,EE,2035D338,extended,8FC20000 //                                  lw      $v0, 0x20+var_20($fp)
patch=0,EE,2035D33C,extended,94420000 //                                  lhu     $v0, 0($v0)
patch=0,EE,2035D340,extended,00021C00 //                                  sll     $v1, $v0, 16
patch=0,EE,2035D344,extended,00031C03 //                                  sra     $v1, 16
patch=0,EE,2035D348,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D34C,extended,A443DFB0 //                                  sh      $v1, opcodeParams
patch=0,EE,2035D350,extended,10000006 //                                  b       loc_35D36C
patch=0,EE,2035D354,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D358:
patch=0,EE,2035D358,extended,8FC20000 //                                  lw      $v0, 0x20+var_20($fp)
patch=0,EE,2035D35C,extended,8C430000 //                                  lw      $v1, 0($v0)
patch=0,EE,2035D360,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D364,extended,AC43DFB0 //                                  sw      $v1, opcodeParams
patch=0,EE,2035D368,extended,00000000 //                                  nop
//
//                              loc_35D36C:
patch=0,EE,2035D36C,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035D370,extended,8FC40010 //                                  lw      $a0, 0x20+var_10($fp)
patch=0,EE,2035D374,extended,0C07DF48 //                                  jal     SetScriptParams(CRunningScript *,int)
patch=0,EE,2035D378,extended,00000000 //                                  nop
patch=0,EE,2035D37C,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D380,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D384,extended,DFBF0028 //                                  ld      $ra, 0x20+var_s8($sp)
patch=0,EE,2035D388,extended,DFBE0020 //                                  ld      $fp, 0x20+var_s0($sp)
patch=0,EE,2035D38C,extended,27BD0030 //                                  addiu   $sp, 0x30
patch=0,EE,2035D390,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D394,extended,00000000 //                                  nop
//                               # } // starts at 35D2CC
//                               # End of function opcode_0A8D(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl opcode_0A8E(CRunningScript *)
//                              opcode_0A8E(CRunningScript *):
//
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035D398,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035D39C,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D3A0,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D3A4,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D3A8,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D3AC,extended,24050002 //                                  li      $a1, 2
patch=0,EE,2035D3B0,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D3B4,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035D3B8,extended,00000000 //                                  nop
patch=0,EE,2035D3BC,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D3C0,extended,8C43DFB0 //                                  lw      $v1, opcodeParams
patch=0,EE,2035D3C4,extended,3C020070 //
patch=0,EE,2035D3C8,extended,2442DFB0 //                      li      $v0, opcodeParams
patch=0,EE,2035D3CC,extended,8C420004 //                                 lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
patch=0,EE,2035D3D0,extended,00621821 //                                  addu    $v1, $v0
patch=0,EE,2035D3D4,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D3D8,extended,AC43DFB0 //                                  sw      $v1, opcodeParams
patch=0,EE,2035D3DC,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035D3E0,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D3E4,extended,0C07DF48 //                                  jal     SetScriptParams(CRunningScript *,int)
patch=0,EE,2035D3E8,extended,00000000 //                                  nop
patch=0,EE,2035D3EC,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D3F0,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D3F4,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D3F8,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D3FC,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035D400,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D404,extended,00000000 //                                  nop
//                               # } // starts at 35D398
//                               # End of function opcode_0A8E(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl opcode_0A8F(CRunningScript *)
//                              opcode_0A8F(CRunningScript *):
//
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035D408,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035D40C,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D410,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D414,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D418,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D41C,extended,24050002 //                                  li      $a1, 2
patch=0,EE,2035D420,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D424,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035D428,extended,00000000 //                                  nop
patch=0,EE,2035D42C,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D430,extended,8C43DFB0 //                                  lw      $v1, opcodeParams
patch=0,EE,2035D434,extended,3C020070 //
patch=0,EE,2035D438,extended,2442DFB0 //                      li      $v0, opcodeParams
patch=0,EE,2035D43C,extended,8C420004 //                                 lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
patch=0,EE,2035D440,extended,00621823 //                                  subu    $v1, $v0
patch=0,EE,2035D444,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D448,extended,AC43DFB0 //                                  sw      $v1, opcodeParams
patch=0,EE,2035D44C,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035D450,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D454,extended,0C07DF48 //                                  jal     SetScriptParams(CRunningScript *,int)
patch=0,EE,2035D458,extended,00000000 //                                  nop
patch=0,EE,2035D45C,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D460,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D464,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D468,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D46C,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035D470,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D474,extended,00000000 //                                  nop
//                               # } // starts at 35D408
//                               # End of function opcode_0A8F(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl opcode_0A90(CRunningScript *)
//                              opcode_0A90(CRunningScript *):
//
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035D478,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035D47C,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D480,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D484,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D488,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D48C,extended,24050002 //                                  li      $a1, 2
patch=0,EE,2035D490,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D494,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035D498,extended,00000000 //                                  nop
patch=0,EE,2035D49C,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D4A0,extended,8C43DFB0 //                                  lw      $v1, opcodeParams
patch=0,EE,2035D4A4,extended,3C020070 //
patch=0,EE,2035D4A8,extended,2442DFB0 //                      li      $v0, opcodeParams
patch=0,EE,2035D4AC,extended,8C420004 //                                 lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
patch=0,EE,2035D4B0,extended,00621818 //                                  mult    $v1, $v0
patch=0,EE,2035D4B4,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D4B8,extended,AC43DFB0 //                                  sw      $v1, opcodeParams
patch=0,EE,2035D4BC,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035D4C0,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D4C4,extended,0C07DF48 //                                  jal     SetScriptParams(CRunningScript *,int)
patch=0,EE,2035D4C8,extended,00000000 //                                  nop
patch=0,EE,2035D4CC,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D4D0,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D4D4,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D4D8,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D4DC,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035D4E0,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D4E4,extended,00000000 //                                  nop
//                               # } // starts at 35D478
//                               # End of function opcode_0A90(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl opcode_0A91(CRunningScript *)
//                              opcode_0A91(CRunningScript *):
//
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035D4E8,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035D4EC,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D4F0,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D4F4,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D4F8,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D4FC,extended,24050002 //                                  li      $a1, 2
patch=0,EE,2035D500,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D504,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035D508,extended,00000000 //                                  nop
patch=0,EE,2035D50C,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D510,extended,8C43DFB0 //                                  lw      $v1, opcodeParams
patch=0,EE,2035D514,extended,3C020070 //
patch=0,EE,2035D518,extended,2442DFB0 //                      li      $v0, opcodeParams
patch=0,EE,2035D51C,extended,8C420004 //                                 lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
patch=0,EE,2035D520,extended,0062001A //                                  div     $v1, $v0
patch=0,EE,2035D524,extended,004001F4 //                                  teq     $v0, $zero  #7
patch=0,EE,2035D528,extended,00001010 //                                  mfhi    $v0
patch=0,EE,2035D52C,extended,00001812 //                                  mflo    $v1
patch=0,EE,2035D530,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D534,extended,AC43DFB0 //                                  sw      $v1, opcodeParams
patch=0,EE,2035D538,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035D53C,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D540,extended,0C07DF48 //                                  jal     SetScriptParams(CRunningScript *,int)
patch=0,EE,2035D544,extended,00000000 //                                  nop
patch=0,EE,2035D548,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D54C,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D550,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D554,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D558,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035D55C,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D560,extended,00000000 //                                  nop
//                               # } // starts at 35D4E8
//                               # End of function opcode_0A91(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x28
//
//                               # _DWORD __fastcall opcode_0A96(CRunningScript *)
//                                              .globl opcode_0A96(CRunningScript *)
//                              opcode_0A96(CRunningScript *):
//
//                              var_28          = -0x28
//                              var_18          = -0x18
//                              var_s0          =  0
//                              var_s8          =  8
//                              var_s10         =  0x10
//
//                               # __unwind {
patch=0,EE,2035D564,extended,27BDFFC0 //                                  addiu   $sp, -0x40
patch=0,EE,2035D568,extended,FFBF0038 //                                  sd      $ra, 0x28+var_s10($sp)
patch=0,EE,2035D56C,extended,FFBE0030 //                                  sd      $fp, 0x28+var_s8($sp)
patch=0,EE,2035D570,extended,FFB00028 //                                  sd      $s0, 0x28+var_s0($sp)
patch=0,EE,2035D574,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D578,extended,AFC40010 //                                  sw      $a0, 0x28+var_18($fp)
patch=0,EE,2035D57C,extended,03C02825 //                                  move    $a1, $fp
patch=0,EE,2035D580,extended,8FC40010 //                                  lw      $a0, 0x28+var_18($fp)
patch=0,EE,2035D584,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035D588,extended,00000000 //                                  nop
patch=0,EE,2035D58C,extended,8FD00010 //                                  lw      $s0, 0x28+var_18($fp)
patch=0,EE,2035D590,extended,3C020067 //
patch=0,EE,2035D594,extended,8C42B918 //                      lw      $v0, pedPool
patch=0,EE,2035D598,extended,8FC30000 //                                 lw      $v1, 0x28+var_28($fp)
patch=0,EE,2035D59C,extended,00602825 //                                  move    $a1, $v1         # int
patch=0,EE,2035D5A0,extended,00402025 //                                  move    $a0, $v0         # unsigned int *
patch=0,EE,2035D5A4,extended,0C07FEEC //                                  jal     GetPedStruct(ulong *,int)
patch=0,EE,2035D5A8,extended,00000000 //                                  nop
patch=0,EE,2035D5AC,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035D5B0,extended,02002025 //                                  move    $a0, $s0
patch=0,EE,2035D5B4,extended,0C0D7B7F //                                  jal     operator<<(CRunningScript &,int)
patch=0,EE,2035D5B8,extended,00000000 //                                  nop
patch=0,EE,2035D5BC,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D5C0,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D5C4,extended,DFBF0038 //                                  ld      $ra, 0x28+var_s10($sp)
patch=0,EE,2035D5C8,extended,DFBE0030 //                                  ld      $fp, 0x28+var_s8($sp)
patch=0,EE,2035D5CC,extended,DFB00028 //                                  ld      $s0, 0x28+var_s0($sp)
patch=0,EE,2035D5D0,extended,27BD0040 //                                  addiu   $sp, 0x40
patch=0,EE,2035D5D4,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D5D8,extended,00000000 //                                  nop
//                               # } // starts at 35D564
//                               # End of function opcode_0A96(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x28
//
//                               # _DWORD __fastcall opcode_0A97(CRunningScript *)
//                                              .globl opcode_0A97(CRunningScript *)
//                              opcode_0A97(CRunningScript *):
//
//                              var_28          = -0x28
//                              var_18          = -0x18
//                              var_s0          =  0
//                              var_s8          =  8
//                              var_s10         =  0x10
//
//                               # __unwind {
patch=0,EE,2035D5DC,extended,27BDFFC0 //                                  addiu   $sp, -0x40
patch=0,EE,2035D5E0,extended,FFBF0038 //                                  sd      $ra, 0x28+var_s10($sp)
patch=0,EE,2035D5E4,extended,FFBE0030 //                                  sd      $fp, 0x28+var_s8($sp)
patch=0,EE,2035D5E8,extended,FFB00028 //                                  sd      $s0, 0x28+var_s0($sp)
patch=0,EE,2035D5EC,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D5F0,extended,AFC40010 //                                  sw      $a0, 0x28+var_18($fp)
patch=0,EE,2035D5F4,extended,03C02825 //                                  move    $a1, $fp
patch=0,EE,2035D5F8,extended,8FC40010 //                                  lw      $a0, 0x28+var_18($fp)
patch=0,EE,2035D5FC,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035D600,extended,00000000 //                                  nop
patch=0,EE,2035D604,extended,8FD00010 //                                  lw      $s0, 0x28+var_18($fp)
patch=0,EE,2035D608,extended,3C020067 //
patch=0,EE,2035D60C,extended,8C42B91C //                      lw      $v0, vehPool
patch=0,EE,2035D610,extended,8FC30000 //                                 lw      $v1, 0x28+var_28($fp)
patch=0,EE,2035D614,extended,00602825 //                                  move    $a1, $v1         # int
patch=0,EE,2035D618,extended,00402025 //                                  move    $a0, $v0         # unsigned int *
patch=0,EE,2035D61C,extended,0C07FEDC //                                  jal     GetVehStruct(ulong *,int)
patch=0,EE,2035D620,extended,00000000 //                                  nop
patch=0,EE,2035D624,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035D628,extended,02002025 //                                  move    $a0, $s0
patch=0,EE,2035D62C,extended,0C0D7B7F //                                  jal     operator<<(CRunningScript &,int)
patch=0,EE,2035D630,extended,00000000 //                                  nop
patch=0,EE,2035D634,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D638,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D63C,extended,DFBF0038 //                                  ld      $ra, 0x28+var_s10($sp)
patch=0,EE,2035D640,extended,DFBE0030 //                                  ld      $fp, 0x28+var_s8($sp)
patch=0,EE,2035D644,extended,DFB00028 //                                  ld      $s0, 0x28+var_s0($sp)
patch=0,EE,2035D648,extended,27BD0040 //                                  addiu   $sp, 0x40
patch=0,EE,2035D64C,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D650,extended,00000000 //                                  nop
//                               # } // starts at 35D5DC
//                               # End of function opcode_0A97(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x28
//
//                               # _DWORD __fastcall opcode_0A98(CRunningScript *)
//                                              .globl opcode_0A98(CRunningScript *)
//                              opcode_0A98(CRunningScript *):
//
//                              var_28          = -0x28
//                              var_18          = -0x18
//                              var_s0          =  0
//                              var_s8          =  8
//                              var_s10         =  0x10
//
//                               # __unwind {
patch=0,EE,2035D654,extended,27BDFFC0 //                                  addiu   $sp, -0x40
patch=0,EE,2035D658,extended,FFBF0038 //                                  sd      $ra, 0x28+var_s10($sp)
patch=0,EE,2035D65C,extended,FFBE0030 //                                  sd      $fp, 0x28+var_s8($sp)
patch=0,EE,2035D660,extended,FFB00028 //                                  sd      $s0, 0x28+var_s0($sp)
patch=0,EE,2035D664,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D668,extended,AFC40010 //                                  sw      $a0, 0x28+var_18($fp)
patch=0,EE,2035D66C,extended,03C02825 //                                  move    $a1, $fp
patch=0,EE,2035D670,extended,8FC40010 //                                  lw      $a0, 0x28+var_18($fp)
patch=0,EE,2035D674,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035D678,extended,00000000 //                                  nop
patch=0,EE,2035D67C,extended,8FD00010 //                                  lw      $s0, 0x28+var_18($fp)
patch=0,EE,2035D680,extended,3C020067 //
patch=0,EE,2035D684,extended,8C42B924 //                      lw      $v0, objPool
patch=0,EE,2035D688,extended,8FC30000 //                                 lw      $v1, 0x28+var_28($fp)
patch=0,EE,2035D68C,extended,00602825 //                                  move    $a1, $v1         # int
patch=0,EE,2035D690,extended,00402025 //                                  move    $a0, $v0         # unsigned int *
patch=0,EE,2035D694,extended,0C07FECC //                                  jal     GetObjStruct(ulong *,int)
patch=0,EE,2035D698,extended,00000000 //                                  nop
patch=0,EE,2035D69C,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035D6A0,extended,02002025 //                                  move    $a0, $s0
patch=0,EE,2035D6A4,extended,0C0D7B7F //                                  jal     operator<<(CRunningScript &,int)
patch=0,EE,2035D6A8,extended,00000000 //                                  nop
patch=0,EE,2035D6AC,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D6B0,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D6B4,extended,DFBF0038 //                                  ld      $ra, 0x28+var_s10($sp)
patch=0,EE,2035D6B8,extended,DFBE0030 //                                  ld      $fp, 0x28+var_s8($sp)
patch=0,EE,2035D6BC,extended,DFB00028 //                                  ld      $s0, 0x28+var_s0($sp)
patch=0,EE,2035D6C0,extended,27BD0040 //                                  addiu   $sp, 0x40
patch=0,EE,2035D6C4,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D6C8,extended,00000000 //                                  nop
//                               # } // starts at 35D654
//                               # End of function opcode_0A98(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl opcode_0A9F(CRunningScript *)
//                              opcode_0A9F(CRunningScript *):
//
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035D6CC,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035D6D0,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D6D4,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D6D8,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D6DC,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D6E0,extended,8FC30000 //                                  lw      $v1, 0x10+var_10($fp)
patch=0,EE,2035D6E4,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035D6E8,extended,AC43DFB0 //                                  sw      $v1, opcodeParams
patch=0,EE,2035D6EC,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035D6F0,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035D6F4,extended,0C07DF48 //                                  jal     SetScriptParams(CRunningScript *,int)
patch=0,EE,2035D6F8,extended,00000000 //                                  nop
patch=0,EE,2035D6FC,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D700,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D704,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035D708,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035D70C,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035D710,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D714,extended,00000000 //                                  nop
//                               # } // starts at 35D6CC
//                               # End of function opcode_0A9F(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x28
//
//                               # _DWORD __fastcall opcode_0AA0(CRunningScript *)
//                                              .globl opcode_0AA0(CRunningScript *)
//                              opcode_0AA0(CRunningScript *):
//
//                              var_28          = -0x28
//                              var_18          = -0x18
//                              var_s0          =  0
//                              var_s8          =  8
//                              var_s10         =  0x10
//
//                               # __unwind {
patch=0,EE,2035D718,extended,27BDFFC0 //                                  addiu   $sp, -0x40
patch=0,EE,2035D71C,extended,FFBF0038 //                                  sd      $ra, 0x28+var_s10($sp)
patch=0,EE,2035D720,extended,FFBE0030 //                                  sd      $fp, 0x28+var_s8($sp)
patch=0,EE,2035D724,extended,FFB00028 //                                  sd      $s0, 0x28+var_s0($sp)
patch=0,EE,2035D728,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D72C,extended,AFC40010 //                                  sw      $a0, 0x28+var_18($fp)
patch=0,EE,2035D730,extended,03C02825 //                                  move    $a1, $fp
patch=0,EE,2035D734,extended,8FC40010 //                                  lw      $a0, 0x28+var_18($fp)
patch=0,EE,2035D738,extended,0C0D7B6A //                                  jal     operator>>(CRunningScript &,int &)
patch=0,EE,2035D73C,extended,00000000 //                                  nop
patch=0,EE,2035D740,extended,8FC40010 //                                  lw      $a0, 0x28+var_18($fp)  # this
patch=0,EE,2035D744,extended,0C0D7AB3 //                                  jal     CRunningScript::GetConditionResult(void)
patch=0,EE,2035D748,extended,00000000 //                                  nop
patch=0,EE,2035D74C,extended,10400004 //                                  beqz    $v0, loc_35D760
patch=0,EE,2035D750,extended,00000000 //                                  nop
patch=0,EE,2035D754,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D758,extended,1000000F //                                  b       loc_35D798
patch=0,EE,2035D75C,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D760:
patch=0,EE,2035D760,extended,8FD00010 //                                  lw      $s0, 0x28+var_18($fp)
patch=0,EE,2035D764,extended,8FC40010 //                                  lw      $a0, 0x28+var_18($fp)  # this
patch=0,EE,2035D768,extended,0C0D7A9A //                                  jal     CRunningScript::GetBytePointer(void)
patch=0,EE,2035D76C,extended,00000000 //                                  nop
patch=0,EE,2035D770,extended,00402825 //                                  move    $a1, $v0         # unsigned __int8 *
patch=0,EE,2035D774,extended,02002025 //                                  move    $a0, $s0         # this
patch=0,EE,2035D778,extended,0C0D7AD3 //                                  jal     CRunningScript::PushStack(uchar *)
patch=0,EE,2035D77C,extended,00000000 //                                  nop
patch=0,EE,2035D780,extended,8FC20000 //                                  lw      $v0, 0x28+var_28($fp)
patch=0,EE,2035D784,extended,00402825 //                                  move    $a1, $v0         # int
patch=0,EE,2035D788,extended,8FC40010 //                                  lw      $a0, 0x28+var_18($fp)  # CRunningScript *
patch=0,EE,2035D78C,extended,0C0D7B1D //                                  jal     ThreadJump(CRunningScript *,int)
patch=0,EE,2035D790,extended,00000000 //                                  nop
patch=0,EE,2035D794,extended,00001025 //                                  move    $v0, $zero
//
//                              loc_35D798:
patch=0,EE,2035D798,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D79C,extended,DFBF0038 //                                  ld      $ra, 0x28+var_s10($sp)
patch=0,EE,2035D7A0,extended,DFBE0030 //                                  ld      $fp, 0x28+var_s8($sp)
patch=0,EE,2035D7A4,extended,DFB00028 //                                  ld      $s0, 0x28+var_s0($sp)
patch=0,EE,2035D7A8,extended,27BD0040 //                                  addiu   $sp, 0x40
patch=0,EE,2035D7AC,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D7B0,extended,00000000 //                                  nop
//                               # } // starts at 35D718
//                               # End of function opcode_0AA0(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x18
//
//                               # _DWORD __fastcall opcode_0AA1(CRunningScript *)
//                                              .globl opcode_0AA1(CRunningScript *)
//                              opcode_0AA1(CRunningScript *):
//
//                              var_18          = -0x18
//                              var_s0          =  0
//                              var_s8          =  8
//                              var_s10         =  0x10
//
//                               # __unwind {
patch=0,EE,2035D7B4,extended,27BDFFD0 //                                  addiu   $sp, -0x30
patch=0,EE,2035D7B8,extended,FFBF0028 //                                  sd      $ra, 0x18+var_s10($sp)
patch=0,EE,2035D7BC,extended,FFBE0020 //                                  sd      $fp, 0x18+var_s8($sp)
patch=0,EE,2035D7C0,extended,FFB00018 //                                  sd      $s0, 0x18+var_s0($sp)
patch=0,EE,2035D7C4,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D7C8,extended,AFC40000 //                                  sw      $a0, 0x18+var_18($fp)
patch=0,EE,2035D7CC,extended,8FC40000 //                                  lw      $a0, 0x18+var_18($fp)  # this
patch=0,EE,2035D7D0,extended,0C0D7AB3 //                                  jal     CRunningScript::GetConditionResult(void)
patch=0,EE,2035D7D4,extended,00000000 //                                  nop
patch=0,EE,2035D7D8,extended,10400004 //                                  beqz    $v0, loc_35D7EC
patch=0,EE,2035D7DC,extended,00000000 //                                  nop
patch=0,EE,2035D7E0,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035D7E4,extended,1000000A //                                  b       loc_35D810
patch=0,EE,2035D7E8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D7EC:
patch=0,EE,2035D7EC,extended,8FD00000 //                                  lw      $s0, 0x18+var_18($fp)
patch=0,EE,2035D7F0,extended,8FC40000 //                                  lw      $a0, 0x18+var_18($fp)  # this
patch=0,EE,2035D7F4,extended,0C0D7AEA //                                  jal     CRunningScript::PopStack(void)
patch=0,EE,2035D7F8,extended,00000000 //                                  nop
patch=0,EE,2035D7FC,extended,00402825 //                                  move    $a1, $v0         # void *
patch=0,EE,2035D800,extended,02002025 //                                  move    $a0, $s0         # this
patch=0,EE,2035D804,extended,0C0D7AA5 //                                  jal     CRunningScript::SetIp(void *)
patch=0,EE,2035D808,extended,00000000 //                                  nop
patch=0,EE,2035D80C,extended,00001025 //                                  move    $v0, $zero
//
//                              loc_35D810:
patch=0,EE,2035D810,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035D814,extended,DFBF0028 //                                  ld      $ra, 0x18+var_s10($sp)
patch=0,EE,2035D818,extended,DFBE0020 //                                  ld      $fp, 0x18+var_s8($sp)
patch=0,EE,2035D81C,extended,DFB00018 //                                  ld      $s0, 0x18+var_s0($sp)
patch=0,EE,2035D820,extended,27BD0030 //                                  addiu   $sp, 0x30
patch=0,EE,2035D824,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035D828,extended,00000000 //                                  nop
//                               # } // starts at 35D7B4
//                               # End of function opcode_0AA1(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x70
//
//                               # _DWORD __fastcall opcode_0AA5(CRunningScript *)
//                                              .globl opcode_0AA5(CRunningScript *)
//                              opcode_0AA5(CRunningScript *):
//
//                              var_70          = -0x70
//                              var_68          = -0x68
//                              var_60          = -0x60
//                              var_58          = -0x58
//                              var_50          = -0x50
//                              var_48          = -0x48
//                              var_40          = -0x40
//                              var_30          = -0x30
//                              var_2C          = -0x2C
//                              var_28          = -0x28
//                              var_24          = -0x24
//                              var_20          = -0x20
//                              var_1C          = -0x1C
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035D82C,extended,27BDFF80 //                                  addiu   $sp, -0x80
patch=0,EE,2035D830,extended,FFBF0078 //                                  sd      $ra, 0x70+var_s8($sp)
patch=0,EE,2035D834,extended,FFBE0070 //                                  sd      $fp, 0x70+var_s0($sp)
patch=0,EE,2035D838,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035D83C,extended,AFC40060 //                                  sw      $a0, 0x70+var_10($fp)
patch=0,EE,2035D840,extended,27C2004C //                                  addiu   $v0, $fp, 0x70+var_24
patch=0,EE,2035D844,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035D848,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035D84C,extended,0C0D7BE7 //                                  jal     operator>><void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
patch=0,EE,2035D850,extended,00000000 //                                  nop
patch=0,EE,2035D854,extended,27C30050 //                                  addiu   $v1, $fp, 0x70+var_20
patch=0,EE,2035D858,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035D85C,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035D860,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035D864,extended,00000000 //                                  nop
patch=0,EE,2035D868,extended,27C30054 //                                  addiu   $v1, $fp, 0x70+var_1C
patch=0,EE,2035D86C,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035D870,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035D874,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035D878,extended,00000000 //                                  nop
patch=0,EE,2035D87C,extended,8FC20050 //                                  lw      $v0, 0x70+var_20($fp)
patch=0,EE,2035D880,extended,2C420010 //                                  sltiu   $v0, 0x10
patch=0,EE,2035D884,extended,14400003 //                                  bnez    $v0, loc_35D894
patch=0,EE,2035D888,extended,00000000 //                                  nop
patch=0,EE,2035D88C,extended,2402000F //                                  li      $v0, 0xF
patch=0,EE,2035D890,extended,AFC20050 //                                  sw      $v0, 0x70+var_20($fp)
//
//                              loc_35D894:
patch=0,EE,2035D894,extended,8FC20054 //                                  lw      $v0, 0x70+var_1C($fp)
patch=0,EE,2035D898,extended,00021080 //                                  sll     $v0, 2
patch=0,EE,2035D89C,extended,AFC20054 //                                  sw      $v0, 0x70+var_1C($fp)
patch=0,EE,2035D8A0,extended,8FC20050 //                                  lw      $v0, 0x70+var_20($fp)
patch=0,EE,2035D8A4,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035D8A8,extended,3C020036 //
patch=0,EE,2035D8AC,extended,2442F860 //                      li      $v0, arguments
patch=0,EE,2035D8B0,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035D8B4,extended,AFC20048 //                                  sw      $v0, 0x70+var_28($fp)
patch=0,EE,2035D8B8,extended,AFC00040 //                                  sw      $zero, 0x70+var_30($fp)
patch=0,EE,2035D8BC,extended,3C020036 //
patch=0,EE,2035D8C0,extended,2442F860 //                      li      $v0, arguments
patch=0,EE,2035D8C4,extended,AFC20044 //                                 sw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D8C8,extended,10000083 //                                  b       loc_35DAD8
patch=0,EE,2035D8CC,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D8D0:                              # this
patch=0,EE,2035D8D0,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035D8D4,extended,0C0D7A9A //                                  jal     CRunningScript::GetBytePointer(void)
patch=0,EE,2035D8D8,extended,00000000 //                                  nop
patch=0,EE,2035D8DC,extended,90420000 //                                  lbu     $v0, 0($v0)
patch=0,EE,2035D8E0,extended,2C430012 //                                  sltiu   $v1, $v0, 0x12   # switch 18 cases
patch=0,EE,2035D8E4,extended,10600079 //                                  beqz    $v1, def_35D900  # jumptable 0035D900 default case, cases 0,12,13,15
patch=0,EE,2035D8E8,extended,00000000 //                                  nop
patch=0,EE,2035D8EC,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035D8F0,extended,3C020036 //
patch=0,EE,2035D8F4,extended,2442F1C0 //                      li      $v0, jpt_35D900
patch=0,EE,2035D8F8,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035D8FC,extended,8C420000 //                                  lw      $v0, 0($v0)
patch=0,EE,2035D900,extended,00400008 //                                  jr      $v0              # switch jump
patch=0,EE,2035D904,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D908:                              # jumptable 0035D900 case 6
patch=0,EE,2035D908,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D90C,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035D910,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035D914,extended,0C0D7B93 //                                  jal     operator>>(CRunningScript &,float &)
patch=0,EE,2035D918,extended,00000000 //                                  nop
patch=0,EE,2035D91C,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035D920,extended,2C42000F //                                  sltiu   $v0, 0xF         # switch 15 cases
patch=0,EE,2035D924,extended,10400044 //                                  beqz    $v0, def_35D944  # jumptable 0035D944 default case
patch=0,EE,2035D928,extended,00000000 //                                  nop
patch=0,EE,2035D92C,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035D930,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035D934,extended,3C020036 //
patch=0,EE,2035D938,extended,2442F208 //                      li      $v0, jpt_35D944
patch=0,EE,2035D93C,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035D940,extended,8C420000 //                                  lw      $v0, 0($v0)
patch=0,EE,2035D944,extended,00400008 //                                  jr      $v0              # switch jump
patch=0,EE,2035D948,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D94C:                              # jumptable 0035D944 case 0
patch=0,EE,2035D94C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D950,extended,C44C0000 //                                  lwc1    $f12, 0($v0)
patch=0,EE,2035D954,extended,10000038 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D958,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D95C:                              # jumptable 0035D944 case 1
patch=0,EE,2035D95C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D960,extended,C44D0000 //                                  lwc1    $f13, 0($v0)
patch=0,EE,2035D964,extended,10000034 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D968,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D96C:                              # jumptable 0035D944 case 2
patch=0,EE,2035D96C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D970,extended,C44E0000 //                                  lwc1    $f14, 0($v0)
patch=0,EE,2035D974,extended,10000030 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D978,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D97C:                              # jumptable 0035D944 case 3
patch=0,EE,2035D97C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D980,extended,C44F0000 //                                  lwc1    $f15, 0($v0)
patch=0,EE,2035D984,extended,1000002C //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D988,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D98C:                              # jumptable 0035D944 case 4
patch=0,EE,2035D98C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D990,extended,C4500000 //                                  lwc1    $f16, 0($v0)
patch=0,EE,2035D994,extended,10000028 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D998,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D99C:                              # jumptable 0035D944 case 5
patch=0,EE,2035D99C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D9A0,extended,C4510000 //                                  lwc1    $f17, 0($v0)
patch=0,EE,2035D9A4,extended,10000024 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D9A8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D9AC:                              # jumptable 0035D944 case 6
patch=0,EE,2035D9AC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D9B0,extended,C4520000 //                                  lwc1    $f18, 0($v0)
patch=0,EE,2035D9B4,extended,10000020 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D9B8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D9BC:                              # jumptable 0035D944 case 7
patch=0,EE,2035D9BC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D9C0,extended,C4530000 //                                  lwc1    $f19, 0($v0)
patch=0,EE,2035D9C4,extended,1000001C //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D9C8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D9CC:                              # jumptable 0035D944 case 8
patch=0,EE,2035D9CC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D9D0,extended,C4540000 //                                  lwc1    $f20, 0($v0)
patch=0,EE,2035D9D4,extended,10000018 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D9D8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D9DC:                              # jumptable 0035D944 case 9
patch=0,EE,2035D9DC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D9E0,extended,C4550000 //                                  lwc1    $f21, 0($v0)
patch=0,EE,2035D9E4,extended,10000014 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D9E8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D9EC:                              # jumptable 0035D944 case 10
patch=0,EE,2035D9EC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035D9F0,extended,C4560000 //                                  lwc1    $f22, 0($v0)
patch=0,EE,2035D9F4,extended,10000010 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035D9F8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35D9FC:                              # jumptable 0035D944 case 11
patch=0,EE,2035D9FC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DA00,extended,C4570000 //                                  lwc1    $f23, 0($v0)
patch=0,EE,2035DA04,extended,1000000C //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035DA08,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DA0C:                              # jumptable 0035D944 case 12
patch=0,EE,2035DA0C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DA10,extended,C4580000 //                                  lwc1    $f24, 0($v0)
patch=0,EE,2035DA14,extended,10000008 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035DA18,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DA1C:                              # jumptable 0035D944 case 13
patch=0,EE,2035DA1C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DA20,extended,C4590000 //                                  lwc1    $f25, 0($v0)
patch=0,EE,2035DA24,extended,10000004 //                                  b       def_35D944       # jumptable 0035D944 default case
patch=0,EE,2035DA28,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DA2C:                              # jumptable 0035D944 case 14
patch=0,EE,2035DA2C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DA30,extended,C45A0000 //                                  lwc1    $f26, 0($v0)
patch=0,EE,2035DA34,extended,00000000 //                                  nop
//
//                              def_35D944:                              # jumptable 0035D944 default case
patch=0,EE,2035DA38,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035DA3C,extended,24420001 //                                  addiu   $v0, 1
patch=0,EE,2035DA40,extended,AFC20040 //                                  sw      $v0, 0x70+var_30($fp)
patch=0,EE,2035DA44,extended,10000021 //                                  b       def_35D900       # jumptable 0035D900 default case, cases 0,12,13,15
patch=0,EE,2035DA48,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DA4C:                              # jumptable 0035D900 cases 1-5,7,8
patch=0,EE,2035DA4C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DA50,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035DA54,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035DA58,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035DA5C,extended,00000000 //                                  nop
patch=0,EE,2035DA60,extended,1000001A //                                  b       def_35D900       # jumptable 0035D900 default case, cases 0,12,13,15
patch=0,EE,2035DA64,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DA68:                              # jumptable 0035D900 cases 10,11,16,17
patch=0,EE,2035DA68,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035DA6C,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035DA70,extended,0C07E0C0 //                                  jal     GetScriptParamPointer(CRunningScript *,int)
patch=0,EE,2035DA74,extended,00000000 //                                  nop
patch=0,EE,2035DA78,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035DA7C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DA80,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035DA84,extended,10000011 //                                  b       def_35D900       # jumptable 0035D900 default case, cases 0,12,13,15
patch=0,EE,2035DA88,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DA8C:                              # jumptable 0035D900 cases 9,14
patch=0,EE,2035DA8C,extended,93828098 //                                  lbu     $v0, currTextParam
patch=0,EE,2035DA90,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035DA94,extended,306300FF //                                  andi    $v1, 0xFF
patch=0,EE,2035DA98,extended,A3838098 //                                  sb      $v1, currTextParam
patch=0,EE,2035DA9C,extended,000219C0 //                                  sll     $v1, $v0, 7
patch=0,EE,2035DAA0,extended,3C020036 //
patch=0,EE,2035DAA4,extended,2442F5E0 //                      li      $v0, textParams
patch=0,EE,2035DAA8,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035DAAC,extended,24060080 //                                  li      $a2, 0x80        # unsigned __int8
patch=0,EE,2035DAB0,extended,00402825 //                                  move    $a1, $v0         # char *
patch=0,EE,2035DAB4,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)  # CRunningScript *
patch=0,EE,2035DAB8,extended,0C0D71FA //                                  jal     readString(CRunningScript *,char *,uchar)
patch=0,EE,2035DABC,extended,00000000 //                                  nop
patch=0,EE,2035DAC0,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035DAC4,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DAC8,extended,AC430000 //                                  sw      $v1, 0($v0)
//
//                              def_35D900:                              # jumptable 0035D900 default case, cases 0,12,13,15
patch=0,EE,2035DACC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DAD0,extended,24420004 //                                  addiu   $v0, 4
patch=0,EE,2035DAD4,extended,AFC20044 //                                  sw      $v0, 0x70+var_2C($fp)
//
//                              loc_35DAD8:
patch=0,EE,2035DAD8,extended,8FC30044 //                                  lw      $v1, 0x70+var_2C($fp)
patch=0,EE,2035DADC,extended,8FC20048 //                                  lw      $v0, 0x70+var_28($fp)
patch=0,EE,2035DAE0,extended,1462FF7B //                                  bne     $v1, $v0, loc_35D8D0
patch=0,EE,2035DAE4,extended,00000000 //                                  nop
patch=0,EE,2035DAE8,extended,8FC2004C //                                  lw      $v0, 0x70+var_24($fp)
patch=0,EE,2035DAEC,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DAF0,extended,246AF860 //                                  addiu   $a6, $v1, (arguments - 0x360000)
patch=0,EE,2035DAF4,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DAF8,extended,2469F860 //                                  addiu   $a5, $v1, (arguments - 0x360000)
patch=0,EE,2035DAFC,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DB00,extended,2468F860 //                                  addiu   $a4, $v1, (arguments - 0x360000)
patch=0,EE,2035DB04,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DB08,extended,2467F860 //                                  addiu   $a3, $v1, (arguments - 0x360000)
patch=0,EE,2035DB0C,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DB10,extended,2466F860 //                                  addiu   $a2, $v1, (arguments - 0x360000)
patch=0,EE,2035DB14,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DB18,extended,2465F860 //                                  addiu   $a1, $v1, (arguments - 0x360000)
patch=0,EE,2035DB1C,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DB20,extended,2464F860 //                                  addiu   $a0, $v1, (arguments - 0x360000)
patch=0,EE,2035DB24,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DB28,extended,3C0B0036 //
patch=0,EE,2035DB2C,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035DB30,extended,8D6B0038 //                                 lw      $a7, (dword_35F898 - 0x35F860)($a7)
patch=0,EE,2035DB34,extended,AFAB0030 //                                  sw      $a7, 0x70+var_40($sp)
patch=0,EE,2035DB38,extended,3C0B0036 //
patch=0,EE,2035DB3C,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035DB40,extended,8D6B0034 //                                 lw      $a7, (dword_35F894 - 0x35F860)($a7)
patch=0,EE,2035DB44,extended,AFAB0028 //                                  sw      $a7, 0x70+var_48($sp)
patch=0,EE,2035DB48,extended,3C0B0036 //
patch=0,EE,2035DB4C,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035DB50,extended,8D6B0030 //                                 lw      $a7, (dword_35F890 - 0x35F860)($a7)
patch=0,EE,2035DB54,extended,AFAB0020 //                                  sw      $a7, 0x70+var_50($sp)
patch=0,EE,2035DB58,extended,3C0B0036 //
patch=0,EE,2035DB5C,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035DB60,extended,8D6B002C //                                 lw      $a7, (dword_35F88C - 0x35F860)($a7)
patch=0,EE,2035DB64,extended,AFAB0018 //                                  sw      $a7, 0x70+var_58($sp)
patch=0,EE,2035DB68,extended,3C0B0036 //
patch=0,EE,2035DB6C,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035DB70,extended,8D6B0028 //                                 lw      $a7, (dword_35F888 - 0x35F860)($a7)
patch=0,EE,2035DB74,extended,AFAB0010 //                                  sw      $a7, 0x70+var_60($sp)
patch=0,EE,2035DB78,extended,3C0B0036 //
patch=0,EE,2035DB7C,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035DB80,extended,8D6B0024 //                                 lw      $a7, (dword_35F884 - 0x35F860)($a7)
patch=0,EE,2035DB84,extended,AFAB0008 //                                  sw      $a7, 0x70+var_68($sp)
patch=0,EE,2035DB88,extended,3C0B0036 //
patch=0,EE,2035DB8C,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035DB90,extended,8D6B0020 //                                 lw      $a7, (dword_35F880 - 0x35F860)($a7)
patch=0,EE,2035DB94,extended,AFAB0000 //                                  sw      $a7, 0x70+var_70($sp)
patch=0,EE,2035DB98,extended,8D4B001C //                                  lw      $a7, (dword_35F87C - 0x35F860)($a6)
patch=0,EE,2035DB9C,extended,8D2A0018 //                                  lw      $a6, (dword_35F878 - 0x35F860)($a5)
patch=0,EE,2035DBA0,extended,8D090014 //                                  lw      $a5, (dword_35F874 - 0x35F860)($a4)
patch=0,EE,2035DBA4,extended,8CE80010 //                                  lw      $a4, (dword_35F870 - 0x35F860)($a3)
patch=0,EE,2035DBA8,extended,8CC7000C //                                  lw      $a3, (dword_35F86C - 0x35F860)($a2)
patch=0,EE,2035DBAC,extended,8CA60008 //                                  lw      $a2, (dword_35F868 - 0x35F860)($a1)
patch=0,EE,2035DBB0,extended,8C850004 //                                  lw      $a1, (dword_35F864 - 0x35F860)($a0)
patch=0,EE,2035DBB4,extended,8C64F860 //                                  lw      $a0, (arguments - 0x360000)($v1)
patch=0,EE,2035DBB8,extended,0040F809 //                                  jalr    $v0
patch=0,EE,2035DBBC,extended,00000000 //                                  nop
patch=0,EE,2035DBC0,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)  # CRunningScript *
patch=0,EE,2035DBC4,extended,0C0D7B00 //                                  jal     SkipUnusedParameters(CRunningScript *)
patch=0,EE,2035DBC8,extended,00000000 //                                  nop
patch=0,EE,2035DBCC,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035DBD0,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035DBD4,extended,DFBF0078 //                                  ld      $ra, 0x70+var_s8($sp)
patch=0,EE,2035DBD8,extended,DFBE0070 //                                  ld      $fp, 0x70+var_s0($sp)
patch=0,EE,2035DBDC,extended,27BD0080 //                                  addiu   $sp, 0x80
patch=0,EE,2035DBE0,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035DBE4,extended,00000000 //                                  nop
//                               # } // starts at 35D82C
//                               # End of function opcode_0AA5(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x70
//
//                               # _DWORD __fastcall opcode_0AA6(CRunningScript *)
//                                              .globl opcode_0AA6(CRunningScript *)
//                              opcode_0AA6(CRunningScript *):
//
//                              var_70          = -0x70
//                              var_68          = -0x68
//                              var_60          = -0x60
//                              var_58          = -0x58
//                              var_50          = -0x50
//                              var_48          = -0x48
//                              var_40          = -0x40
//                              var_38          = -0x38
//                              var_30          = -0x30
//                              var_2C          = -0x2C
//                              var_28          = -0x28
//                              var_24          = -0x24
//                              var_20          = -0x20
//                              var_1C          = -0x1C
//                              var_18          = -0x18
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035DBE8,extended,27BDFF80 //                                  addiu   $sp, -0x80
patch=0,EE,2035DBEC,extended,FFBF0078 //                                  sd      $ra, 0x70+var_s8($sp)
patch=0,EE,2035DBF0,extended,FFBE0070 //                                  sd      $fp, 0x70+var_s0($sp)
patch=0,EE,2035DBF4,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035DBF8,extended,AFC40060 //                                  sw      $a0, 0x70+var_10($fp)
patch=0,EE,2035DBFC,extended,27C2004C //                                  addiu   $v0, $fp, 0x70+var_24
patch=0,EE,2035DC00,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035DC04,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035DC08,extended,0C0D7BFD //                                  jal     operator>><void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
patch=0,EE,2035DC0C,extended,00000000 //                                  nop
patch=0,EE,2035DC10,extended,27C30050 //                                  addiu   $v1, $fp, 0x70+var_20
patch=0,EE,2035DC14,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035DC18,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035DC1C,extended,0C0D7BBD //                                  jal     operator>>(CRunningScript &,void *&)
patch=0,EE,2035DC20,extended,00000000 //                                  nop
patch=0,EE,2035DC24,extended,27C30054 //                                  addiu   $v1, $fp, 0x70+var_1C
patch=0,EE,2035DC28,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035DC2C,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035DC30,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035DC34,extended,00000000 //                                  nop
patch=0,EE,2035DC38,extended,27C30058 //                                  addiu   $v1, $fp, 0x70+var_18
patch=0,EE,2035DC3C,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035DC40,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035DC44,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035DC48,extended,00000000 //                                  nop
patch=0,EE,2035DC4C,extended,8FC20054 //                                  lw      $v0, 0x70+var_1C($fp)
patch=0,EE,2035DC50,extended,2C420010 //                                  sltiu   $v0, 0x10
patch=0,EE,2035DC54,extended,14400003 //                                  bnez    $v0, loc_35DC64
patch=0,EE,2035DC58,extended,00000000 //                                  nop
patch=0,EE,2035DC5C,extended,2402000F //                                  li      $v0, 0xF
patch=0,EE,2035DC60,extended,AFC20054 //                                  sw      $v0, 0x70+var_1C($fp)
//
//                              loc_35DC64:
patch=0,EE,2035DC64,extended,8FC20058 //                                  lw      $v0, 0x70+var_18($fp)
patch=0,EE,2035DC68,extended,00021080 //                                  sll     $v0, 2
patch=0,EE,2035DC6C,extended,AFC20058 //                                  sw      $v0, 0x70+var_18($fp)
patch=0,EE,2035DC70,extended,8FC20054 //                                  lw      $v0, 0x70+var_1C($fp)
patch=0,EE,2035DC74,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035DC78,extended,3C020036 //
patch=0,EE,2035DC7C,extended,2442F860 //                      li      $v0, arguments
patch=0,EE,2035DC80,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035DC84,extended,AFC20048 //                                  sw      $v0, 0x70+var_28($fp)
patch=0,EE,2035DC88,extended,AFC00040 //                                  sw      $zero, 0x70+var_30($fp)
patch=0,EE,2035DC8C,extended,3C020036 //
patch=0,EE,2035DC90,extended,2442F860 //                      li      $v0, arguments
patch=0,EE,2035DC94,extended,AFC20044 //                                 sw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DC98,extended,10000083 //                                  b       loc_35DEA8
patch=0,EE,2035DC9C,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DCA0:                              # this
patch=0,EE,2035DCA0,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035DCA4,extended,0C0D7A9A //                                  jal     CRunningScript::GetBytePointer(void)
patch=0,EE,2035DCA8,extended,00000000 //                                  nop
patch=0,EE,2035DCAC,extended,90420000 //                                  lbu     $v0, 0($v0)
patch=0,EE,2035DCB0,extended,2C430012 //                                  sltiu   $v1, $v0, 0x12   # switch 18 cases
patch=0,EE,2035DCB4,extended,10600079 //                                  beqz    $v1, def_35DCD0  # jumptable 0035DCD0 default case, cases 0,12,13,15
patch=0,EE,2035DCB8,extended,00000000 //                                  nop
patch=0,EE,2035DCBC,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035DCC0,extended,3C020036 //
patch=0,EE,2035DCC4,extended,2442F244 //                      li      $v0, jpt_35DCD0
patch=0,EE,2035DCC8,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035DCCC,extended,8C420000 //                                  lw      $v0, 0($v0)
patch=0,EE,2035DCD0,extended,00400008 //                                  jr      $v0              # switch jump
patch=0,EE,2035DCD4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DCD8:                              # jumptable 0035DCD0 case 6
patch=0,EE,2035DCD8,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DCDC,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035DCE0,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035DCE4,extended,0C0D7B93 //                                  jal     operator>>(CRunningScript &,float &)
patch=0,EE,2035DCE8,extended,00000000 //                                  nop
patch=0,EE,2035DCEC,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035DCF0,extended,2C42000F //                                  sltiu   $v0, 0xF         # switch 15 cases
patch=0,EE,2035DCF4,extended,10400044 //                                  beqz    $v0, def_35DD14  # jumptable 0035DD14 default case
patch=0,EE,2035DCF8,extended,00000000 //                                  nop
patch=0,EE,2035DCFC,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035DD00,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035DD04,extended,3C020036 //
patch=0,EE,2035DD08,extended,2442F28C //                      li      $v0, jpt_35DD14
patch=0,EE,2035DD0C,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035DD10,extended,8C420000 //                                  lw      $v0, 0($v0)
patch=0,EE,2035DD14,extended,00400008 //                                  jr      $v0              # switch jump
patch=0,EE,2035DD18,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DD1C:                              # jumptable 0035DD14 case 0
patch=0,EE,2035DD1C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DD20,extended,C44C0000 //                                  lwc1    $f12, 0($v0)
patch=0,EE,2035DD24,extended,10000038 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DD28,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DD2C:                              # jumptable 0035DD14 case 1
patch=0,EE,2035DD2C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DD30,extended,C44D0000 //                                  lwc1    $f13, 0($v0)
patch=0,EE,2035DD34,extended,10000034 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DD38,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DD3C:                              # jumptable 0035DD14 case 2
patch=0,EE,2035DD3C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DD40,extended,C44E0000 //                                  lwc1    $f14, 0($v0)
patch=0,EE,2035DD44,extended,10000030 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DD48,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DD4C:                              # jumptable 0035DD14 case 3
patch=0,EE,2035DD4C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DD50,extended,C44F0000 //                                  lwc1    $f15, 0($v0)
patch=0,EE,2035DD54,extended,1000002C //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DD58,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DD5C:                              # jumptable 0035DD14 case 4
patch=0,EE,2035DD5C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DD60,extended,C4500000 //                                  lwc1    $f16, 0($v0)
patch=0,EE,2035DD64,extended,10000028 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DD68,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DD6C:                              # jumptable 0035DD14 case 5
patch=0,EE,2035DD6C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DD70,extended,C4510000 //                                  lwc1    $f17, 0($v0)
patch=0,EE,2035DD74,extended,10000024 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DD78,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DD7C:                              # jumptable 0035DD14 case 6
patch=0,EE,2035DD7C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DD80,extended,C4520000 //                                  lwc1    $f18, 0($v0)
patch=0,EE,2035DD84,extended,10000020 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DD88,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DD8C:                              # jumptable 0035DD14 case 7
patch=0,EE,2035DD8C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DD90,extended,C4530000 //                                  lwc1    $f19, 0($v0)
patch=0,EE,2035DD94,extended,1000001C //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DD98,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DD9C:                              # jumptable 0035DD14 case 8
patch=0,EE,2035DD9C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DDA0,extended,C4540000 //                                  lwc1    $f20, 0($v0)
patch=0,EE,2035DDA4,extended,10000018 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DDA8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DDAC:                              # jumptable 0035DD14 case 9
patch=0,EE,2035DDAC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DDB0,extended,C4550000 //                                  lwc1    $f21, 0($v0)
patch=0,EE,2035DDB4,extended,10000014 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DDB8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DDBC:                              # jumptable 0035DD14 case 10
patch=0,EE,2035DDBC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DDC0,extended,C4560000 //                                  lwc1    $f22, 0($v0)
patch=0,EE,2035DDC4,extended,10000010 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DDC8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DDCC:                              # jumptable 0035DD14 case 11
patch=0,EE,2035DDCC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DDD0,extended,C4570000 //                                  lwc1    $f23, 0($v0)
patch=0,EE,2035DDD4,extended,1000000C //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DDD8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DDDC:                              # jumptable 0035DD14 case 12
patch=0,EE,2035DDDC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DDE0,extended,C4580000 //                                  lwc1    $f24, 0($v0)
patch=0,EE,2035DDE4,extended,10000008 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DDE8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DDEC:                              # jumptable 0035DD14 case 13
patch=0,EE,2035DDEC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DDF0,extended,C4590000 //                                  lwc1    $f25, 0($v0)
patch=0,EE,2035DDF4,extended,10000004 //                                  b       def_35DD14       # jumptable 0035DD14 default case
patch=0,EE,2035DDF8,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DDFC:                              # jumptable 0035DD14 case 14
patch=0,EE,2035DDFC,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DE00,extended,C45A0000 //                                  lwc1    $f26, 0($v0)
patch=0,EE,2035DE04,extended,00000000 //                                  nop
//
//                              def_35DD14:                              # jumptable 0035DD14 default case
patch=0,EE,2035DE08,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035DE0C,extended,24420001 //                                  addiu   $v0, 1
patch=0,EE,2035DE10,extended,AFC20040 //                                  sw      $v0, 0x70+var_30($fp)
patch=0,EE,2035DE14,extended,10000021 //                                  b       def_35DCD0       # jumptable 0035DCD0 default case, cases 0,12,13,15
patch=0,EE,2035DE18,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DE1C:                              # jumptable 0035DCD0 cases 1-5,7,8
patch=0,EE,2035DE1C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DE20,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035DE24,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035DE28,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035DE2C,extended,00000000 //                                  nop
patch=0,EE,2035DE30,extended,1000001A //                                  b       def_35DCD0       # jumptable 0035DCD0 default case, cases 0,12,13,15
patch=0,EE,2035DE34,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DE38:                              # jumptable 0035DCD0 cases 10,11,16,17
patch=0,EE,2035DE38,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035DE3C,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035DE40,extended,0C07E0C0 //                                  jal     GetScriptParamPointer(CRunningScript *,int)
patch=0,EE,2035DE44,extended,00000000 //                                  nop
patch=0,EE,2035DE48,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035DE4C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DE50,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035DE54,extended,10000011 //                                  b       def_35DCD0       # jumptable 0035DCD0 default case, cases 0,12,13,15
patch=0,EE,2035DE58,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35DE5C:                              # jumptable 0035DCD0 cases 9,14
patch=0,EE,2035DE5C,extended,93828098 //                                  lbu     $v0, currTextParam
patch=0,EE,2035DE60,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035DE64,extended,306300FF //                                  andi    $v1, 0xFF
patch=0,EE,2035DE68,extended,A3838098 //                                  sb      $v1, currTextParam
patch=0,EE,2035DE6C,extended,000219C0 //                                  sll     $v1, $v0, 7
patch=0,EE,2035DE70,extended,3C020036 //
patch=0,EE,2035DE74,extended,2442F5E0 //                      li      $v0, textParams
patch=0,EE,2035DE78,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035DE7C,extended,24060080 //                                  li      $a2, 0x80        # unsigned __int8
patch=0,EE,2035DE80,extended,00402825 //                                  move    $a1, $v0         # char *
patch=0,EE,2035DE84,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)  # CRunningScript *
patch=0,EE,2035DE88,extended,0C0D71FA //                                  jal     readString(CRunningScript *,char *,uchar)
patch=0,EE,2035DE8C,extended,00000000 //                                  nop
patch=0,EE,2035DE90,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035DE94,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DE98,extended,AC430000 //                                  sw      $v1, 0($v0)
//
//                              def_35DCD0:                              # jumptable 0035DCD0 default case, cases 0,12,13,15
patch=0,EE,2035DE9C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035DEA0,extended,24420004 //                                  addiu   $v0, 4
patch=0,EE,2035DEA4,extended,AFC20044 //                                  sw      $v0, 0x70+var_2C($fp)
//
//                              loc_35DEA8:
patch=0,EE,2035DEA8,extended,8FC30044 //                                  lw      $v1, 0x70+var_2C($fp)
patch=0,EE,2035DEAC,extended,8FC20048 //                                  lw      $v0, 0x70+var_28($fp)
patch=0,EE,2035DEB0,extended,1462FF7B //                                  bne     $v1, $v0, loc_35DCA0
patch=0,EE,2035DEB4,extended,00000000 //                                  nop
patch=0,EE,2035DEB8,extended,8FC2004C //                                  lw      $v0, 0x70+var_24($fp)
patch=0,EE,2035DEBC,extended,8FCC0050 //                                  lw      $t4, 0x70+var_20($fp)
patch=0,EE,2035DEC0,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DEC4,extended,2469F860 //                                  addiu   $a5, $v1, (arguments - 0x360000)
patch=0,EE,2035DEC8,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DECC,extended,2468F860 //                                  addiu   $a4, $v1, (arguments - 0x360000)
patch=0,EE,2035DED0,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DED4,extended,2467F860 //                                  addiu   $a3, $v1, (arguments - 0x360000)
patch=0,EE,2035DED8,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DEDC,extended,2466F860 //                                  addiu   $a2, $v1, (arguments - 0x360000)
patch=0,EE,2035DEE0,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DEE4,extended,2465F860 //                                  addiu   $a1, $v1, (arguments - 0x360000)
patch=0,EE,2035DEE8,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DEEC,extended,2464F860 //                                  addiu   $a0, $v1, (arguments - 0x360000)
patch=0,EE,2035DEF0,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035DEF4,extended,3C0A0036 //
patch=0,EE,2035DEF8,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035DEFC,extended,8D4A0038 //                                 lw      $a6, (dword_35F898 - 0x35F860)($a6)
patch=0,EE,2035DF00,extended,AFAA0038 //                                  sw      $a6, 0x70+var_38($sp)
patch=0,EE,2035DF04,extended,3C0A0036 //
patch=0,EE,2035DF08,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035DF0C,extended,8D4A0034 //                                 lw      $a6, (dword_35F894 - 0x35F860)($a6)
patch=0,EE,2035DF10,extended,AFAA0030 //                                  sw      $a6, 0x70+var_40($sp)
patch=0,EE,2035DF14,extended,3C0A0036 //
patch=0,EE,2035DF18,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035DF1C,extended,8D4A0030 //                                 lw      $a6, (dword_35F890 - 0x35F860)($a6)
patch=0,EE,2035DF20,extended,AFAA0028 //                                  sw      $a6, 0x70+var_48($sp)
patch=0,EE,2035DF24,extended,3C0A0036 //
patch=0,EE,2035DF28,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035DF2C,extended,8D4A002C //                                 lw      $a6, (dword_35F88C - 0x35F860)($a6)
patch=0,EE,2035DF30,extended,AFAA0020 //                                  sw      $a6, 0x70+var_50($sp)
patch=0,EE,2035DF34,extended,3C0A0036 //
patch=0,EE,2035DF38,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035DF3C,extended,8D4A0028 //                                 lw      $a6, (dword_35F888 - 0x35F860)($a6)
patch=0,EE,2035DF40,extended,AFAA0018 //                                  sw      $a6, 0x70+var_58($sp)
patch=0,EE,2035DF44,extended,3C0A0036 //
patch=0,EE,2035DF48,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035DF4C,extended,8D4A0024 //                                 lw      $a6, (dword_35F884 - 0x35F860)($a6)
patch=0,EE,2035DF50,extended,AFAA0010 //                                  sw      $a6, 0x70+var_60($sp)
patch=0,EE,2035DF54,extended,3C0A0036 //
patch=0,EE,2035DF58,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035DF5C,extended,8D4A0020 //                                 lw      $a6, (dword_35F880 - 0x35F860)($a6)
patch=0,EE,2035DF60,extended,AFAA0008 //                                  sw      $a6, 0x70+var_68($sp)
patch=0,EE,2035DF64,extended,3C0A0036 //
patch=0,EE,2035DF68,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035DF6C,extended,8D4A001C //                                 lw      $a6, (dword_35F87C - 0x35F860)($a6)
patch=0,EE,2035DF70,extended,AFAA0000 //                                  sw      $a6, 0x70+var_70($sp)
patch=0,EE,2035DF74,extended,8D2B0018 //                                  lw      $a7, (dword_35F878 - 0x35F860)($a5)
patch=0,EE,2035DF78,extended,8D0A0014 //                                  lw      $a6, (dword_35F874 - 0x35F860)($a4)
patch=0,EE,2035DF7C,extended,8CE90010 //                                  lw      $a5, (dword_35F870 - 0x35F860)($a3)
patch=0,EE,2035DF80,extended,8CC8000C //                                  lw      $a4, (dword_35F86C - 0x35F860)($a2)
patch=0,EE,2035DF84,extended,8CA70008 //                                  lw      $a3, (dword_35F868 - 0x35F860)($a1)
patch=0,EE,2035DF88,extended,8C860004 //                                  lw      $a2, (dword_35F864 - 0x35F860)($a0)
patch=0,EE,2035DF8C,extended,8C65F860 //                                  lw      $a1, (arguments - 0x360000)($v1)
patch=0,EE,2035DF90,extended,01802025 //                                  move    $a0, $t4
patch=0,EE,2035DF94,extended,0040F809 //                                  jalr    $v0
patch=0,EE,2035DF98,extended,00000000 //                                  nop
patch=0,EE,2035DF9C,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)  # CRunningScript *
patch=0,EE,2035DFA0,extended,0C0D7B00 //                                  jal     SkipUnusedParameters(CRunningScript *)
patch=0,EE,2035DFA4,extended,00000000 //                                  nop
patch=0,EE,2035DFA8,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035DFAC,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035DFB0,extended,DFBF0078 //                                  ld      $ra, 0x70+var_s8($sp)
patch=0,EE,2035DFB4,extended,DFBE0070 //                                  ld      $fp, 0x70+var_s0($sp)
patch=0,EE,2035DFB8,extended,27BD0080 //                                  addiu   $sp, 0x80
patch=0,EE,2035DFBC,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035DFC0,extended,00000000 //                                  nop
//                               # } // starts at 35DBE8
//                               # End of function opcode_0AA6(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x70
//
//                               # _DWORD __fastcall opcode_0AA7(CRunningScript *)
//                                              .globl opcode_0AA7(CRunningScript *)
//                              opcode_0AA7(CRunningScript *):
//
//                              var_70          = -0x70
//                              var_68          = -0x68
//                              var_60          = -0x60
//                              var_58          = -0x58
//                              var_50          = -0x50
//                              var_48          = -0x48
//                              var_40          = -0x40
//                              var_30          = -0x30
//                              var_2C          = -0x2C
//                              var_28          = -0x28
//                              var_24          = -0x24
//                              var_20          = -0x20
//                              var_1C          = -0x1C
//                              var_18          = -0x18
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035DFC4,extended,27BDFF80 //                                  addiu   $sp, -0x80
patch=0,EE,2035DFC8,extended,FFBF0078 //                                  sd      $ra, 0x70+var_s8($sp)
patch=0,EE,2035DFCC,extended,FFBE0070 //                                  sd      $fp, 0x70+var_s0($sp)
patch=0,EE,2035DFD0,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035DFD4,extended,AFC40060 //                                  sw      $a0, 0x70+var_10($fp)
patch=0,EE,2035DFD8,extended,27C20050 //                                  addiu   $v0, $fp, 0x70+var_20
patch=0,EE,2035DFDC,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035DFE0,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035DFE4,extended,0C0D7C13 //                                  jal     operator>><ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
patch=0,EE,2035DFE8,extended,00000000 //                                  nop
patch=0,EE,2035DFEC,extended,27C30054 //                                  addiu   $v1, $fp, 0x70+var_1C
patch=0,EE,2035DFF0,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035DFF4,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035DFF8,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035DFFC,extended,00000000 //                                  nop
patch=0,EE,2035E000,extended,27C30058 //                                  addiu   $v1, $fp, 0x70+var_18
patch=0,EE,2035E004,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035E008,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035E00C,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035E010,extended,00000000 //                                  nop
patch=0,EE,2035E014,extended,8FC20054 //                                  lw      $v0, 0x70+var_1C($fp)
patch=0,EE,2035E018,extended,2C420010 //                                  sltiu   $v0, 0x10
patch=0,EE,2035E01C,extended,14400003 //                                  bnez    $v0, loc_35E02C
patch=0,EE,2035E020,extended,00000000 //                                  nop
patch=0,EE,2035E024,extended,2402000F //                                  li      $v0, 0xF
patch=0,EE,2035E028,extended,AFC20054 //                                  sw      $v0, 0x70+var_1C($fp)
//
//                              loc_35E02C:
patch=0,EE,2035E02C,extended,8FC20058 //                                  lw      $v0, 0x70+var_18($fp)
patch=0,EE,2035E030,extended,00021080 //                                  sll     $v0, 2
patch=0,EE,2035E034,extended,AFC20058 //                                  sw      $v0, 0x70+var_18($fp)
patch=0,EE,2035E038,extended,8FC20054 //                                  lw      $v0, 0x70+var_1C($fp)
patch=0,EE,2035E03C,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035E040,extended,3C020036 //
patch=0,EE,2035E044,extended,2442F860 //                      li      $v0, arguments
patch=0,EE,2035E048,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035E04C,extended,AFC20048 //                                  sw      $v0, 0x70+var_28($fp)
patch=0,EE,2035E050,extended,AFC00040 //                                  sw      $zero, 0x70+var_30($fp)
patch=0,EE,2035E054,extended,3C020036 //
patch=0,EE,2035E058,extended,2442F860 //                      li      $v0, arguments
patch=0,EE,2035E05C,extended,AFC20044 //                                 sw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E060,extended,10000083 //                                  b       loc_35E270
patch=0,EE,2035E064,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E068:                              # this
patch=0,EE,2035E068,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E06C,extended,0C0D7A9A //                                  jal     CRunningScript::GetBytePointer(void)
patch=0,EE,2035E070,extended,00000000 //                                  nop
patch=0,EE,2035E074,extended,90420000 //                                  lbu     $v0, 0($v0)
patch=0,EE,2035E078,extended,2C430012 //                                  sltiu   $v1, $v0, 0x12   # switch 18 cases
patch=0,EE,2035E07C,extended,10600079 //                                  beqz    $v1, def_35E098  # jumptable 0035E098 default case, cases 0,12,13,15
patch=0,EE,2035E080,extended,00000000 //                                  nop
patch=0,EE,2035E084,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035E088,extended,3C020036 //
patch=0,EE,2035E08C,extended,2442F2C8 //                      li      $v0, jpt_35E098
patch=0,EE,2035E090,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035E094,extended,8C420000 //                                  lw      $v0, 0($v0)
patch=0,EE,2035E098,extended,00400008 //                                  jr      $v0              # switch jump
patch=0,EE,2035E09C,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E0A0:                              # jumptable 0035E098 case 6
patch=0,EE,2035E0A0,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E0A4,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035E0A8,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E0AC,extended,0C0D7B93 //                                  jal     operator>>(CRunningScript &,float &)
patch=0,EE,2035E0B0,extended,00000000 //                                  nop
patch=0,EE,2035E0B4,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035E0B8,extended,2C42000F //                                  sltiu   $v0, 0xF         # switch 15 cases
patch=0,EE,2035E0BC,extended,10400044 //                                  beqz    $v0, def_35E0DC  # jumptable 0035E0DC default case
patch=0,EE,2035E0C0,extended,00000000 //                                  nop
patch=0,EE,2035E0C4,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035E0C8,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035E0CC,extended,3C020036 //
patch=0,EE,2035E0D0,extended,2442F310 //                      li      $v0, jpt_35E0DC
patch=0,EE,2035E0D4,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035E0D8,extended,8C420000 //                                  lw      $v0, 0($v0)
patch=0,EE,2035E0DC,extended,00400008 //                                  jr      $v0              # switch jump
patch=0,EE,2035E0E0,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E0E4:                              # jumptable 0035E0DC case 0
patch=0,EE,2035E0E4,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E0E8,extended,C44C0000 //                                  lwc1    $f12, 0($v0)
patch=0,EE,2035E0EC,extended,10000038 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E0F0,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E0F4:                              # jumptable 0035E0DC case 1
patch=0,EE,2035E0F4,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E0F8,extended,C44D0000 //                                  lwc1    $f13, 0($v0)
patch=0,EE,2035E0FC,extended,10000034 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E100,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E104:                              # jumptable 0035E0DC case 2
patch=0,EE,2035E104,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E108,extended,C44E0000 //                                  lwc1    $f14, 0($v0)
patch=0,EE,2035E10C,extended,10000030 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E110,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E114:                              # jumptable 0035E0DC case 3
patch=0,EE,2035E114,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E118,extended,C44F0000 //                                  lwc1    $f15, 0($v0)
patch=0,EE,2035E11C,extended,1000002C //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E120,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E124:                              # jumptable 0035E0DC case 4
patch=0,EE,2035E124,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E128,extended,C4500000 //                                  lwc1    $f16, 0($v0)
patch=0,EE,2035E12C,extended,10000028 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E130,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E134:                              # jumptable 0035E0DC case 5
patch=0,EE,2035E134,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E138,extended,C4510000 //                                  lwc1    $f17, 0($v0)
patch=0,EE,2035E13C,extended,10000024 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E140,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E144:                              # jumptable 0035E0DC case 6
patch=0,EE,2035E144,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E148,extended,C4520000 //                                  lwc1    $f18, 0($v0)
patch=0,EE,2035E14C,extended,10000020 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E150,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E154:                              # jumptable 0035E0DC case 7
patch=0,EE,2035E154,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E158,extended,C4530000 //                                  lwc1    $f19, 0($v0)
patch=0,EE,2035E15C,extended,1000001C //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E160,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E164:                              # jumptable 0035E0DC case 8
patch=0,EE,2035E164,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E168,extended,C4540000 //                                  lwc1    $f20, 0($v0)
patch=0,EE,2035E16C,extended,10000018 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E170,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E174:                              # jumptable 0035E0DC case 9
patch=0,EE,2035E174,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E178,extended,C4550000 //                                  lwc1    $f21, 0($v0)
patch=0,EE,2035E17C,extended,10000014 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E180,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E184:                              # jumptable 0035E0DC case 10
patch=0,EE,2035E184,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E188,extended,C4560000 //                                  lwc1    $f22, 0($v0)
patch=0,EE,2035E18C,extended,10000010 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E190,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E194:                              # jumptable 0035E0DC case 11
patch=0,EE,2035E194,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E198,extended,C4570000 //                                  lwc1    $f23, 0($v0)
patch=0,EE,2035E19C,extended,1000000C //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E1A0,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E1A4:                              # jumptable 0035E0DC case 12
patch=0,EE,2035E1A4,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E1A8,extended,C4580000 //                                  lwc1    $f24, 0($v0)
patch=0,EE,2035E1AC,extended,10000008 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E1B0,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E1B4:                              # jumptable 0035E0DC case 13
patch=0,EE,2035E1B4,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E1B8,extended,C4590000 //                                  lwc1    $f25, 0($v0)
patch=0,EE,2035E1BC,extended,10000004 //                                  b       def_35E0DC       # jumptable 0035E0DC default case
patch=0,EE,2035E1C0,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E1C4:                              # jumptable 0035E0DC case 14
patch=0,EE,2035E1C4,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E1C8,extended,C45A0000 //                                  lwc1    $f26, 0($v0)
patch=0,EE,2035E1CC,extended,00000000 //                                  nop
//
//                              def_35E0DC:                              # jumptable 0035E0DC default case
patch=0,EE,2035E1D0,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035E1D4,extended,24420001 //                                  addiu   $v0, 1
patch=0,EE,2035E1D8,extended,AFC20040 //                                  sw      $v0, 0x70+var_30($fp)
patch=0,EE,2035E1DC,extended,10000021 //                                  b       def_35E098       # jumptable 0035E098 default case, cases 0,12,13,15
patch=0,EE,2035E1E0,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E1E4:                              # jumptable 0035E098 cases 1-5,7,8
patch=0,EE,2035E1E4,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E1E8,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035E1EC,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E1F0,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035E1F4,extended,00000000 //                                  nop
patch=0,EE,2035E1F8,extended,1000001A //                                  b       def_35E098       # jumptable 0035E098 default case, cases 0,12,13,15
patch=0,EE,2035E1FC,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E200:                              # jumptable 0035E098 cases 10,11,16,17
patch=0,EE,2035E200,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035E204,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E208,extended,0C07E0C0 //                                  jal     GetScriptParamPointer(CRunningScript *,int)
patch=0,EE,2035E20C,extended,00000000 //                                  nop
patch=0,EE,2035E210,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035E214,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E218,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035E21C,extended,10000011 //                                  b       def_35E098       # jumptable 0035E098 default case, cases 0,12,13,15
patch=0,EE,2035E220,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E224:                              # jumptable 0035E098 cases 9,14
patch=0,EE,2035E224,extended,93828098 //                                  lbu     $v0, currTextParam
patch=0,EE,2035E228,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035E22C,extended,306300FF //                                  andi    $v1, 0xFF
patch=0,EE,2035E230,extended,A3838098 //                                  sb      $v1, currTextParam
patch=0,EE,2035E234,extended,000219C0 //                                  sll     $v1, $v0, 7
patch=0,EE,2035E238,extended,3C020036 //
patch=0,EE,2035E23C,extended,2442F5E0 //                      li      $v0, textParams
patch=0,EE,2035E240,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035E244,extended,24060080 //                                  li      $a2, 0x80        # unsigned __int8
patch=0,EE,2035E248,extended,00402825 //                                  move    $a1, $v0         # char *
patch=0,EE,2035E24C,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)  # CRunningScript *
patch=0,EE,2035E250,extended,0C0D71FA //                                  jal     readString(CRunningScript *,char *,uchar)
patch=0,EE,2035E254,extended,00000000 //                                  nop
patch=0,EE,2035E258,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035E25C,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E260,extended,AC430000 //                                  sw      $v1, 0($v0)
//
//                              def_35E098:                              # jumptable 0035E098 default case, cases 0,12,13,15
patch=0,EE,2035E264,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E268,extended,24420004 //                                  addiu   $v0, 4
patch=0,EE,2035E26C,extended,AFC20044 //                                  sw      $v0, 0x70+var_2C($fp)
//
//                              loc_35E270:
patch=0,EE,2035E270,extended,8FC30044 //                                  lw      $v1, 0x70+var_2C($fp)
patch=0,EE,2035E274,extended,8FC20048 //                                  lw      $v0, 0x70+var_28($fp)
patch=0,EE,2035E278,extended,1462FF7B //                                  bne     $v1, $v0, loc_35E068
patch=0,EE,2035E27C,extended,00000000 //                                  nop
patch=0,EE,2035E280,extended,8FC20050 //                                  lw      $v0, 0x70+var_20($fp)
patch=0,EE,2035E284,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E288,extended,246AF860 //                                  addiu   $a6, $v1, (arguments - 0x360000)
patch=0,EE,2035E28C,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E290,extended,2469F860 //                                  addiu   $a5, $v1, (arguments - 0x360000)
patch=0,EE,2035E294,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E298,extended,2468F860 //                                  addiu   $a4, $v1, (arguments - 0x360000)
patch=0,EE,2035E29C,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E2A0,extended,2467F860 //                                  addiu   $a3, $v1, (arguments - 0x360000)
patch=0,EE,2035E2A4,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E2A8,extended,2466F860 //                                  addiu   $a2, $v1, (arguments - 0x360000)
patch=0,EE,2035E2AC,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E2B0,extended,2465F860 //                                  addiu   $a1, $v1, (arguments - 0x360000)
patch=0,EE,2035E2B4,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E2B8,extended,2464F860 //                                  addiu   $a0, $v1, (arguments - 0x360000)
patch=0,EE,2035E2BC,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E2C0,extended,3C0B0036 //
patch=0,EE,2035E2C4,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035E2C8,extended,8D6B0038 //                                 lw      $a7, (dword_35F898 - 0x35F860)($a7)
patch=0,EE,2035E2CC,extended,AFAB0030 //                                  sw      $a7, 0x70+var_40($sp)
patch=0,EE,2035E2D0,extended,3C0B0036 //
patch=0,EE,2035E2D4,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035E2D8,extended,8D6B0034 //                                 lw      $a7, (dword_35F894 - 0x35F860)($a7)
patch=0,EE,2035E2DC,extended,AFAB0028 //                                  sw      $a7, 0x70+var_48($sp)
patch=0,EE,2035E2E0,extended,3C0B0036 //
patch=0,EE,2035E2E4,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035E2E8,extended,8D6B0030 //                                 lw      $a7, (dword_35F890 - 0x35F860)($a7)
patch=0,EE,2035E2EC,extended,AFAB0020 //                                  sw      $a7, 0x70+var_50($sp)
patch=0,EE,2035E2F0,extended,3C0B0036 //
patch=0,EE,2035E2F4,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035E2F8,extended,8D6B002C //                                 lw      $a7, (dword_35F88C - 0x35F860)($a7)
patch=0,EE,2035E2FC,extended,AFAB0018 //                                  sw      $a7, 0x70+var_58($sp)
patch=0,EE,2035E300,extended,3C0B0036 //
patch=0,EE,2035E304,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035E308,extended,8D6B0028 //                                 lw      $a7, (dword_35F888 - 0x35F860)($a7)
patch=0,EE,2035E30C,extended,AFAB0010 //                                  sw      $a7, 0x70+var_60($sp)
patch=0,EE,2035E310,extended,3C0B0036 //
patch=0,EE,2035E314,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035E318,extended,8D6B0024 //                                 lw      $a7, (dword_35F884 - 0x35F860)($a7)
patch=0,EE,2035E31C,extended,AFAB0008 //                                  sw      $a7, 0x70+var_68($sp)
patch=0,EE,2035E320,extended,3C0B0036 //
patch=0,EE,2035E324,extended,256BF860 //                      li      $a7, arguments
patch=0,EE,2035E328,extended,8D6B0020 //                                 lw      $a7, (dword_35F880 - 0x35F860)($a7)
patch=0,EE,2035E32C,extended,AFAB0000 //                                  sw      $a7, 0x70+var_70($sp)
patch=0,EE,2035E330,extended,8D4B001C //                                  lw      $a7, (dword_35F87C - 0x35F860)($a6)
patch=0,EE,2035E334,extended,8D2A0018 //                                  lw      $a6, (dword_35F878 - 0x35F860)($a5)
patch=0,EE,2035E338,extended,8D090014 //                                  lw      $a5, (dword_35F874 - 0x35F860)($a4)
patch=0,EE,2035E33C,extended,8CE80010 //                                  lw      $a4, (dword_35F870 - 0x35F860)($a3)
patch=0,EE,2035E340,extended,8CC7000C //                                  lw      $a3, (dword_35F86C - 0x35F860)($a2)
patch=0,EE,2035E344,extended,8CA60008 //                                  lw      $a2, (dword_35F868 - 0x35F860)($a1)
patch=0,EE,2035E348,extended,8C850004 //                                  lw      $a1, (dword_35F864 - 0x35F860)($a0)
patch=0,EE,2035E34C,extended,8C64F860 //                                  lw      $a0, (arguments - 0x360000)($v1)
patch=0,EE,2035E350,extended,0040F809 //                                  jalr    $v0
patch=0,EE,2035E354,extended,00000000 //                                  nop
patch=0,EE,2035E358,extended,AFC2004C //                                  sw      $v0, 0x70+var_24($fp)
patch=0,EE,2035E35C,extended,8FC5004C //                                  lw      $a1, 0x70+var_24($fp)
patch=0,EE,2035E360,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E364,extended,0C0D7B56 //                                  jal     operator<<(CRunningScript &,ulong)
patch=0,EE,2035E368,extended,00000000 //                                  nop
patch=0,EE,2035E36C,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)  # CRunningScript *
patch=0,EE,2035E370,extended,0C0D7B00 //                                  jal     SkipUnusedParameters(CRunningScript *)
patch=0,EE,2035E374,extended,00000000 //                                  nop
patch=0,EE,2035E378,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035E37C,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035E380,extended,DFBF0078 //                                  ld      $ra, 0x70+var_s8($sp)
patch=0,EE,2035E384,extended,DFBE0070 //                                  ld      $fp, 0x70+var_s0($sp)
patch=0,EE,2035E388,extended,27BD0080 //                                  addiu   $sp, 0x80
patch=0,EE,2035E38C,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035E390,extended,00000000 //                                  nop
//                               # } // starts at 35DFC4
//                               # End of function opcode_0AA7(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x70
//
//                               # _DWORD __fastcall opcode_0AA8(CRunningScript *)
//                                              .globl opcode_0AA8(CRunningScript *)
//                              opcode_0AA8(CRunningScript *):
//
//                              var_70          = -0x70
//                              var_68          = -0x68
//                              var_60          = -0x60
//                              var_58          = -0x58
//                              var_50          = -0x50
//                              var_48          = -0x48
//                              var_40          = -0x40
//                              var_38          = -0x38
//                              var_30          = -0x30
//                              var_2C          = -0x2C
//                              var_28          = -0x28
//                              var_24          = -0x24
//                              var_20          = -0x20
//                              var_1C          = -0x1C
//                              var_18          = -0x18
//                              var_14          = -0x14
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035E394,extended,27BDFF80 //                                  addiu   $sp, -0x80
patch=0,EE,2035E398,extended,FFBF0078 //                                  sd      $ra, 0x70+var_s8($sp)
patch=0,EE,2035E39C,extended,FFBE0070 //                                  sd      $fp, 0x70+var_s0($sp)
patch=0,EE,2035E3A0,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035E3A4,extended,AFC40060 //                                  sw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E3A8,extended,27C20050 //                                  addiu   $v0, $fp, 0x70+var_20
patch=0,EE,2035E3AC,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035E3B0,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E3B4,extended,0C0D7C29 //                                  jal     operator>><ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
patch=0,EE,2035E3B8,extended,00000000 //                                  nop
patch=0,EE,2035E3BC,extended,27C30054 //                                  addiu   $v1, $fp, 0x70+var_1C
patch=0,EE,2035E3C0,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035E3C4,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035E3C8,extended,0C0D7BBD //                                  jal     operator>>(CRunningScript &,void *&)
patch=0,EE,2035E3CC,extended,00000000 //                                  nop
patch=0,EE,2035E3D0,extended,27C30058 //                                  addiu   $v1, $fp, 0x70+var_18
patch=0,EE,2035E3D4,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035E3D8,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035E3DC,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035E3E0,extended,00000000 //                                  nop
patch=0,EE,2035E3E4,extended,27C3005C //                                  addiu   $v1, $fp, 0x70+var_14
patch=0,EE,2035E3E8,extended,00602825 //                                  move    $a1, $v1
patch=0,EE,2035E3EC,extended,00402025 //                                  move    $a0, $v0
patch=0,EE,2035E3F0,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035E3F4,extended,00000000 //                                  nop
patch=0,EE,2035E3F8,extended,8FC20058 //                                  lw      $v0, 0x70+var_18($fp)
patch=0,EE,2035E3FC,extended,2C420010 //                                  sltiu   $v0, 0x10
patch=0,EE,2035E400,extended,14400003 //                                  bnez    $v0, loc_35E410
patch=0,EE,2035E404,extended,00000000 //                                  nop
patch=0,EE,2035E408,extended,2402000F //                                  li      $v0, 0xF
patch=0,EE,2035E40C,extended,AFC20058 //                                  sw      $v0, 0x70+var_18($fp)
//
//                              loc_35E410:
patch=0,EE,2035E410,extended,8FC2005C //                                  lw      $v0, 0x70+var_14($fp)
patch=0,EE,2035E414,extended,00021080 //                                  sll     $v0, 2
patch=0,EE,2035E418,extended,AFC2005C //                                  sw      $v0, 0x70+var_14($fp)
patch=0,EE,2035E41C,extended,8FC20058 //                                  lw      $v0, 0x70+var_18($fp)
patch=0,EE,2035E420,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035E424,extended,3C020036 //
patch=0,EE,2035E428,extended,2442F860 //                      li      $v0, arguments
patch=0,EE,2035E42C,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035E430,extended,AFC20048 //                                  sw      $v0, 0x70+var_28($fp)
patch=0,EE,2035E434,extended,AFC00040 //                                  sw      $zero, 0x70+var_30($fp)
patch=0,EE,2035E438,extended,3C020036 //
patch=0,EE,2035E43C,extended,2442F860 //                      li      $v0, arguments
patch=0,EE,2035E440,extended,AFC20044 //                                 sw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E444,extended,10000083 //                                  b       loc_35E654
patch=0,EE,2035E448,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E44C:                              # this
patch=0,EE,2035E44C,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E450,extended,0C0D7A9A //                                  jal     CRunningScript::GetBytePointer(void)
patch=0,EE,2035E454,extended,00000000 //                                  nop
patch=0,EE,2035E458,extended,90420000 //                                  lbu     $v0, 0($v0)
patch=0,EE,2035E45C,extended,2C430012 //                                  sltiu   $v1, $v0, 0x12   # switch 18 cases
patch=0,EE,2035E460,extended,10600079 //                                  beqz    $v1, def_35E47C  # jumptable 0035E47C default case, cases 0,12,13,15
patch=0,EE,2035E464,extended,00000000 //                                  nop
patch=0,EE,2035E468,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035E46C,extended,3C020036 //
patch=0,EE,2035E470,extended,2442F34C //                      li      $v0, jpt_35E47C
patch=0,EE,2035E474,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035E478,extended,8C420000 //                                  lw      $v0, 0($v0)
patch=0,EE,2035E47C,extended,00400008 //                                  jr      $v0              # switch jump
patch=0,EE,2035E480,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E484:                              # jumptable 0035E47C case 6
patch=0,EE,2035E484,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E488,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035E48C,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E490,extended,0C0D7B93 //                                  jal     operator>>(CRunningScript &,float &)
patch=0,EE,2035E494,extended,00000000 //                                  nop
patch=0,EE,2035E498,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035E49C,extended,2C42000F //                                  sltiu   $v0, 0xF         # switch 15 cases
patch=0,EE,2035E4A0,extended,10400044 //                                  beqz    $v0, def_35E4C0  # jumptable 0035E4C0 default case
patch=0,EE,2035E4A4,extended,00000000 //                                  nop
patch=0,EE,2035E4A8,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035E4AC,extended,00021880 //                                  sll     $v1, $v0, 2
patch=0,EE,2035E4B0,extended,3C020036 //
patch=0,EE,2035E4B4,extended,2442F394 //                      li      $v0, jpt_35E4C0
patch=0,EE,2035E4B8,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035E4BC,extended,8C420000 //                                  lw      $v0, 0($v0)
patch=0,EE,2035E4C0,extended,00400008 //                                  jr      $v0              # switch jump
patch=0,EE,2035E4C4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E4C8:                              # jumptable 0035E4C0 case 0
patch=0,EE,2035E4C8,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E4CC,extended,C44C0000 //                                  lwc1    $f12, 0($v0)
patch=0,EE,2035E4D0,extended,10000038 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E4D4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E4D8:                              # jumptable 0035E4C0 case 1
patch=0,EE,2035E4D8,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E4DC,extended,C44D0000 //                                  lwc1    $f13, 0($v0)
patch=0,EE,2035E4E0,extended,10000034 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E4E4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E4E8:                              # jumptable 0035E4C0 case 2
patch=0,EE,2035E4E8,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E4EC,extended,C44E0000 //                                  lwc1    $f14, 0($v0)
patch=0,EE,2035E4F0,extended,10000030 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E4F4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E4F8:                              # jumptable 0035E4C0 case 3
patch=0,EE,2035E4F8,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E4FC,extended,C44F0000 //                                  lwc1    $f15, 0($v0)
patch=0,EE,2035E500,extended,1000002C //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E504,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E508:                              # jumptable 0035E4C0 case 4
patch=0,EE,2035E508,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E50C,extended,C4500000 //                                  lwc1    $f16, 0($v0)
patch=0,EE,2035E510,extended,10000028 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E514,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E518:                              # jumptable 0035E4C0 case 5
patch=0,EE,2035E518,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E51C,extended,C4510000 //                                  lwc1    $f17, 0($v0)
patch=0,EE,2035E520,extended,10000024 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E524,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E528:                              # jumptable 0035E4C0 case 6
patch=0,EE,2035E528,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E52C,extended,C4520000 //                                  lwc1    $f18, 0($v0)
patch=0,EE,2035E530,extended,10000020 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E534,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E538:                              # jumptable 0035E4C0 case 7
patch=0,EE,2035E538,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E53C,extended,C4530000 //                                  lwc1    $f19, 0($v0)
patch=0,EE,2035E540,extended,1000001C //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E544,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E548:                              # jumptable 0035E4C0 case 8
patch=0,EE,2035E548,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E54C,extended,C4540000 //                                  lwc1    $f20, 0($v0)
patch=0,EE,2035E550,extended,10000018 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E554,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E558:                              # jumptable 0035E4C0 case 9
patch=0,EE,2035E558,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E55C,extended,C4550000 //                                  lwc1    $f21, 0($v0)
patch=0,EE,2035E560,extended,10000014 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E564,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E568:                              # jumptable 0035E4C0 case 10
patch=0,EE,2035E568,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E56C,extended,C4560000 //                                  lwc1    $f22, 0($v0)
patch=0,EE,2035E570,extended,10000010 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E574,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E578:                              # jumptable 0035E4C0 case 11
patch=0,EE,2035E578,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E57C,extended,C4570000 //                                  lwc1    $f23, 0($v0)
patch=0,EE,2035E580,extended,1000000C //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E584,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E588:                              # jumptable 0035E4C0 case 12
patch=0,EE,2035E588,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E58C,extended,C4580000 //                                  lwc1    $f24, 0($v0)
patch=0,EE,2035E590,extended,10000008 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E594,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E598:                              # jumptable 0035E4C0 case 13
patch=0,EE,2035E598,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E59C,extended,C4590000 //                                  lwc1    $f25, 0($v0)
patch=0,EE,2035E5A0,extended,10000004 //                                  b       def_35E4C0       # jumptable 0035E4C0 default case
patch=0,EE,2035E5A4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E5A8:                              # jumptable 0035E4C0 case 14
patch=0,EE,2035E5A8,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E5AC,extended,C45A0000 //                                  lwc1    $f26, 0($v0)
patch=0,EE,2035E5B0,extended,00000000 //                                  nop
//
//                              def_35E4C0:                              # jumptable 0035E4C0 default case
patch=0,EE,2035E5B4,extended,8FC20040 //                                  lw      $v0, 0x70+var_30($fp)
patch=0,EE,2035E5B8,extended,24420001 //                                  addiu   $v0, 1
patch=0,EE,2035E5BC,extended,AFC20040 //                                  sw      $v0, 0x70+var_30($fp)
patch=0,EE,2035E5C0,extended,10000021 //                                  b       def_35E47C       # jumptable 0035E47C default case, cases 0,12,13,15
patch=0,EE,2035E5C4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E5C8:                              # jumptable 0035E47C cases 1-5,7,8
patch=0,EE,2035E5C8,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E5CC,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035E5D0,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E5D4,extended,0C0D7B41 //                                  jal     operator>>(CRunningScript &,ulong &)
patch=0,EE,2035E5D8,extended,00000000 //                                  nop
patch=0,EE,2035E5DC,extended,1000001A //                                  b       def_35E47C       # jumptable 0035E47C default case, cases 0,12,13,15
patch=0,EE,2035E5E0,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E5E4:                              # jumptable 0035E47C cases 10,11,16,17
patch=0,EE,2035E5E4,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035E5E8,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E5EC,extended,0C07E0C0 //                                  jal     GetScriptParamPointer(CRunningScript *,int)
patch=0,EE,2035E5F0,extended,00000000 //                                  nop
patch=0,EE,2035E5F4,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035E5F8,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E5FC,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035E600,extended,10000011 //                                  b       def_35E47C       # jumptable 0035E47C default case, cases 0,12,13,15
patch=0,EE,2035E604,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E608:                              # jumptable 0035E47C cases 9,14
patch=0,EE,2035E608,extended,93828098 //                                  lbu     $v0, currTextParam
patch=0,EE,2035E60C,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035E610,extended,306300FF //                                  andi    $v1, 0xFF
patch=0,EE,2035E614,extended,A3838098 //                                  sb      $v1, currTextParam
patch=0,EE,2035E618,extended,000219C0 //                                  sll     $v1, $v0, 7
patch=0,EE,2035E61C,extended,3C020036 //
patch=0,EE,2035E620,extended,2442F5E0 //                      li      $v0, textParams
patch=0,EE,2035E624,extended,00621021 //                                 addu    $v0, $v1, $v0
patch=0,EE,2035E628,extended,24060080 //                                  li      $a2, 0x80        # unsigned __int8
patch=0,EE,2035E62C,extended,00402825 //                                  move    $a1, $v0         # char *
patch=0,EE,2035E630,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)  # CRunningScript *
patch=0,EE,2035E634,extended,0C0D71FA //                                  jal     readString(CRunningScript *,char *,uchar)
patch=0,EE,2035E638,extended,00000000 //                                  nop
patch=0,EE,2035E63C,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035E640,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E644,extended,AC430000 //                                  sw      $v1, 0($v0)
//
//                              def_35E47C:                              # jumptable 0035E47C default case, cases 0,12,13,15
patch=0,EE,2035E648,extended,8FC20044 //                                  lw      $v0, 0x70+var_2C($fp)
patch=0,EE,2035E64C,extended,24420004 //                                  addiu   $v0, 4
patch=0,EE,2035E650,extended,AFC20044 //                                  sw      $v0, 0x70+var_2C($fp)
//
//                              loc_35E654:
patch=0,EE,2035E654,extended,8FC30044 //                                  lw      $v1, 0x70+var_2C($fp)
patch=0,EE,2035E658,extended,8FC20048 //                                  lw      $v0, 0x70+var_28($fp)
patch=0,EE,2035E65C,extended,1462FF7B //                                  bne     $v1, $v0, loc_35E44C
patch=0,EE,2035E660,extended,00000000 //                                  nop
patch=0,EE,2035E664,extended,8FC20050 //                                  lw      $v0, 0x70+var_20($fp)
patch=0,EE,2035E668,extended,8FCC0054 //                                  lw      $t4, 0x70+var_1C($fp)
patch=0,EE,2035E66C,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E670,extended,2469F860 //                                  addiu   $a5, $v1, (arguments - 0x360000)
patch=0,EE,2035E674,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E678,extended,2468F860 //                                  addiu   $a4, $v1, (arguments - 0x360000)
patch=0,EE,2035E67C,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E680,extended,2467F860 //                                  addiu   $a3, $v1, (arguments - 0x360000)
patch=0,EE,2035E684,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E688,extended,2466F860 //                                  addiu   $a2, $v1, (arguments - 0x360000)
patch=0,EE,2035E68C,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E690,extended,2465F860 //                                  addiu   $a1, $v1, (arguments - 0x360000)
patch=0,EE,2035E694,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E698,extended,2464F860 //                                  addiu   $a0, $v1, (arguments - 0x360000)
patch=0,EE,2035E69C,extended,3C030036 //                                  lui     $v1, 0x36  # '6'
patch=0,EE,2035E6A0,extended,3C0A0036 //
patch=0,EE,2035E6A4,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035E6A8,extended,8D4A0038 //                                 lw      $a6, (dword_35F898 - 0x35F860)($a6)
patch=0,EE,2035E6AC,extended,AFAA0038 //                                  sw      $a6, 0x70+var_38($sp)
patch=0,EE,2035E6B0,extended,3C0A0036 //
patch=0,EE,2035E6B4,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035E6B8,extended,8D4A0034 //                                 lw      $a6, (dword_35F894 - 0x35F860)($a6)
patch=0,EE,2035E6BC,extended,AFAA0030 //                                  sw      $a6, 0x70+var_40($sp)
patch=0,EE,2035E6C0,extended,3C0A0036 //
patch=0,EE,2035E6C4,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035E6C8,extended,8D4A0030 //                                 lw      $a6, (dword_35F890 - 0x35F860)($a6)
patch=0,EE,2035E6CC,extended,AFAA0028 //                                  sw      $a6, 0x70+var_48($sp)
patch=0,EE,2035E6D0,extended,3C0A0036 //
patch=0,EE,2035E6D4,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035E6D8,extended,8D4A002C //                                 lw      $a6, (dword_35F88C - 0x35F860)($a6)
patch=0,EE,2035E6DC,extended,AFAA0020 //                                  sw      $a6, 0x70+var_50($sp)
patch=0,EE,2035E6E0,extended,3C0A0036 //
patch=0,EE,2035E6E4,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035E6E8,extended,8D4A0028 //                                 lw      $a6, (dword_35F888 - 0x35F860)($a6)
patch=0,EE,2035E6EC,extended,AFAA0018 //                                  sw      $a6, 0x70+var_58($sp)
patch=0,EE,2035E6F0,extended,3C0A0036 //
patch=0,EE,2035E6F4,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035E6F8,extended,8D4A0024 //                                 lw      $a6, (dword_35F884 - 0x35F860)($a6)
patch=0,EE,2035E6FC,extended,AFAA0010 //                                  sw      $a6, 0x70+var_60($sp)
patch=0,EE,2035E700,extended,3C0A0036 //
patch=0,EE,2035E704,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035E708,extended,8D4A0020 //                                 lw      $a6, (dword_35F880 - 0x35F860)($a6)
patch=0,EE,2035E70C,extended,AFAA0008 //                                  sw      $a6, 0x70+var_68($sp)
patch=0,EE,2035E710,extended,3C0A0036 //
patch=0,EE,2035E714,extended,254AF860 //                      li      $a6, arguments
patch=0,EE,2035E718,extended,8D4A001C //                                 lw      $a6, (dword_35F87C - 0x35F860)($a6)
patch=0,EE,2035E71C,extended,AFAA0000 //                                  sw      $a6, 0x70+var_70($sp)
patch=0,EE,2035E720,extended,8D2B0018 //                                  lw      $a7, (dword_35F878 - 0x35F860)($a5)
patch=0,EE,2035E724,extended,8D0A0014 //                                  lw      $a6, (dword_35F874 - 0x35F860)($a4)
patch=0,EE,2035E728,extended,8CE90010 //                                  lw      $a5, (dword_35F870 - 0x35F860)($a3)
patch=0,EE,2035E72C,extended,8CC8000C //                                  lw      $a4, (dword_35F86C - 0x35F860)($a2)
patch=0,EE,2035E730,extended,8CA70008 //                                  lw      $a3, (dword_35F868 - 0x35F860)($a1)
patch=0,EE,2035E734,extended,8C860004 //                                  lw      $a2, (dword_35F864 - 0x35F860)($a0)
patch=0,EE,2035E738,extended,8C65F860 //                                  lw      $a1, (arguments - 0x360000)($v1)
patch=0,EE,2035E73C,extended,01802025 //                                  move    $a0, $t4
patch=0,EE,2035E740,extended,0040F809 //                                  jalr    $v0
patch=0,EE,2035E744,extended,00000000 //                                  nop
patch=0,EE,2035E748,extended,AFC2004C //                                  sw      $v0, 0x70+var_24($fp)
patch=0,EE,2035E74C,extended,8FC5004C //                                  lw      $a1, 0x70+var_24($fp)
patch=0,EE,2035E750,extended,8FC40060 //                                  lw      $a0, 0x70+var_10($fp)
patch=0,EE,2035E754,extended,0C0D7B56 //                                  jal     operator<<(CRunningScript &,ulong)
patch=0,EE,2035E758,extended,00000000 //                                  nop
patch=0,EE,2035E75C,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035E760,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035E764,extended,DFBF0078 //                                  ld      $ra, 0x70+var_s8($sp)
patch=0,EE,2035E768,extended,DFBE0070 //                                  ld      $fp, 0x70+var_s0($sp)
patch=0,EE,2035E76C,extended,27BD0080 //                                  addiu   $sp, 0x80
patch=0,EE,2035E770,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035E774,extended,00000000 //                                  nop
//                               # } // starts at 35E394
//                               # End of function opcode_0AA8(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x28
//
//                               # _DWORD __fastcall opcode_0AC6(CRunningScript *)
//                                              .globl opcode_0AC6(CRunningScript *)
//                              opcode_0AC6(CRunningScript *):
//
//                              var_28          = -0x28
//                              var_18          = -0x18
//                              var_s0          =  0
//                              var_s8          =  8
//                              var_s10         =  0x10
//
//                               # __unwind {
patch=0,EE,2035E778,extended,27BDFFC0 //                                  addiu   $sp, -0x40
patch=0,EE,2035E77C,extended,FFBF0038 //                                  sd      $ra, 0x28+var_s10($sp)
patch=0,EE,2035E780,extended,FFBE0030 //                                  sd      $fp, 0x28+var_s8($sp)
patch=0,EE,2035E784,extended,FFB00028 //                                  sd      $s0, 0x28+var_s0($sp)
patch=0,EE,2035E788,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035E78C,extended,AFC40010 //                                  sw      $a0, 0x28+var_18($fp)
patch=0,EE,2035E790,extended,03C02825 //                                  move    $a1, $fp
patch=0,EE,2035E794,extended,8FC40010 //                                  lw      $a0, 0x28+var_18($fp)
patch=0,EE,2035E798,extended,0C0D7B6A //                                  jal     operator>>(CRunningScript &,int &)
patch=0,EE,2035E79C,extended,00000000 //                                  nop
patch=0,EE,2035E7A0,extended,8FD00010 //                                  lw      $s0, 0x28+var_18($fp)
patch=0,EE,2035E7A4,extended,8FC20000 //                                  lw      $v0, 0x28+var_28($fp)
patch=0,EE,2035E7A8,extended,0441000A //                                  bgez    $v0, loc_35E7D4
patch=0,EE,2035E7AC,extended,00000000 //                                  nop
patch=0,EE,2035E7B0,extended,8FC40010 //                                  lw      $a0, 0x28+var_18($fp)  # this
patch=0,EE,2035E7B4,extended,0C0D7A8F //                                  jal     CRunningScript::GetBasePointer(void)
patch=0,EE,2035E7B8,extended,00000000 //                                  nop
patch=0,EE,2035E7BC,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035E7C0,extended,8FC20000 //                                  lw      $v0, 0x28+var_28($fp)
patch=0,EE,2035E7C4,extended,00021023 //                                  negu    $v0, $v0
patch=0,EE,2035E7C8,extended,00621021 //                                  addu    $v0, $v1, $v0
patch=0,EE,2035E7CC,extended,10000005 //                                  b       loc_35E7E4
patch=0,EE,2035E7D0,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E7D4:
patch=0,EE,2035E7D4,extended,3C02006B //
patch=0,EE,2035E7D8,extended,8C421FF0 //                      lw      $v0, CTheScripts_ScriptSpace
patch=0,EE,2035E7DC,extended,8FC30000 //                                 lw      $v1, 0x28+var_28($fp)
patch=0,EE,2035E7E0,extended,00431021 //                                  addu    $v0, $v1
//
//                              loc_35E7E4:
patch=0,EE,2035E7E4,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035E7E8,extended,02002025 //                                  move    $a0, $s0
patch=0,EE,2035E7EC,extended,0C0D7C3F //                                  jal     operator<<<uchar>(CRunningScript &,uchar *)
patch=0,EE,2035E7F0,extended,00000000 //                                  nop
patch=0,EE,2035E7F4,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035E7F8,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035E7FC,extended,DFBF0038 //                                  ld      $ra, 0x28+var_s10($sp)
patch=0,EE,2035E800,extended,DFBE0030 //                                  ld      $fp, 0x28+var_s8($sp)
patch=0,EE,2035E804,extended,DFB00028 //                                  ld      $s0, 0x28+var_s0($sp)
patch=0,EE,2035E808,extended,27BD0040 //                                  addiu   $sp, 0x40
patch=0,EE,2035E80C,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035E810,extended,00000000 //                                  nop
//                               # } // starts at 35E778
//                               # End of function opcode_0AC6(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x18
//
//                               # _DWORD __fastcall opcode_0AC7(CRunningScript *)
//                                              .globl opcode_0AC7(CRunningScript *)
//                              opcode_0AC7(CRunningScript *):
//
//                              var_18          = -0x18
//                              var_s0          =  0
//                              var_s8          =  8
//                              var_s10         =  0x10
//
//                               # __unwind {
patch=0,EE,2035E814,extended,27BDFFD0 //                                  addiu   $sp, -0x30
patch=0,EE,2035E818,extended,FFBF0028 //                                  sd      $ra, 0x18+var_s10($sp)
patch=0,EE,2035E81C,extended,FFBE0020 //                                  sd      $fp, 0x18+var_s8($sp)
patch=0,EE,2035E820,extended,FFB00018 //                                  sd      $s0, 0x18+var_s0($sp)
patch=0,EE,2035E824,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035E828,extended,AFC40000 //                                  sw      $a0, 0x18+var_18($fp)
patch=0,EE,2035E82C,extended,8FD00000 //                                  lw      $s0, 0x18+var_18($fp)
patch=0,EE,2035E830,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035E834,extended,8FC40000 //                                  lw      $a0, 0x18+var_18($fp)
patch=0,EE,2035E838,extended,0C07E0C0 //                                  jal     GetScriptParamPointer(CRunningScript *,int)
patch=0,EE,2035E83C,extended,00000000 //                                  nop
patch=0,EE,2035E840,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035E844,extended,02002025 //                                  move    $a0, $s0
patch=0,EE,2035E848,extended,0C0D7C53 //                                  jal     operator<<<SCRIPT_VAR>(CRunningScript &,SCRIPT_VAR *)
patch=0,EE,2035E84C,extended,00000000 //                                  nop
patch=0,EE,2035E850,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035E854,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035E858,extended,DFBF0028 //                                  ld      $ra, 0x18+var_s10($sp)
patch=0,EE,2035E85C,extended,DFBE0020 //                                  ld      $fp, 0x18+var_s8($sp)
patch=0,EE,2035E860,extended,DFB00018 //                                  ld      $s0, 0x18+var_s0($sp)
patch=0,EE,2035E864,extended,27BD0030 //                                  addiu   $sp, 0x30
patch=0,EE,2035E868,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035E86C,extended,00000000 //                                  nop
//                               # } // starts at 35E814
//                               # End of function opcode_0AC7(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                               # _DWORD __fastcall opcode_0ACA(CRunningScript *)
//                                              .globl opcode_0ACA(CRunningScript *)
//                              opcode_0ACA(CRunningScript *):
//
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035E870,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035E874,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035E878,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035E87C,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035E880,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035E884,extended,00003025 //                                  move    $a2, $zero       # unsigned __int8
patch=0,EE,2035E888,extended,00002825 //                                  move    $a1, $zero       # char *
patch=0,EE,2035E88C,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)  # CRunningScript *
patch=0,EE,2035E890,extended,0C0D71FA //                                  jal     readString(CRunningScript *,char *,uchar)
patch=0,EE,2035E894,extended,00000000 //                                  nop
patch=0,EE,2035E898,extended,00003825 //                                  move    $a3, $zero       # int
patch=0,EE,2035E89C,extended,00003025 //                                  move    $a2, $zero       # int
patch=0,EE,2035E8A0,extended,00002825 //                                  move    $a1, $zero       # int
patch=0,EE,2035E8A4,extended,00402025 //                                  move    $a0, $v0         # char *
patch=0,EE,2035E8A8,extended,0C0AA45C //                                  jal     PrintHelp(char *,int,int,int)
patch=0,EE,2035E8AC,extended,00000000 //                                  nop
patch=0,EE,2035E8B0,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035E8B4,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035E8B8,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035E8BC,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035E8C0,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035E8C4,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035E8C8,extended,00000000 //                                  nop
//                               # } // starts at 35E870
//                               # End of function opcode_0ACA(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x110
//
//                               # _DWORD __fastcall opcode_0ACE(CRunningScript *)
//                                              .globl opcode_0ACE(CRunningScript *)
//                              opcode_0ACE(CRunningScript *):
//
//                              var_90          = -0x90
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035E8CC,extended,27BDFEE0 //                                  addiu   $sp, -0x120
patch=0,EE,2035E8D0,extended,FFBF0118 //                                  sd      $ra, 0x110+var_s8($sp)
patch=0,EE,2035E8D4,extended,FFBE0110 //                                  sd      $fp, 0x110+var_s0($sp)
patch=0,EE,2035E8D8,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035E8DC,extended,AFC40100 //                                  sw      $a0, 0x110+var_10($fp)
patch=0,EE,2035E8E0,extended,24060080 //                                  li      $a2, 0x80        # unsigned __int8
patch=0,EE,2035E8E4,extended,03C02825 //                                  move    $a1, $fp         # char *
patch=0,EE,2035E8E8,extended,8FC40100 //                                  lw      $a0, 0x110+var_10($fp)  # CRunningScript *
patch=0,EE,2035E8EC,extended,0C0D71FA //                                  jal     readString(CRunningScript *,char *,uchar)
patch=0,EE,2035E8F0,extended,00000000 //                                  nop
patch=0,EE,2035E8F4,extended,27C20080 //                                  addiu   $v0, $fp, 0x110+var_90
patch=0,EE,2035E8F8,extended,03C03825 //                                  move    $a3, $fp         # char *
patch=0,EE,2035E8FC,extended,24060080 //                                  li      $a2, 0x80        # unsigned int
patch=0,EE,2035E900,extended,00402825 //                                  move    $a1, $v0         # char *
patch=0,EE,2035E904,extended,8FC40100 //                                  lw      $a0, 0x110+var_10($fp)  # CRunningScript *
patch=0,EE,2035E908,extended,0C0D726B //                                  jal     format(CRunningScript *,char *,uint,char const*)
patch=0,EE,2035E90C,extended,00000000 //                                  nop
patch=0,EE,2035E910,extended,27C20080 //                                  addiu   $v0, $fp, 0x110+var_90
patch=0,EE,2035E914,extended,00003825 //                                  move    $a3, $zero       # int
patch=0,EE,2035E918,extended,00003025 //                                  move    $a2, $zero       # int
patch=0,EE,2035E91C,extended,00002825 //                                  move    $a1, $zero       # int
patch=0,EE,2035E920,extended,00402025 //                                  move    $a0, $v0         # char *
patch=0,EE,2035E924,extended,0C0AA45C //                                  jal     PrintHelp(char *,int,int,int)
patch=0,EE,2035E928,extended,00000000 //                                  nop
patch=0,EE,2035E92C,extended,8FC40100 //                                  lw      $a0, 0x110+var_10($fp)  # CRunningScript *
patch=0,EE,2035E930,extended,0C0D7B00 //                                  jal     SkipUnusedParameters(CRunningScript *)
patch=0,EE,2035E934,extended,00000000 //                                  nop
patch=0,EE,2035E938,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035E93C,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035E940,extended,DFBF0118 //                                  ld      $ra, 0x110+var_s8($sp)
patch=0,EE,2035E944,extended,DFBE0110 //                                  ld      $fp, 0x110+var_s0($sp)
patch=0,EE,2035E948,extended,27BD0120 //                                  addiu   $sp, 0x120
patch=0,EE,2035E94C,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035E950,extended,00000000 //                                  nop
//                               # } // starts at 35E8CC
//                               # End of function opcode_0ACE(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0xA0
//
//                               # _DWORD __fastcall opcode_0AD3(CRunningScript *)
//                                              .globl opcode_0AD3(CRunningScript *)
//                              opcode_0AD3(CRunningScript *):
//
//                              var_20          = -0x20
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035E954,extended,27BDFF50 //                                  addiu   $sp, -0xB0
patch=0,EE,2035E958,extended,FFBF00A8 //                                  sd      $ra, 0xA0+var_s8($sp)
patch=0,EE,2035E95C,extended,FFBE00A0 //                                  sd      $fp, 0xA0+var_s0($sp)
patch=0,EE,2035E960,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035E964,extended,AFC40090 //                                  sw      $a0, 0xA0+var_10($fp)
patch=0,EE,2035E968,extended,8FC40090 //                                  lw      $a0, 0xA0+var_10($fp)  # this
patch=0,EE,2035E96C,extended,0C0D7A9A //                                  jal     CRunningScript::GetBytePointer(void)
patch=0,EE,2035E970,extended,00000000 //                                  nop
patch=0,EE,2035E974,extended,90420000 //                                  lbu     $v0, 0($v0)
patch=0,EE,2035E978,extended,1040000B //                                  beqz    $v0, loc_35E9A8
patch=0,EE,2035E97C,extended,00000000 //                                  nop
patch=0,EE,2035E980,extended,8FC40090 //                                  lw      $a0, 0xA0+var_10($fp)  # this
patch=0,EE,2035E984,extended,0C0D7A9A //                                  jal     CRunningScript::GetBytePointer(void)
patch=0,EE,2035E988,extended,00000000 //                                  nop
patch=0,EE,2035E98C,extended,90420000 //                                  lbu     $v0, 0($v0)
patch=0,EE,2035E990,extended,2C420009 //                                  sltiu   $v0, 9
patch=0,EE,2035E994,extended,10400004 //                                  beqz    $v0, loc_35E9A8
patch=0,EE,2035E998,extended,00000000 //                                  nop
patch=0,EE,2035E99C,extended,24020001 //                                  li      $v0, 1
patch=0,EE,2035E9A0,extended,10000002 //                                  b       loc_35E9AC
patch=0,EE,2035E9A4,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E9A8:
patch=0,EE,2035E9A8,extended,00001025 //                                  move    $v0, $zero
//
//                              loc_35E9AC:
patch=0,EE,2035E9AC,extended,10400008 //                                  beqz    $v0, loc_35E9D0
patch=0,EE,2035E9B0,extended,00000000 //                                  nop
patch=0,EE,2035E9B4,extended,27C20080 //                                  addiu   $v0, $fp, 0xA0+var_20
patch=0,EE,2035E9B8,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035E9BC,extended,8FC40090 //                                  lw      $a0, 0xA0+var_10($fp)
patch=0,EE,2035E9C0,extended,0C0D7BA8 //                                  jal     operator>>(CRunningScript &,char *&)
patch=0,EE,2035E9C4,extended,00000000 //                                  nop
patch=0,EE,2035E9C8,extended,10000006 //                                  b       loc_35E9E4
patch=0,EE,2035E9CC,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35E9D0:
patch=0,EE,2035E9D0,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035E9D4,extended,8FC40090 //                                  lw      $a0, 0xA0+var_10($fp)
patch=0,EE,2035E9D8,extended,0C07E0C0 //                                  jal     GetScriptParamPointer(CRunningScript *,int)
patch=0,EE,2035E9DC,extended,00000000 //                                  nop
patch=0,EE,2035E9E0,extended,AFC20080 //                                  sw      $v0, 0xA0+var_20($fp)
//
//                              loc_35E9E4:                              # unsigned __int8
patch=0,EE,2035E9E4,extended,24060080 //                                  li      $a2, 0x80
patch=0,EE,2035E9E8,extended,03C02825 //                                  move    $a1, $fp         # char *
patch=0,EE,2035E9EC,extended,8FC40090 //                                  lw      $a0, 0xA0+var_10($fp)  # CRunningScript *
patch=0,EE,2035E9F0,extended,0C0D71FA //                                  jal     readString(CRunningScript *,char *,uchar)
patch=0,EE,2035E9F4,extended,00000000 //                                  nop
patch=0,EE,2035E9F8,extended,8FC20080 //                                  lw      $v0, 0xA0+var_20($fp)
patch=0,EE,2035E9FC,extended,03C03825 //                                  move    $a3, $fp         # char *
patch=0,EE,2035EA00,extended,2406FFFF //                                  li      $a2, 0xFFFFFFFF  # unsigned int
patch=0,EE,2035EA04,extended,00402825 //                                  move    $a1, $v0         # char *
patch=0,EE,2035EA08,extended,8FC40090 //                                  lw      $a0, 0xA0+var_10($fp)  # CRunningScript *
patch=0,EE,2035EA0C,extended,0C0D726B //                                  jal     format(CRunningScript *,char *,uint,char const*)
patch=0,EE,2035EA10,extended,00000000 //                                  nop
patch=0,EE,2035EA14,extended,8FC40090 //                                  lw      $a0, 0xA0+var_10($fp)  # CRunningScript *
patch=0,EE,2035EA18,extended,0C0D7B00 //                                  jal     SkipUnusedParameters(CRunningScript *)
patch=0,EE,2035EA1C,extended,00000000 //                                  nop
patch=0,EE,2035EA20,extended,00001025 //                                  move    $v0, $zero
patch=0,EE,2035EA24,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EA28,extended,DFBF00A8 //                                  ld      $ra, 0xA0+var_s8($sp)
patch=0,EE,2035EA2C,extended,DFBE00A0 //                                  ld      $fp, 0xA0+var_s0($sp)
patch=0,EE,2035EA30,extended,27BD00B0 //                                  addiu   $sp, 0xB0
patch=0,EE,2035EA34,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EA38,extended,00000000 //                                  nop
//                               # } // starts at 35E954
//                               # End of function opcode_0AD3(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x18
//
//                               # _DWORD CRunningScript::GetBasePointer(CRunningScript *__hidden this)
//                                              .globl CRunningScript::GetBasePointer(void)  # weak
//                              CRunningScript::GetBasePointer(void):
//
//                              var_18          = -0x18
//                              var_s0          =  0
//
//                               # __unwind {
patch=0,EE,2035EA3C,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EA40,extended,FFBE0018 //                                  sd      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EA44,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EA48,extended,AFC40000 //                                  sw      $a0, 0x18+var_18($fp)
patch=0,EE,2035EA4C,extended,8FC20000 //                                  lw      $v0, 0x18+var_18($fp)
patch=0,EE,2035EA50,extended,8C420010 //                                  lw      $v0, 0x10($v0)
patch=0,EE,2035EA54,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EA58,extended,DFBE0018 //                                  ld      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EA5C,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EA60,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EA64,extended,00000000 //                                  nop
//                               # } // starts at 35EA3C
//                               # End of function CRunningScript::GetBasePointer(void)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x18
//
//                               # _DWORD CRunningScript::GetBytePointer(CRunningScript *__hidden this)
//                                              .globl CRunningScript::GetBytePointer(void)  # weak
//                              CRunningScript::GetBytePointer(void):
//
//                              var_18          = -0x18
//                              var_s0          =  0
//
//                               # __unwind {
patch=0,EE,2035EA68,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EA6C,extended,FFBE0018 //                                  sd      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EA70,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EA74,extended,AFC40000 //                                  sw      $a0, 0x18+var_18($fp)
patch=0,EE,2035EA78,extended,8FC20000 //                                  lw      $v0, 0x18+var_18($fp)
patch=0,EE,2035EA7C,extended,8C420014 //                                  lw      $v0, 0x14($v0)
patch=0,EE,2035EA80,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EA84,extended,DFBE0018 //                                  ld      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EA88,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EA8C,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EA90,extended,00000000 //                                  nop
//                               # } // starts at 35EA68
//                               # End of function CRunningScript::GetBytePointer(void)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x18
//
//                               # _DWORD __fastcall CRunningScript::SetIp(CRunningScript *__hidden this, void *)
//                                              .globl CRunningScript::SetIp(void *)  # weak
//                              CRunningScript::SetIp(void *):
//
//                              var_18          = -0x18
//                              var_14          = -0x14
//                              var_s0          =  0
//
//                               # __unwind {
patch=0,EE,2035EA94,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EA98,extended,FFBE0018 //                                  sd      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EA9C,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EAA0,extended,AFC40000 //                                  sw      $a0, 0x18+var_18($fp)
patch=0,EE,2035EAA4,extended,AFC50004 //                                  sw      $a1, 0x18+var_14($fp)
patch=0,EE,2035EAA8,extended,8FC20000 //                                  lw      $v0, 0x18+var_18($fp)
patch=0,EE,2035EAAC,extended,8FC30004 //                                  lw      $v1, 0x18+var_14($fp)
patch=0,EE,2035EAB0,extended,AC430014 //                                  sw      $v1, 0x14($v0)
patch=0,EE,2035EAB4,extended,00000000 //                                  nop
patch=0,EE,2035EAB8,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EABC,extended,DFBE0018 //                                  ld      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EAC0,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EAC4,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EAC8,extended,00000000 //                                  nop
//                               # } // starts at 35EA94
//                               # End of function CRunningScript::SetIp(void *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x18
//
//                               # _DWORD CRunningScript::GetConditionResult(CRunningScript *__hidden this)
//                                              .globl CRunningScript::GetConditionResult(void)  # weak
//                              CRunningScript::GetConditionResult(void):
//
//                              var_18          = -0x18
//                              var_s0          =  0
//
//                               # __unwind {
patch=0,EE,2035EACC,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EAD0,extended,FFBE0018 //                                  sd      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EAD4,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EAD8,extended,AFC40000 //                                  sw      $a0, 0x18+var_18($fp)
patch=0,EE,2035EADC,extended,8FC20000 //                                  lw      $v0, 0x18+var_18($fp)
patch=0,EE,2035EAE0,extended,904200C5 //                                  lbu     $v0, 0xC5($v0)
patch=0,EE,2035EAE4,extended,0002102B //                                  sltu    $v0, $zero, $v0
patch=0,EE,2035EAE8,extended,304200FF //                                  andi    $v0, 0xFF
patch=0,EE,2035EAEC,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EAF0,extended,DFBE0018 //                                  ld      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EAF4,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EAF8,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EAFC,extended,00000000 //                                  nop
//                               # } // starts at 35EACC
//                               # End of function CRunningScript::GetConditionResult(void)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x28
//
//                               # _DWORD CRunningScript::ReadDataByte(CRunningScript *__hidden this)
//                                              .globl CRunningScript::ReadDataByte(void)  # weak
//                              CRunningScript::ReadDataByte(void):
//
//                              var_28          = -0x28
//                              var_18          = -0x18
//                              var_s0          =  0
//
//                               # __unwind {
patch=0,EE,2035EB00,extended,27BDFFD0 //                                  addiu   $sp, -0x30
patch=0,EE,2035EB04,extended,FFBE0028 //                                  sd      $fp, 0x28+var_s0($sp)
patch=0,EE,2035EB08,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EB0C,extended,AFC40010 //                                  sw      $a0, 0x28+var_18($fp)
patch=0,EE,2035EB10,extended,8FC20010 //                                  lw      $v0, 0x28+var_18($fp)
patch=0,EE,2035EB14,extended,8C420014 //                                  lw      $v0, 0x14($v0)
patch=0,EE,2035EB18,extended,90420000 //                                  lbu     $v0, 0($v0)
patch=0,EE,2035EB1C,extended,A3C20000 //                                  sb      $v0, 0x28+var_28($fp)
patch=0,EE,2035EB20,extended,8FC20010 //                                  lw      $v0, 0x28+var_18($fp)
patch=0,EE,2035EB24,extended,8C420014 //                                  lw      $v0, 0x14($v0)
patch=0,EE,2035EB28,extended,24430001 //                                  addiu   $v1, $v0, 1
patch=0,EE,2035EB2C,extended,8FC20010 //                                  lw      $v0, 0x28+var_18($fp)
patch=0,EE,2035EB30,extended,AC430014 //                                  sw      $v1, 0x14($v0)
patch=0,EE,2035EB34,extended,83C20000 //                                  lb      $v0, 0x28+var_28($fp)
patch=0,EE,2035EB38,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EB3C,extended,DFBE0028 //                                  ld      $fp, 0x28+var_s0($sp)
patch=0,EE,2035EB40,extended,27BD0030 //                                  addiu   $sp, 0x30
patch=0,EE,2035EB44,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EB48,extended,00000000 //                                  nop
//                               # } // starts at 35EB00
//                               # End of function CRunningScript::ReadDataByte(void)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x18
//
//                               # _DWORD __fastcall CRunningScript::PushStack(CRunningScript *__hidden this, unsigned __int8 *)
//                                              .globl CRunningScript::PushStack(unsigned char *)  # weak
//                              CRunningScript::PushStack(unsigned char *):
//
//                              var_18          = -0x18
//                              var_14          = -0x14
//                              var_s0          =  0
//
//                               # __unwind {
patch=0,EE,2035EB4C,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EB50,extended,FFBE0018 //                                  sd      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EB54,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EB58,extended,AFC40000 //                                  sw      $a0, 0x18+var_18($fp)
patch=0,EE,2035EB5C,extended,AFC50004 //                                  sw      $a1, 0x18+var_14($fp)
patch=0,EE,2035EB60,extended,8FC30004 //                                  lw      $v1, 0x18+var_14($fp)
patch=0,EE,2035EB64,extended,8FC20000 //                                  lw      $v0, 0x18+var_18($fp)
patch=0,EE,2035EB68,extended,94420038 //                                  lhu     $v0, 0x38($v0)
patch=0,EE,2035EB6C,extended,24440001 //                                  addiu   $a0, $v0, 1
patch=0,EE,2035EB70,extended,3085FFFF //                                  andi    $a1, $a0, 0xFFFF
patch=0,EE,2035EB74,extended,8FC40000 //                                  lw      $a0, 0x18+var_18($fp)
patch=0,EE,2035EB78,extended,A4850038 //                                  sh      $a1, 0x38($a0)
patch=0,EE,2035EB7C,extended,8FC40000 //                                  lw      $a0, 0x18+var_18($fp)
patch=0,EE,2035EB80,extended,24420006 //                                  addiu   $v0, 6
patch=0,EE,2035EB84,extended,00021080 //                                  sll     $v0, 2
patch=0,EE,2035EB88,extended,00821021 //                                  addu    $v0, $a0, $v0
patch=0,EE,2035EB8C,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035EB90,extended,00000000 //                                  nop
patch=0,EE,2035EB94,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EB98,extended,DFBE0018 //                                  ld      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EB9C,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EBA0,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EBA4,extended,00000000 //                                  nop
//                               # } // starts at 35EB4C
//                               # End of function CRunningScript::PushStack(uchar *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x18
//
//                               # _DWORD CRunningScript::PopStack(CRunningScript *__hidden this)
//                                              .globl CRunningScript::PopStack(void)  # weak
//                              CRunningScript::PopStack(void):
//
//                              var_18          = -0x18
//                              var_s0          =  0
//
//                               # __unwind {
patch=0,EE,2035EBA8,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EBAC,extended,FFBE0018 //                                  sd      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EBB0,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EBB4,extended,AFC40000 //                                  sw      $a0, 0x18+var_18($fp)
patch=0,EE,2035EBB8,extended,8FC20000 //                                  lw      $v0, 0x18+var_18($fp)
patch=0,EE,2035EBBC,extended,94420038 //                                  lhu     $v0, 0x38($v0)
patch=0,EE,2035EBC0,extended,2442FFFF //                                  addiu   $v0, -1
patch=0,EE,2035EBC4,extended,3043FFFF //                                  andi    $v1, $v0, 0xFFFF
patch=0,EE,2035EBC8,extended,8FC20000 //                                  lw      $v0, 0x18+var_18($fp)
patch=0,EE,2035EBCC,extended,A4430038 //                                  sh      $v1, 0x38($v0)
patch=0,EE,2035EBD0,extended,8FC20000 //                                  lw      $v0, 0x18+var_18($fp)
patch=0,EE,2035EBD4,extended,94420038 //                                  lhu     $v0, 0x38($v0)
patch=0,EE,2035EBD8,extended,8FC30000 //                                  lw      $v1, 0x18+var_18($fp)
patch=0,EE,2035EBDC,extended,24420006 //                                  addiu   $v0, 6
patch=0,EE,2035EBE0,extended,00021080 //                                  sll     $v0, 2
patch=0,EE,2035EBE4,extended,00621021 //                                  addu    $v0, $v1, $v0
patch=0,EE,2035EBE8,extended,8C420000 //                                  lw      $v0, 0($v0)
patch=0,EE,2035EBEC,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EBF0,extended,DFBE0018 //                                  ld      $fp, 0x18+var_s0($sp)
patch=0,EE,2035EBF4,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EBF8,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EBFC,extended,00000000 //                                  nop
//                               # } // starts at 35EBA8
//                               # End of function CRunningScript::PopStack(void)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                               # _DWORD __fastcall SkipUnusedParameters(CRunningScript *)
//                                              .globl SkipUnusedParameters(CRunningScript *)  # weak
//                              SkipUnusedParameters(CRunningScript *):
//
//                              var_10          = -0x10
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035EC00,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EC04,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EC08,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EC0C,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EC10,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EC14,extended,10000005 //                                  b       loc_35EC2C
patch=0,EE,2035EC18,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35EC1C:
patch=0,EE,2035EC1C,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035EC20,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EC24,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035EC28,extended,00000000 //                                  nop
//
//                              loc_35EC2C:                              # this
patch=0,EE,2035EC2C,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EC30,extended,0C0D7A9A //                                  jal     CRunningScript::GetBytePointer(void)
patch=0,EE,2035EC34,extended,00000000 //                                  nop
patch=0,EE,2035EC38,extended,90420000 //                                  lbu     $v0, 0($v0)
patch=0,EE,2035EC3C,extended,0002102B //                                  sltu    $v0, $zero, $v0
patch=0,EE,2035EC40,extended,304200FF //                                  andi    $v0, 0xFF
patch=0,EE,2035EC44,extended,1440FFF5 //                                  bnez    $v0, loc_35EC1C
patch=0,EE,2035EC48,extended,00000000 //                                  nop
patch=0,EE,2035EC4C,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)  # this
patch=0,EE,2035EC50,extended,0C0D7AC0 //                                  jal     CRunningScript::ReadDataByte(void)
patch=0,EE,2035EC54,extended,00000000 //                                  nop
patch=0,EE,2035EC58,extended,00000000 //                                  nop
patch=0,EE,2035EC5C,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EC60,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EC64,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EC68,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EC6C,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EC70,extended,00000000 //                                  nop
//                               # } // starts at 35EC00
//                               # End of function SkipUnusedParameters(CRunningScript *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x18
//
//                               # _DWORD __fastcall ThreadJump(CRunningScript *, int)
//                                              .globl ThreadJump(CRunningScript *, int)  # weak
//                              ThreadJump(CRunningScript *, int):
//
//                              var_18          = -0x18
//                              var_14          = -0x14
//                              var_s0          =  0
//                              var_s8          =  8
//                              var_s10         =  0x10
//
//                               # __unwind {
patch=0,EE,2035EC74,extended,27BDFFD0 //                                  addiu   $sp, -0x30
patch=0,EE,2035EC78,extended,FFBF0028 //                                  sd      $ra, 0x18+var_s10($sp)
patch=0,EE,2035EC7C,extended,FFBE0020 //                                  sd      $fp, 0x18+var_s8($sp)
patch=0,EE,2035EC80,extended,FFB00018 //                                  sd      $s0, 0x18+var_s0($sp)
patch=0,EE,2035EC84,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EC88,extended,AFC40000 //                                  sw      $a0, 0x18+var_18($fp)
patch=0,EE,2035EC8C,extended,AFC50004 //                                  sw      $a1, 0x18+var_14($fp)
patch=0,EE,2035EC90,extended,8FD00000 //                                  lw      $s0, 0x18+var_18($fp)
patch=0,EE,2035EC94,extended,8FC20004 //                                  lw      $v0, 0x18+var_14($fp)
patch=0,EE,2035EC98,extended,0441000A //                                  bgez    $v0, loc_35ECC4
patch=0,EE,2035EC9C,extended,00000000 //                                  nop
patch=0,EE,2035ECA0,extended,8FC40000 //                                  lw      $a0, 0x18+var_18($fp)  # this
patch=0,EE,2035ECA4,extended,0C0D7A8F //                                  jal     CRunningScript::GetBasePointer(void)
patch=0,EE,2035ECA8,extended,00000000 //                                  nop
patch=0,EE,2035ECAC,extended,00401825 //                                  move    $v1, $v0
patch=0,EE,2035ECB0,extended,8FC20004 //                                  lw      $v0, 0x18+var_14($fp)
patch=0,EE,2035ECB4,extended,00021023 //                                  negu    $v0, $v0
patch=0,EE,2035ECB8,extended,00621021 //                                  addu    $v0, $v1, $v0
patch=0,EE,2035ECBC,extended,10000005 //                                  b       loc_35ECD4
patch=0,EE,2035ECC0,extended,00000000 //                                  nop
//                               # ---------------------------------------------------------------------------
//
//                              loc_35ECC4:
patch=0,EE,2035ECC4,extended,3C02006B //                                  lui     $v0, 0x6B  # 'k'
patch=0,EE,2035ECC8,extended,8C431FF0 //                                  lw      $v1, CTheScripts_ScriptSpace
patch=0,EE,2035ECCC,extended,8FC20004 //                                  lw      $v0, 0x18+var_14($fp)
patch=0,EE,2035ECD0,extended,00621021 //                                  addu    $v0, $v1, $v0
//
//                              loc_35ECD4:                              # void *
patch=0,EE,2035ECD4,extended,00402825 //                                  move    $a1, $v0
patch=0,EE,2035ECD8,extended,02002025 //                                  move    $a0, $s0         # this
patch=0,EE,2035ECDC,extended,0C0D7AA5 //                                  jal     CRunningScript::SetIp(void *)
patch=0,EE,2035ECE0,extended,00000000 //                                  nop
patch=0,EE,2035ECE4,extended,00000000 //                                  nop
patch=0,EE,2035ECE8,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035ECEC,extended,DFBF0028 //                                  ld      $ra, 0x18+var_s10($sp)
patch=0,EE,2035ECF0,extended,DFBE0020 //                                  ld      $fp, 0x18+var_s8($sp)
patch=0,EE,2035ECF4,extended,DFB00018 //                                  ld      $s0, 0x18+var_s0($sp)
patch=0,EE,2035ECF8,extended,27BD0030 //                                  addiu   $sp, 0x30
patch=0,EE,2035ECFC,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035ED00,extended,00000000 //                                  nop
//                               # } // starts at 35EC74
//                               # End of function ThreadJump(CRunningScript *,int)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl operator>>(CRunningScript &, unsigned long &)  # weak
//                              operator>>(CRunningScript &, unsigned long &):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035ED04,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035ED08,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035ED0C,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035ED10,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035ED14,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035ED18,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035ED1C,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035ED20,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035ED24,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035ED28,extended,00000000 //                                  nop
patch=0,EE,2035ED2C,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035ED30,extended,8C43DFB0 //                                  lw      $v1, opcodeParams
patch=0,EE,2035ED34,extended,8FC20004 //                                  lw      $v0, 0x10+var_C($fp)
patch=0,EE,2035ED38,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035ED3C,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035ED40,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035ED44,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035ED48,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035ED4C,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035ED50,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035ED54,extended,00000000 //                                  nop
//                               # } // starts at 35ED04
//                               # End of function operator>>(CRunningScript &,ulong &)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl operator<<(CRunningScript &, unsigned long)  # weak
//                              operator<<(CRunningScript &, unsigned long):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035ED58,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035ED5C,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035ED60,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035ED64,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035ED68,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035ED6C,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035ED70,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035ED74,extended,8FC30004 //                                  lw      $v1, 0x10+var_C($fp)
patch=0,EE,2035ED78,extended,AC43DFB0 //                                  sw      $v1, opcodeParams
patch=0,EE,2035ED7C,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035ED80,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035ED84,extended,0C07DF48 //                                  jal     SetScriptParams(CRunningScript *,int)
patch=0,EE,2035ED88,extended,00000000 //                                  nop
patch=0,EE,2035ED8C,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035ED90,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035ED94,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035ED98,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035ED9C,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EDA0,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EDA4,extended,00000000 //                                  nop
//                               # } // starts at 35ED58
//                               # End of function operator<<(CRunningScript &,ulong)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl operator>>(CRunningScript &, int &)  # weak
//                              operator>>(CRunningScript &, int &):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035EDA8,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EDAC,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EDB0,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EDB4,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EDB8,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EDBC,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035EDC0,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035EDC4,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EDC8,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035EDCC,extended,00000000 //                                  nop
patch=0,EE,2035EDD0,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035EDD4,extended,8C43DFB0 //                                  lw      $v1, opcodeParams
patch=0,EE,2035EDD8,extended,8FC20004 //                                  lw      $v0, 0x10+var_C($fp)
patch=0,EE,2035EDDC,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035EDE0,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035EDE4,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EDE8,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EDEC,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EDF0,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EDF4,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EDF8,extended,00000000 //                                  nop
//                               # } // starts at 35EDA8
//                               # End of function operator>>(CRunningScript &,int &)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl operator<<(CRunningScript &, int)  # weak
//                              operator<<(CRunningScript &, int):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035EDFC,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EE00,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EE04,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EE08,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EE0C,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EE10,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035EE14,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035EE18,extended,8FC30004 //                                  lw      $v1, 0x10+var_C($fp)
patch=0,EE,2035EE1C,extended,AC43DFB0 //                                  sw      $v1, opcodeParams
patch=0,EE,2035EE20,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035EE24,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EE28,extended,0C07DF48 //                                  jal     SetScriptParams(CRunningScript *,int)
patch=0,EE,2035EE2C,extended,00000000 //                                  nop
patch=0,EE,2035EE30,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035EE34,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EE38,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EE3C,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EE40,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EE44,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EE48,extended,00000000 //                                  nop
//                               # } // starts at 35EDFC
//                               # End of function operator<<(CRunningScript &,int)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl operator>>(CRunningScript &, float &)  # weak
//                              operator>>(CRunningScript &, float &):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035EE4C,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EE50,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EE54,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EE58,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EE5C,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EE60,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035EE64,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035EE68,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EE6C,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035EE70,extended,00000000 //                                  nop
patch=0,EE,2035EE74,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035EE78,extended,C440DFB0 //                                  lwc1    $f0, opcodeParams
patch=0,EE,2035EE7C,extended,8FC20004 //                                  lw      $v0, 0x10+var_C($fp)
patch=0,EE,2035EE80,extended,E4400000 //                                  swc1    $f0, 0($v0)
patch=0,EE,2035EE84,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035EE88,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EE8C,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EE90,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EE94,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EE98,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EE9C,extended,00000000 //                                  nop
//                               # } // starts at 35EE4C
//                               # End of function operator>>(CRunningScript &,float &)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl operator>>(CRunningScript &, char *&)  # weak
//                              operator>>(CRunningScript &, char *&):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035EEA0,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EEA4,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EEA8,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EEAC,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EEB0,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EEB4,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035EEB8,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035EEBC,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EEC0,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035EEC4,extended,00000000 //                                  nop
patch=0,EE,2035EEC8,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035EECC,extended,8C43DFB0 //                                  lw      $v1, opcodeParams
patch=0,EE,2035EED0,extended,8FC20004 //                                  lw      $v0, 0x10+var_C($fp)
patch=0,EE,2035EED4,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035EED8,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035EEDC,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EEE0,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EEE4,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EEE8,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EEEC,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EEF0,extended,00000000 //                                  nop
//                               # } // starts at 35EEA0
//                               # End of function operator>>(CRunningScript &,char *&)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl operator>>(CRunningScript &, void *&)  # weak
//                              operator>>(CRunningScript &, void *&):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035EEF4,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EEF8,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EEFC,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EF00,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EF04,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EF08,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035EF0C,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035EF10,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EF14,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035EF18,extended,00000000 //                                  nop
patch=0,EE,2035EF1C,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035EF20,extended,8C43DFB0 //                                  lw      $v1, opcodeParams
patch=0,EE,2035EF24,extended,8FC20004 //                                  lw      $v0, 0x10+var_C($fp)
patch=0,EE,2035EF28,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035EF2C,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035EF30,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EF34,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EF38,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EF3C,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EF40,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EF44,extended,00000000 //                                  nop
//                               # } // starts at 35EEF4
//                               # End of function operator>>(CRunningScript &,void *&)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl CRunningScript & operator>><unsigned long>(CRunningScript &, unsigned long *&)  # weak
//                              CRunningScript & operator>><unsigned long>(CRunningScript &, unsigned long *&):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035EF48,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EF4C,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EF50,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EF54,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EF58,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EF5C,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035EF60,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035EF64,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EF68,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035EF6C,extended,00000000 //                                  nop
patch=0,EE,2035EF70,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035EF74,extended,8C43DFB0 //                                  lw      $v1, opcodeParams
patch=0,EE,2035EF78,extended,8FC20004 //                                  lw      $v0, 0x10+var_C($fp)
patch=0,EE,2035EF7C,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035EF80,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035EF84,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EF88,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EF8C,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EF90,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EF94,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EF98,extended,00000000 //                                  nop
//                               # } // starts at 35EF48
//                               # End of function operator>><ulong>(CRunningScript &,ulong *&)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl CRunningScript & operator>><void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
//                              CRunningScript & operator>><void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035EF9C,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EFA0,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EFA4,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EFA8,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035EFAC,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EFB0,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035EFB4,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035EFB8,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035EFBC,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035EFC0,extended,00000000 //                                  nop
patch=0,EE,2035EFC4,extended,3C020070 //
patch=0,EE,2035EFC8,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035EFCC,extended,00401825 //                                 move    $v1, $v0
patch=0,EE,2035EFD0,extended,8FC20004 //                                  lw      $v0, 0x10+var_C($fp)
patch=0,EE,2035EFD4,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035EFD8,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035EFDC,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035EFE0,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EFE4,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035EFE8,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035EFEC,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035EFF0,extended,00000000 //                                  nop
//                               # } // starts at 35EF9C
//                               # End of function operator>><void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl CRunningScript & operator>><void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
//                              CRunningScript & operator>><void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035EFF4,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035EFF8,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035EFFC,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035F000,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035F004,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035F008,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035F00C,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035F010,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035F014,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035F018,extended,00000000 //                                  nop
patch=0,EE,2035F01C,extended,3C020070 //
patch=0,EE,2035F020,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035F024,extended,00401825 //                                 move    $v1, $v0
patch=0,EE,2035F028,extended,8FC20004 //                                  lw      $v0, 0x10+var_C($fp)
patch=0,EE,2035F02C,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035F030,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035F034,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035F038,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035F03C,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035F040,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035F044,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035F048,extended,00000000 //                                  nop
//                               # } // starts at 35EFF4
//                               # End of function operator>><void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl CRunningScript & operator>><unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
//                              CRunningScript & operator>><unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035F04C,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035F050,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035F054,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035F058,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035F05C,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035F060,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035F064,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035F068,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035F06C,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035F070,extended,00000000 //                                  nop
patch=0,EE,2035F074,extended,3C020070 //
patch=0,EE,2035F078,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035F07C,extended,00401825 //                                 move    $v1, $v0
patch=0,EE,2035F080,extended,8FC20004 //                                  lw      $v0, 0x10+var_C($fp)
patch=0,EE,2035F084,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035F088,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035F08C,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035F090,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035F094,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035F098,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035F09C,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035F0A0,extended,00000000 //                                  nop
//                               # } // starts at 35F04C
//                               # End of function operator>><ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl CRunningScript & operator>><unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
//                              CRunningScript & operator>><unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035F0A4,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035F0A8,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035F0AC,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035F0B0,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035F0B4,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035F0B8,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035F0BC,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035F0C0,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035F0C4,extended,0C07DDF4 //                                  jal     GetScriptParams(CRunningScript *,int)
patch=0,EE,2035F0C8,extended,00000000 //                                  nop
patch=0,EE,2035F0CC,extended,3C020070 //
patch=0,EE,2035F0D0,extended,8C42DFB0 //                      lw      $v0, opcodeParams
patch=0,EE,2035F0D4,extended,00401825 //                                 move    $v1, $v0
patch=0,EE,2035F0D8,extended,8FC20004 //                                  lw      $v0, 0x10+var_C($fp)
patch=0,EE,2035F0DC,extended,AC430000 //                                  sw      $v1, 0($v0)
patch=0,EE,2035F0E0,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035F0E4,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035F0E8,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035F0EC,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035F0F0,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035F0F4,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035F0F8,extended,00000000 //                                  nop
//                               # } // starts at 35F0A4
//                               # End of function operator>><ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl CRunningScript & operator<<<unsigned char>(CRunningScript &, unsigned char *)  # weak
//                              CRunningScript & operator<<<unsigned char>(CRunningScript &, unsigned char *):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035F0FC,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035F100,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035F104,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035F108,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035F10C,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035F110,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035F114,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035F118,extended,8FC30004 //                                  lw      $v1, 0x10+var_C($fp)
patch=0,EE,2035F11C,extended,AC43DFB0 //                                  sw      $v1, opcodeParams
patch=0,EE,2035F120,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035F124,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035F128,extended,0C07DF48 //                                  jal     SetScriptParams(CRunningScript *,int)
patch=0,EE,2035F12C,extended,00000000 //                                  nop
patch=0,EE,2035F130,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035F134,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035F138,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035F13C,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035F140,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035F144,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035F148,extended,00000000 //                                  nop
//                               # } // starts at 35F0FC
//                               # End of function operator<<<uchar>(CRunningScript &,uchar *)
//
//
//                               # =============== S U B R O U T I N E =======================================
//
//                               # Attributes: bp-based frame fpd=0x10
//
//                                              .globl CRunningScript & operator<<<SCRIPT_VAR>(CRunningScript &, SCRIPT_VAR *)  # weak
//                              CRunningScript & operator<<<SCRIPT_VAR>(CRunningScript &, SCRIPT_VAR *):
//
//                              var_10          = -0x10
//                              var_C           = -0xC
//                              var_s0          =  0
//                              var_s8          =  8
//
//                               # __unwind {
patch=0,EE,2035F14C,extended,27BDFFE0 //                                  addiu   $sp, -0x20
patch=0,EE,2035F150,extended,FFBF0018 //                                  sd      $ra, 0x10+var_s8($sp)
patch=0,EE,2035F154,extended,FFBE0010 //                                  sd      $fp, 0x10+var_s0($sp)
patch=0,EE,2035F158,extended,03A0F025 //                                  move    $fp, $sp
patch=0,EE,2035F15C,extended,AFC40000 //                                  sw      $a0, 0x10+var_10($fp)
patch=0,EE,2035F160,extended,AFC50004 //                                  sw      $a1, 0x10+var_C($fp)
patch=0,EE,2035F164,extended,3C020070 //                                  lui     $v0, 0x70  # 'p'
patch=0,EE,2035F168,extended,8FC30004 //                                  lw      $v1, 0x10+var_C($fp)
patch=0,EE,2035F16C,extended,AC43DFB0 //                                  sw      $v1, opcodeParams
patch=0,EE,2035F170,extended,24050001 //                                  li      $a1, 1
patch=0,EE,2035F174,extended,8FC40000 //                                  lw      $a0, 0x10+var_10($fp)
patch=0,EE,2035F178,extended,0C07DF48 //                                  jal     SetScriptParams(CRunningScript *,int)
patch=0,EE,2035F17C,extended,00000000 //                                  nop
patch=0,EE,2035F180,extended,8FC20000 //                                  lw      $v0, 0x10+var_10($fp)
patch=0,EE,2035F184,extended,03C0E825 //                                  move    $sp, $fp
patch=0,EE,2035F188,extended,DFBF0018 //                                  ld      $ra, 0x10+var_s8($sp)
patch=0,EE,2035F18C,extended,DFBE0010 //                                  ld      $fp, 0x10+var_s0($sp)
patch=0,EE,2035F190,extended,27BD0020 //                                  addiu   $sp, 0x20
patch=0,EE,2035F194,extended,03E00008 //                                  jr      $ra
patch=0,EE,2035F198,extended,00000000 //                                  nop
//                               # } // starts at 35F14C
//                               # End of function operator<<<SCRIPT_VAR>(CRunningScript &,SCRIPT_VAR *)
//
//                               # ---------------------------------------------------------------------------
patch=0,EE,2035F19C,extended,00000000 //                                  .align 4
patch=0,EE,2035F1A0,extended,00006425 //                  int_fmt:        .word 0x6425
patch=0,EE,2035F1A4,extended,00000000 //                                  .word 0
patch=0,EE,2035F1A8,extended,58383025 //                  ptrstr:         .word 0x58383025
patch=0,EE,2035F1AC,extended,00000000 //                                  .word 0
patch=0,EE,2035F1B0,extended,00006625 //                  fltstr:         .word 0x6625
patch=0,EE,2035F1B4,extended,00000000 //                                  .word 0
patch=0,EE,2035F1B8,extended,6C756E28 //                  none:           .word 0x6C756E28
patch=0,EE,2035F1BC,extended,0000296C //                                  .word 0x296C
patch=0,EE,2035F1C0,extended,0035DACC //                  jpt_35D900:     .word 0x35DACC           # jump table for switch statement
patch=0,EE,2035F1C4,extended,0035DA4C //                                  .word loc_35DA4C         # jumptable 0035D900 cases 1-5,7,8
patch=0,EE,2035F1C8,extended,0035DA4C //                                  .word 0x35DA4C
patch=0,EE,2035F1CC,extended,0035DA4C //                                  .word 0x35DA4C
patch=0,EE,2035F1D0,extended,0035DA4C //                                  .word 0x35DA4C
patch=0,EE,2035F1D4,extended,0035DA4C //                                  .word 0x35DA4C
patch=0,EE,2035F1D8,extended,0035D908 //                                  .word 0x35D908
patch=0,EE,2035F1DC,extended,0035DA4C //                                  .word 0x35DA4C
patch=0,EE,2035F1E0,extended,0035DA4C //                                  .word 0x35DA4C
patch=0,EE,2035F1E4,extended,0035DA8C //                                  .word 0x35DA8C
patch=0,EE,2035F1E8,extended,0035DA68 //                                  .word 0x35DA68
patch=0,EE,2035F1EC,extended,0035DA68 //                                  .word 0x35DA68
patch=0,EE,2035F1F0,extended,0035DACC //                                  .word 0x35DACC
patch=0,EE,2035F1F4,extended,0035DACC //                                  .word 0x35DACC
patch=0,EE,2035F1F8,extended,0035DA8C //                                  .word 0x35DA8C
patch=0,EE,2035F1FC,extended,0035DACC //                                  .word 0x35DACC
patch=0,EE,2035F200,extended,0035DA68 //                                  .word 0x35DA68
patch=0,EE,2035F204,extended,0035DA68 //                                  .word 0x35DA68
patch=0,EE,2035F208,extended,0035D94C //                  jpt_35D944:     .word 0x35D94C           # jump table for switch statement
patch=0,EE,2035F20C,extended,0035D95C //                                  .word 0x35D95C
patch=0,EE,2035F210,extended,0035D96C //                                  .word 0x35D96C
patch=0,EE,2035F214,extended,0035D97C //                                  .word 0x35D97C
patch=0,EE,2035F218,extended,0035D98C //                                  .word 0x35D98C
patch=0,EE,2035F21C,extended,0035D99C //                                  .word 0x35D99C
patch=0,EE,2035F220,extended,0035D9AC //                                  .word 0x35D9AC
patch=0,EE,2035F224,extended,0035D9BC //                                  .word 0x35D9BC
patch=0,EE,2035F228,extended,0035D9CC //                                  .word 0x35D9CC
patch=0,EE,2035F22C,extended,0035D9DC //                                  .word 0x35D9DC
patch=0,EE,2035F230,extended,0035D9EC //                                  .word 0x35D9EC
patch=0,EE,2035F234,extended,0035D9FC //                                  .word 0x35D9FC
patch=0,EE,2035F238,extended,0035DA0C //                                  .word 0x35DA0C
patch=0,EE,2035F23C,extended,0035DA1C //                                  .word 0x35DA1C
patch=0,EE,2035F240,extended,0035DA2C //                                  .word 0x35DA2C
patch=0,EE,2035F244,extended,0035DE9C //                  jpt_35DCD0:     .word 0x35DE9C           # jump table for switch statement
patch=0,EE,2035F248,extended,0035DE1C //                                  .word 0x35DE1C
patch=0,EE,2035F24C,extended,0035DE1C //                                  .word 0x35DE1C
patch=0,EE,2035F250,extended,0035DE1C //                                  .word 0x35DE1C
patch=0,EE,2035F254,extended,0035DE1C //                                  .word 0x35DE1C
patch=0,EE,2035F258,extended,0035DE1C //                                  .word 0x35DE1C
patch=0,EE,2035F25C,extended,0035DCD8 //                                  .word 0x35DCD8
patch=0,EE,2035F260,extended,0035DE1C //                                  .word 0x35DE1C
patch=0,EE,2035F264,extended,0035DE1C //                                  .word 0x35DE1C
patch=0,EE,2035F268,extended,0035DE5C //                                  .word 0x35DE5C
patch=0,EE,2035F26C,extended,0035DE38 //                                  .word 0x35DE38
patch=0,EE,2035F270,extended,0035DE38 //                                  .word 0x35DE38
patch=0,EE,2035F274,extended,0035DE9C //                                  .word 0x35DE9C
patch=0,EE,2035F278,extended,0035DE9C //                                  .word 0x35DE9C
patch=0,EE,2035F27C,extended,0035DE5C //                                  .word 0x35DE5C
patch=0,EE,2035F280,extended,0035DE9C //                                  .word 0x35DE9C
patch=0,EE,2035F284,extended,0035DE38 //                                  .word 0x35DE38
patch=0,EE,2035F288,extended,0035DE38 //                                  .word 0x35DE38
patch=0,EE,2035F28C,extended,0035DD1C //                  jpt_35DD14:     .word 0x35DD1C           # jump table for switch statement
patch=0,EE,2035F290,extended,0035DD2C //                                  .word 0x35DD2C
patch=0,EE,2035F294,extended,0035DD3C //                                  .word 0x35DD3C
patch=0,EE,2035F298,extended,0035DD4C //                                  .word 0x35DD4C
patch=0,EE,2035F29C,extended,0035DD5C //                                  .word 0x35DD5C
patch=0,EE,2035F2A0,extended,0035DD6C //                                  .word 0x35DD6C
patch=0,EE,2035F2A4,extended,0035DD7C //                                  .word 0x35DD7C
patch=0,EE,2035F2A8,extended,0035DD8C //                                  .word 0x35DD8C
patch=0,EE,2035F2AC,extended,0035DD9C //                                  .word 0x35DD9C
patch=0,EE,2035F2B0,extended,0035DDAC //                                  .word 0x35DDAC
patch=0,EE,2035F2B4,extended,0035DDBC //                                  .word 0x35DDBC
patch=0,EE,2035F2B8,extended,0035DDCC //                                  .word 0x35DDCC
patch=0,EE,2035F2BC,extended,0035DDDC //                                  .word 0x35DDDC
patch=0,EE,2035F2C0,extended,0035DDEC //                                  .word 0x35DDEC
patch=0,EE,2035F2C4,extended,0035DDFC //                                  .word 0x35DDFC
patch=0,EE,2035F2C8,extended,0035E264 //                  jpt_35E098:     .word 0x35E264           # jump table for switch statement
patch=0,EE,2035F2CC,extended,0035E1E4 //                                  .word 0x35E1E4
patch=0,EE,2035F2D0,extended,0035E1E4 //                                  .word 0x35E1E4
patch=0,EE,2035F2D4,extended,0035E1E4 //                                  .word 0x35E1E4
patch=0,EE,2035F2D8,extended,0035E1E4 //                                  .word 0x35E1E4
patch=0,EE,2035F2DC,extended,0035E1E4 //                                  .word 0x35E1E4
patch=0,EE,2035F2E0,extended,0035E0A0 //                                  .word 0x35E0A0
patch=0,EE,2035F2E4,extended,0035E1E4 //                                  .word 0x35E1E4
patch=0,EE,2035F2E8,extended,0035E1E4 //                                  .word 0x35E1E4
patch=0,EE,2035F2EC,extended,0035E224 //                                  .word 0x35E224
patch=0,EE,2035F2F0,extended,0035E200 //                                  .word 0x35E200
patch=0,EE,2035F2F4,extended,0035E200 //                                  .word 0x35E200
patch=0,EE,2035F2F8,extended,0035E264 //                                  .word 0x35E264
patch=0,EE,2035F2FC,extended,0035E264 //                                  .word 0x35E264
patch=0,EE,2035F300,extended,0035E224 //                                  .word 0x35E224
patch=0,EE,2035F304,extended,0035E264 //                                  .word 0x35E264
patch=0,EE,2035F308,extended,0035E200 //                                  .word 0x35E200
patch=0,EE,2035F30C,extended,0035E200 //                                  .word 0x35E200
patch=0,EE,2035F310,extended,0035E0E4 //                  jpt_35E0DC:     .word 0x35E0E4           # jump table for switch statement
patch=0,EE,2035F314,extended,0035E0F4 //                                  .word 0x35E0F4
patch=0,EE,2035F318,extended,0035E104 //                                  .word 0x35E104
patch=0,EE,2035F31C,extended,0035E114 //                                  .word 0x35E114
patch=0,EE,2035F320,extended,0035E124 //                                  .word 0x35E124
patch=0,EE,2035F324,extended,0035E134 //                                  .word 0x35E134
patch=0,EE,2035F328,extended,0035E144 //                                  .word 0x35E144
patch=0,EE,2035F32C,extended,0035E154 //                                  .word 0x35E154
patch=0,EE,2035F330,extended,0035E164 //                                  .word 0x35E164
patch=0,EE,2035F334,extended,0035E174 //                                  .word 0x35E174
patch=0,EE,2035F338,extended,0035E184 //                                  .word 0x35E184
patch=0,EE,2035F33C,extended,0035E194 //                                  .word 0x35E194
patch=0,EE,2035F340,extended,0035E1A4 //                                  .word 0x35E1A4
patch=0,EE,2035F344,extended,0035E1B4 //                                  .word 0x35E1B4
patch=0,EE,2035F348,extended,0035E1C4 //                                  .word 0x35E1C4
patch=0,EE,2035F34C,extended,0035E648 //                  jpt_35E47C:     .word 0x35E648           # jump table for switch statement
patch=0,EE,2035F350,extended,0035E5C8 //                                  .word 0x35E5C8
patch=0,EE,2035F354,extended,0035E5C8 //                                  .word 0x35E5C8
patch=0,EE,2035F358,extended,0035E5C8 //                                  .word 0x35E5C8
patch=0,EE,2035F35C,extended,0035E5C8 //                                  .word 0x35E5C8
patch=0,EE,2035F360,extended,0035E5C8 //                                  .word 0x35E5C8
patch=0,EE,2035F364,extended,0035E484 //                                  .word 0x35E484
patch=0,EE,2035F368,extended,0035E5C8 //                                  .word 0x35E5C8
patch=0,EE,2035F36C,extended,0035E5C8 //                                  .word 0x35E5C8
patch=0,EE,2035F370,extended,0035E608 //                                  .word 0x35E608
patch=0,EE,2035F374,extended,0035E5E4 //                                  .word 0x35E5E4
patch=0,EE,2035F378,extended,0035E5E4 //                                  .word 0x35E5E4
patch=0,EE,2035F37C,extended,0035E648 //                                  .word 0x35E648
patch=0,EE,2035F380,extended,0035E648 //                                  .word 0x35E648
patch=0,EE,2035F384,extended,0035E608 //                                  .word 0x35E608
patch=0,EE,2035F388,extended,0035E648 //                                  .word 0x35E648
patch=0,EE,2035F38C,extended,0035E5E4 //                                  .word 0x35E5E4
patch=0,EE,2035F390,extended,0035E5E4 //                                  .word 0x35E5E4
patch=0,EE,2035F394,extended,0035E4C8 //                  jpt_35E4C0:     .word 0x35E4C8           # jump table for switch statement
patch=0,EE,2035F398,extended,0035E4D8 //                                  .word 0x35E4D8
patch=0,EE,2035F39C,extended,0035E4E8 //                                  .word 0x35E4E8
patch=0,EE,2035F3A0,extended,0035E4F8 //                                  .word 0x35E4F8
patch=0,EE,2035F3A4,extended,0035E508 //                                  .word 0x35E508
patch=0,EE,2035F3A8,extended,0035E518 //                                  .word 0x35E518
patch=0,EE,2035F3AC,extended,0035E528 //                                  .word 0x35E528
patch=0,EE,2035F3B0,extended,0035E538 //                                  .word 0x35E538
patch=0,EE,2035F3B4,extended,0035E548 //                                  .word 0x35E548
patch=0,EE,2035F3B8,extended,0035E558 //                                  .word 0x35E558
patch=0,EE,2035F3BC,extended,0035E568 //                                  .word 0x35E568
patch=0,EE,2035F3C0,extended,0035E578 //                                  .word 0x35E578
patch=0,EE,2035F3C4,extended,0035E588 //                                  .word 0x35E588
patch=0,EE,2035F3C8,extended,0035E598 //                                  .word 0x35E598
patch=0,EE,2035F3CC,extended,0035E5A8 //                                  .word 0x35E5A8
//                                              .globl _fdata
patch=0,EE,2035F3D0,extended,0035D1F8 //                  _fdata:         .word 0x35D1F8           # Alternative name is '_fdata'
//                                                                       # customOpcodeHandlers
//                               # ---------------------------------------------------------------------------
patch=0,EE,2035F3D4,extended,0035D2CC //                                  syscall 0xD74B
patch=0,EE,2035F3D8,extended,0035D398 //                                  mult    $k0, $at, $s5
patch=0,EE,2035F3DC,extended,0035D408 //                                  jr.hb   $at
patch=0,EE,2035F3E0,extended,0035D478 //                                  dsll    $k0, $s5, 17
//                               # ---------------------------------------------------------------------------
patch=0,EE,2035F3E4,extended,0035D4E8 //                                  .word opcode_0A91(CRunningScript *)
patch=0,EE,2035F3E8,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F3EC,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F3F0,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F3F4,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F3F8,extended,0035D564 //                                  .word opcode_0A96(CRunningScript *)
patch=0,EE,2035F3FC,extended,0035D5DC //                                  .word opcode_0A97(CRunningScript *)
patch=0,EE,2035F400,extended,0035D654 //                                  .word opcode_0A98(CRunningScript *)
patch=0,EE,2035F404,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F408,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F40C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F410,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F414,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F418,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F41C,extended,0035D6CC //                                  .word opcode_0A9F(CRunningScript *)
patch=0,EE,2035F420,extended,0035D718 //                                  .word opcode_0AA0(CRunningScript *)
patch=0,EE,2035F424,extended,0035D7B4 //                                  .word opcode_0AA1(CRunningScript *)
patch=0,EE,2035F428,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F42C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F430,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F434,extended,0035D82C //                                  .word opcode_0AA5(CRunningScript *)
patch=0,EE,2035F438,extended,0035DBE8 //                                  .word opcode_0AA6(CRunningScript *)
patch=0,EE,2035F43C,extended,0035DFC4 //                                  .word opcode_0AA7(CRunningScript *)
patch=0,EE,2035F440,extended,0035E394 //                                  .word opcode_0AA8(CRunningScript *)
patch=0,EE,2035F444,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F448,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F44C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F450,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F454,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F458,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F45C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F460,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F464,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F468,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F46C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F470,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F474,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F478,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F47C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F480,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F484,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F488,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F48C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F490,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F494,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F498,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F49C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4A0,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4A4,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4A8,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4AC,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4B0,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4B4,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4B8,extended,0035E778 //                                  .word opcode_0AC6(CRunningScript *)
patch=0,EE,2035F4BC,extended,0035E814 //                                  .word opcode_0AC7(CRunningScript *)
patch=0,EE,2035F4C0,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4C4,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4C8,extended,0035E870 //                                  .word opcode_0ACA(CRunningScript *)
patch=0,EE,2035F4CC,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4D0,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4D4,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4D8,extended,0035E8CC //                                  .word opcode_0ACE(CRunningScript *)
patch=0,EE,2035F4DC,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4E0,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4E4,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4E8,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4EC,extended,0035E954 //                                  .word opcode_0AD3(CRunningScript *)
patch=0,EE,2035F4F0,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4F4,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4F8,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F4FC,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F500,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F504,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F508,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F50C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F510,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F514,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F518,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F51C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F520,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F524,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F528,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F52C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F530,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F534,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F538,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F53C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F540,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F544,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F548,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F54C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F550,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F554,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F558,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F55C,extended,0035D1D0 //                                  .word opcode_defa(CRunningScript *)
patch=0,EE,2035F560,extended,00000000 //                  readString(CRunningScript *, char *, unsigned char)::result:.word 0
patch=0,EE,2035F564,extended,00000000 //                                  .word 0
patch=0,EE,2035F568,extended,00000000 //                                  .word 0
patch=0,EE,2035F56C,extended,00000000 //                                  .word 0
patch=0,EE,2035F570,extended,00000000 //                                  .word 0
patch=0,EE,2035F574,extended,00000000 //                                  .word 0
patch=0,EE,2035F578,extended,00000000 //                                  .word 0
patch=0,EE,2035F57C,extended,00000000 //                                  .word 0
patch=0,EE,2035F580,extended,00000000 //                                  .word 0
patch=0,EE,2035F584,extended,00000000 //                                  .word 0
patch=0,EE,2035F588,extended,00000000 //                                  .word 0
patch=0,EE,2035F58C,extended,00000000 //                                  .word 0
patch=0,EE,2035F590,extended,00000000 //                                  .word 0
patch=0,EE,2035F594,extended,00000000 //                                  .word 0
patch=0,EE,2035F598,extended,00000000 //                                  .word 0
patch=0,EE,2035F59C,extended,00000000 //                                  .word 0
patch=0,EE,2035F5A0,extended,00000000 //                                  .word 0
patch=0,EE,2035F5A4,extended,00000000 //                                  .word 0
patch=0,EE,2035F5A8,extended,00000000 //                                  .word 0
patch=0,EE,2035F5AC,extended,00000000 //                                  .word 0
patch=0,EE,2035F5B0,extended,00000000 //                                  .word 0
patch=0,EE,2035F5B4,extended,00000000 //                                  .word 0
patch=0,EE,2035F5B8,extended,00000000 //                                  .word 0
patch=0,EE,2035F5BC,extended,00000000 //                                  .word 0
patch=0,EE,2035F5C0,extended,00000000 //                                  .word 0
patch=0,EE,2035F5C4,extended,00000000 //                                  .word 0
patch=0,EE,2035F5C8,extended,00000000 //                                  .word 0
patch=0,EE,2035F5CC,extended,00000000 //                                  .word 0
patch=0,EE,2035F5D0,extended,00000000 //                                  .word 0
patch=0,EE,2035F5D4,extended,00000000 //                                  .word 0
patch=0,EE,2035F5D8,extended,00000000 //                                  .word 0
patch=0,EE,2035F5DC,extended,00000000 //                                  .word 0
patch=0,EE,2035F5E0,extended,00000000 //                  textParams:     .word 0
patch=0,EE,2035F5E4,extended,00000000 //                                  .word 0
patch=0,EE,2035F5E8,extended,00000000 //                                  .word 0
patch=0,EE,2035F5EC,extended,00000000 //                                  .word 0
patch=0,EE,2035F5F0,extended,00000000 //                                  .word 0
patch=0,EE,2035F5F4,extended,00000000 //                                  .word 0
patch=0,EE,2035F5F8,extended,00000000 //                                  .word 0
patch=0,EE,2035F5FC,extended,00000000 //                                  .word 0
patch=0,EE,2035F600,extended,00000000 //                                  .word 0
patch=0,EE,2035F604,extended,00000000 //                                  .word 0
patch=0,EE,2035F608,extended,00000000 //                                  .word 0
patch=0,EE,2035F60C,extended,00000000 //                                  .word 0
patch=0,EE,2035F610,extended,00000000 //                                  .word 0
patch=0,EE,2035F614,extended,00000000 //                                  .word 0
patch=0,EE,2035F618,extended,00000000 //                                  .word 0
patch=0,EE,2035F61C,extended,00000000 //                                  .word 0
patch=0,EE,2035F620,extended,00000000 //                                  .word 0
patch=0,EE,2035F624,extended,00000000 //                                  .word 0
patch=0,EE,2035F628,extended,00000000 //                                  .word 0
patch=0,EE,2035F62C,extended,00000000 //                                  .word 0
patch=0,EE,2035F630,extended,00000000 //                                  .word 0
patch=0,EE,2035F634,extended,00000000 //                                  .word 0
patch=0,EE,2035F638,extended,00000000 //                                  .word 0
patch=0,EE,2035F63C,extended,00000000 //                                  .word 0
patch=0,EE,2035F640,extended,00000000 //                                  .word 0
patch=0,EE,2035F644,extended,00000000 //                                  .word 0
patch=0,EE,2035F648,extended,00000000 //                                  .word 0
patch=0,EE,2035F64C,extended,00000000 //                                  .word 0
patch=0,EE,2035F650,extended,00000000 //                                  .word 0
patch=0,EE,2035F654,extended,00000000 //                                  .word 0
patch=0,EE,2035F658,extended,00000000 //                                  .word 0
patch=0,EE,2035F65C,extended,00000000 //                                  .word 0
patch=0,EE,2035F660,extended,00000000 //                                  .word 0
patch=0,EE,2035F664,extended,00000000 //                                  .word 0
patch=0,EE,2035F668,extended,00000000 //                                  .word 0
patch=0,EE,2035F66C,extended,00000000 //                                  .word 0
patch=0,EE,2035F670,extended,00000000 //                                  .word 0
patch=0,EE,2035F674,extended,00000000 //                                  .word 0
patch=0,EE,2035F678,extended,00000000 //                                  .word 0
patch=0,EE,2035F67C,extended,00000000 //                                  .word 0
patch=0,EE,2035F680,extended,00000000 //                                  .word 0
patch=0,EE,2035F684,extended,00000000 //                                  .word 0
patch=0,EE,2035F688,extended,00000000 //                                  .word 0
patch=0,EE,2035F68C,extended,00000000 //                                  .word 0
patch=0,EE,2035F690,extended,00000000 //                                  .word 0
patch=0,EE,2035F694,extended,00000000 //                                  .word 0
patch=0,EE,2035F698,extended,00000000 //                                  .word 0
patch=0,EE,2035F69C,extended,00000000 //                                  .word 0
patch=0,EE,2035F6A0,extended,00000000 //                                  .word 0
patch=0,EE,2035F6A4,extended,00000000 //                                  .word 0
patch=0,EE,2035F6A8,extended,00000000 //                                  .word 0
patch=0,EE,2035F6AC,extended,00000000 //                                  .word 0
patch=0,EE,2035F6B0,extended,00000000 //                                  .word 0
patch=0,EE,2035F6B4,extended,00000000 //                                  .word 0
patch=0,EE,2035F6B8,extended,00000000 //                                  .word 0
patch=0,EE,2035F6BC,extended,00000000 //                                  .word 0
patch=0,EE,2035F6C0,extended,00000000 //                                  .word 0
patch=0,EE,2035F6C4,extended,00000000 //                                  .word 0
patch=0,EE,2035F6C8,extended,00000000 //                                  .word 0
patch=0,EE,2035F6CC,extended,00000000 //                                  .word 0
patch=0,EE,2035F6D0,extended,00000000 //                                  .word 0
patch=0,EE,2035F6D4,extended,00000000 //                                  .word 0
patch=0,EE,2035F6D8,extended,00000000 //                                  .word 0
patch=0,EE,2035F6DC,extended,00000000 //                                  .word 0
patch=0,EE,2035F6E0,extended,00000000 //                                  .word 0
patch=0,EE,2035F6E4,extended,00000000 //                                  .word 0
patch=0,EE,2035F6E8,extended,00000000 //                                  .word 0
patch=0,EE,2035F6EC,extended,00000000 //                                  .word 0
patch=0,EE,2035F6F0,extended,00000000 //                                  .word 0
patch=0,EE,2035F6F4,extended,00000000 //                                  .word 0
patch=0,EE,2035F6F8,extended,00000000 //                                  .word 0
patch=0,EE,2035F6FC,extended,00000000 //                                  .word 0
patch=0,EE,2035F700,extended,00000000 //                                  .word 0
patch=0,EE,2035F704,extended,00000000 //                                  .word 0
patch=0,EE,2035F708,extended,00000000 //                                  .word 0
patch=0,EE,2035F70C,extended,00000000 //                                  .word 0
patch=0,EE,2035F710,extended,00000000 //                                  .word 0
patch=0,EE,2035F714,extended,00000000 //                                  .word 0
patch=0,EE,2035F718,extended,00000000 //                                  .word 0
patch=0,EE,2035F71C,extended,00000000 //                                  .word 0
patch=0,EE,2035F720,extended,00000000 //                                  .word 0
patch=0,EE,2035F724,extended,00000000 //                                  .word 0
patch=0,EE,2035F728,extended,00000000 //                                  .word 0
patch=0,EE,2035F72C,extended,00000000 //                                  .word 0
patch=0,EE,2035F730,extended,00000000 //                                  .word 0
patch=0,EE,2035F734,extended,00000000 //                                  .word 0
patch=0,EE,2035F738,extended,00000000 //                                  .word 0
patch=0,EE,2035F73C,extended,00000000 //                                  .word 0
patch=0,EE,2035F740,extended,00000000 //                                  .word 0
patch=0,EE,2035F744,extended,00000000 //                                  .word 0
patch=0,EE,2035F748,extended,00000000 //                                  .word 0
patch=0,EE,2035F74C,extended,00000000 //                                  .word 0
patch=0,EE,2035F750,extended,00000000 //                                  .word 0
patch=0,EE,2035F754,extended,00000000 //                                  .word 0
patch=0,EE,2035F758,extended,00000000 //                                  .word 0
patch=0,EE,2035F75C,extended,00000000 //                                  .word 0
patch=0,EE,2035F760,extended,00000000 //                                  .word 0
patch=0,EE,2035F764,extended,00000000 //                                  .word 0
patch=0,EE,2035F768,extended,00000000 //                                  .word 0
patch=0,EE,2035F76C,extended,00000000 //                                  .word 0
patch=0,EE,2035F770,extended,00000000 //                                  .word 0
patch=0,EE,2035F774,extended,00000000 //                                  .word 0
patch=0,EE,2035F778,extended,00000000 //                                  .word 0
patch=0,EE,2035F77C,extended,00000000 //                                  .word 0
patch=0,EE,2035F780,extended,00000000 //                                  .word 0
patch=0,EE,2035F784,extended,00000000 //                                  .word 0
patch=0,EE,2035F788,extended,00000000 //                                  .word 0
patch=0,EE,2035F78C,extended,00000000 //                                  .word 0
patch=0,EE,2035F790,extended,00000000 //                                  .word 0
patch=0,EE,2035F794,extended,00000000 //                                  .word 0
patch=0,EE,2035F798,extended,00000000 //                                  .word 0
patch=0,EE,2035F79C,extended,00000000 //                                  .word 0
patch=0,EE,2035F7A0,extended,00000000 //                                  .word 0
patch=0,EE,2035F7A4,extended,00000000 //                                  .word 0
patch=0,EE,2035F7A8,extended,00000000 //                                  .word 0
patch=0,EE,2035F7AC,extended,00000000 //                                  .word 0
patch=0,EE,2035F7B0,extended,00000000 //                                  .word 0
patch=0,EE,2035F7B4,extended,00000000 //                                  .word 0
patch=0,EE,2035F7B8,extended,00000000 //                                  .word 0
patch=0,EE,2035F7BC,extended,00000000 //                                  .word 0
patch=0,EE,2035F7C0,extended,00000000 //                                  .word 0
patch=0,EE,2035F7C4,extended,00000000 //                                  .word 0
patch=0,EE,2035F7C8,extended,00000000 //                                  .word 0
patch=0,EE,2035F7CC,extended,00000000 //                                  .word 0
patch=0,EE,2035F7D0,extended,00000000 //                                  .word 0
patch=0,EE,2035F7D4,extended,00000000 //                                  .word 0
patch=0,EE,2035F7D8,extended,00000000 //                                  .word 0
patch=0,EE,2035F7DC,extended,00000000 //                                  .word 0
patch=0,EE,2035F7E0,extended,00000000 //                                  .word 0
patch=0,EE,2035F7E4,extended,00000000 //                                  .word 0
patch=0,EE,2035F7E8,extended,00000000 //                                  .word 0
patch=0,EE,2035F7EC,extended,00000000 //                                  .word 0
patch=0,EE,2035F7F0,extended,00000000 //                                  .word 0
patch=0,EE,2035F7F4,extended,00000000 //                                  .word 0
patch=0,EE,2035F7F8,extended,00000000 //                                  .word 0
patch=0,EE,2035F7FC,extended,00000000 //                                  .word 0
patch=0,EE,2035F800,extended,00000000 //                                  .word 0
patch=0,EE,2035F804,extended,00000000 //                                  .word 0
patch=0,EE,2035F808,extended,00000000 //                                  .word 0
patch=0,EE,2035F80C,extended,00000000 //                                  .word 0
patch=0,EE,2035F810,extended,00000000 //                                  .word 0
patch=0,EE,2035F814,extended,00000000 //                                  .word 0
patch=0,EE,2035F818,extended,00000000 //                                  .word 0
patch=0,EE,2035F81C,extended,00000000 //                                  .word 0
patch=0,EE,2035F820,extended,00000000 //                                  .word 0
patch=0,EE,2035F824,extended,00000000 //                                  .word 0
patch=0,EE,2035F828,extended,00000000 //                                  .word 0
patch=0,EE,2035F82C,extended,00000000 //                                  .word 0
patch=0,EE,2035F830,extended,00000000 //                                  .word 0
patch=0,EE,2035F834,extended,00000000 //                                  .word 0
patch=0,EE,2035F838,extended,00000000 //                                  .word 0
patch=0,EE,2035F83C,extended,00000000 //                                  .word 0
patch=0,EE,2035F840,extended,00000000 //                                  .word 0
patch=0,EE,2035F844,extended,00000000 //                                  .word 0
patch=0,EE,2035F848,extended,00000000 //                                  .word 0
patch=0,EE,2035F84C,extended,00000000 //                                  .word 0
patch=0,EE,2035F850,extended,00000000 //                                  .word 0
patch=0,EE,2035F854,extended,00000000 //                                  .word 0
patch=0,EE,2035F858,extended,00000000 //                                  .word 0
patch=0,EE,2035F85C,extended,00000000 //                                  .word 0
patch=0,EE,2035F860,extended,00000000 //                  arguments:      .word 0
patch=0,EE,2035F864,extended,00000000 //                  dword_35F864:   .word 0
patch=0,EE,2035F868,extended,00000000 //                  dword_35F868:   .word 0
patch=0,EE,2035F86C,extended,00000000 //                  dword_35F86C:   .word 0
patch=0,EE,2035F870,extended,00000000 //                  dword_35F870:   .word 0
patch=0,EE,2035F874,extended,00000000 //                  dword_35F874:   .word 0
patch=0,EE,2035F878,extended,00000000 //                  dword_35F878:   .word 0
patch=0,EE,2035F87C,extended,00000000 //                  dword_35F87C:   .word 0
patch=0,EE,2035F880,extended,00000000 //                  dword_35F880:   .word 0
patch=0,EE,2035F884,extended,00000000 //                  dword_35F884:   .word 0
patch=0,EE,2035F888,extended,00000000 //                  dword_35F888:   .word 0
patch=0,EE,2035F88C,extended,00000000 //                  dword_35F88C:   .word 0
patch=0,EE,2035F890,extended,00000000 //                  dword_35F890:   .word 0
patch=0,EE,2035F894,extended,00000000 //                  dword_35F894:   .word 0
patch=0,EE,2035F898,extended,00000000 //                  dword_35F898:   .word 0
patch=0,EE,2035F89C,extended,00000000 //                                  .word 0
patch=0,EE,2035F8A0,extended,000000000