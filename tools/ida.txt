.text:0035C7E8                                # ===========================================================================
.text:0035C7E8
.text:0035C7E8                                # Segment type: Pure code
.text:0035C7E8                                               .text
.text:0035C7E8
.text:0035C7E8                                # =============== S U B R O U T I N E =======================================
.text:0035C7E8
.text:0035C7E8
.text:0035C7E8                                # _DWORD LoadUSBIOPModules(void)
.text:0035C7E8                                               .globl LoadUSBIOPModules(void)
.text:0035C7E8                               LoadUSBIOPModules(void):
.text:0035C7E8
.text:0035C7E8                               var_s0          =  0
.text:0035C7E8
.text:0035C7E8 F0 FE BD 27                                   addiu   $sp, -0x110
.text:0035C7EC 08 01 BF FF                                   sd      $ra, 0x108+var_s0($sp)
.text:0035C7F0 36 00 02 3C A0 01 42 8C                       lw      $v0, loadIOPModules2
.text:0035C7F8 09 F8 40 00                                   jalr    $v0
.text:0035C7FC 00 00 00 00                                   nop
.text:0035C800 36 00 02 3C 80 01 42 8C                       lw      $v0, strcpy
.text:0035C808 36 00 03 3C 04 02 63 8C                       lw      $v1, cdrom0
.text:0035C810 25 28 60 00                                   move    $a1, $v1
.text:0035C814 25 20 A0 03                                   move    $a0, $sp
.text:0035C818 09 F8 40 00                                   jalr    $v0
.text:0035C81C 00 00 00 00                                   nop
.text:0035C820 36 00 02 3C 84 01 42 8C                       lw      $v0, strcat
.text:0035C828 36 00 03 3C 08 02 63 8C                       lw      $v1, system_folder
.text:0035C830 25 28 60 00                                   move    $a1, $v1
.text:0035C834 25 20 A0 03                                   move    $a0, $sp
.text:0035C838 09 F8 40 00                                   jalr    $v0
.text:0035C83C 00 00 00 00                                   nop
.text:0035C840 36 00 02 3C 84 01 42 8C                       lw      $v0, strcat
.text:0035C848 36 00 03 3C AC 02 63 8C                       lw      $v1, usbd
.text:0035C850 25 28 60 00                                   move    $a1, $v1
.text:0035C854 25 20 A0 03                                   move    $a0, $sp
.text:0035C858 09 F8 40 00                                   jalr    $v0
.text:0035C85C 00 00 00 00                                   nop
.text:0035C860 36 00 02 3C 60 01 42 8C                       lw      $v0, printf
.text:0035C868 36 00 03 3C 10 02 63 8C                       lw      $v1, Loading_s
.text:0035C870 25 28 A0 03                                   move    $a1, $sp
.text:0035C874 25 20 60 00                                   move    $a0, $v1
.text:0035C878 09 F8 40 00                                   jalr    $v0
.text:0035C87C 00 00 00 00                                   nop
.text:0035C880 0A 00 00 10                                   b       loc_35C8AC
.text:0035C884 00 00 00 00                                   nop
.text:0035C888                                # ---------------------------------------------------------------------------
.text:0035C888
.text:0035C888                               loc_35C888:
.text:0035C888 36 00 02 3C 60 01 42 8C                       lw      $v0, printf
.text:0035C890 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035C894 0C 02 64 8C                                   lw      $a0, CanTLoadModule
.text:0035C898 36 00 03 3C AC 02 63 8C                       lw      $v1, usbd
.text:0035C8A0 25 28 60 00                                   move    $a1, $v1
.text:0035C8A4 09 F8 40 00                                   jalr    $v0
.text:0035C8A8 00 00 00 00                                   nop
.text:0035C8AC
.text:0035C8AC                               loc_35C8AC:
.text:0035C8AC 36 00 02 3C 9C 01 42 8C                       lw      $v0, sceSifLoadModule
.text:0035C8B4 25 30 00 00                                   move    $a2, $zero
.text:0035C8B8 25 28 00 00                                   move    $a1, $zero
.text:0035C8BC 25 20 A0 03                                   move    $a0, $sp
.text:0035C8C0 09 F8 40 00                                   jalr    $v0
.text:0035C8C4 00 00 00 00                                   nop
.text:0035C8C8 C2 17 02 00                                   srl     $v0, 31
.text:0035C8CC FF 00 42 30                                   andi    $v0, 0xFF
.text:0035C8D0 ED FF 40 14                                   bnez    $v0, loc_35C888
.text:0035C8D4 00 00 00 00                                   nop
.text:0035C8D8 36 00 02 3C 80 01 42 8C                       lw      $v0, strcpy
.text:0035C8E0 36 00 03 3C 04 02 63 8C                       lw      $v1, cdrom0
.text:0035C8E8 25 28 60 00                                   move    $a1, $v1
.text:0035C8EC 25 20 A0 03                                   move    $a0, $sp
.text:0035C8F0 09 F8 40 00                                   jalr    $v0
.text:0035C8F4 00 00 00 00                                   nop
.text:0035C8F8 36 00 02 3C 84 01 42 8C                       lw      $v0, strcat
.text:0035C900 36 00 03 3C 08 02 63 8C                       lw      $v1, system_folder
.text:0035C908 25 28 60 00                                   move    $a1, $v1
.text:0035C90C 25 20 A0 03                                   move    $a0, $sp
.text:0035C910 09 F8 40 00                                   jalr    $v0
.text:0035C914 00 00 00 00                                   nop
.text:0035C918 36 00 02 3C 84 01 42 8C                       lw      $v0, strcat
.text:0035C920 36 00 03 3C B0 02 63 8C                       lw      $v1, usbhdfsd
.text:0035C928 25 28 60 00                                   move    $a1, $v1
.text:0035C92C 25 20 A0 03                                   move    $a0, $sp
.text:0035C930 09 F8 40 00                                   jalr    $v0
.text:0035C934 00 00 00 00                                   nop
.text:0035C938 36 00 02 3C 60 01 42 8C                       lw      $v0, printf
.text:0035C940 36 00 03 3C 10 02 63 8C                       lw      $v1, Loading_s
.text:0035C948 25 28 A0 03                                   move    $a1, $sp
.text:0035C94C 25 20 60 00                                   move    $a0, $v1
.text:0035C950 09 F8 40 00                                   jalr    $v0
.text:0035C954 00 00 00 00                                   nop
.text:0035C958 0A 00 00 10                                   b       loc_35C984
.text:0035C95C 00 00 00 00                                   nop
.text:0035C960                                # ---------------------------------------------------------------------------
.text:0035C960
.text:0035C960                               loc_35C960:
.text:0035C960 36 00 02 3C 60 01 42 8C                       lw      $v0, printf
.text:0035C968 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035C96C 0C 02 64 8C                                   lw      $a0, CanTLoadModule
.text:0035C970 36 00 03 3C B0 02 63 8C                       lw      $v1, usbhdfsd
.text:0035C978 25 28 60 00                                   move    $a1, $v1
.text:0035C97C 09 F8 40 00                                   jalr    $v0
.text:0035C980 00 00 00 00                                   nop
.text:0035C984
.text:0035C984                               loc_35C984:
.text:0035C984 36 00 02 3C 9C 01 42 8C                       lw      $v0, sceSifLoadModule
.text:0035C98C 25 30 00 00                                   move    $a2, $zero
.text:0035C990 25 28 00 00                                   move    $a1, $zero
.text:0035C994 25 20 A0 03                                   move    $a0, $sp
.text:0035C998 09 F8 40 00                                   jalr    $v0
.text:0035C99C 00 00 00 00                                   nop
.text:0035C9A0 C2 17 02 00                                   srl     $v0, 31
.text:0035C9A4 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035C9A8 ED FF 40 14                                   bnez    $v0, loc_35C960
.text:0035C9AC 00 00 00 00                                   nop
.text:0035C9B0 00 00 00 00                                   nop
.text:0035C9B4 00 00 00 00                                   nop
.text:0035C9B8 08 01 BF DF                                   ld      $ra, 0x108+var_s0($sp)
.text:0035C9BC 10 01 BD 27                                   addiu   $sp, 0x110
.text:0035C9C0 08 00 E0 03                                   jr      $ra
.text:0035C9C4 00 00 00 00                                   nop
.text:0035C9C4                                # End of function LoadUSBIOPModules(void)
.text:0035C9C4
.text:0035C9C8
.text:0035C9C8                                # =============== S U B R O U T I N E =======================================
.text:0035C9C8
.text:0035C9C8
.text:0035C9C8                                # _DWORD __fastcall readString(CRunningScript *, char *, unsigned __int8)
.text:0035C9C8                                               .globl readString(CRunningScript *, char *, unsigned char)
.text:0035C9C8                               readString(CRunningScript *, char *, unsigned char):
.text:0035C9C8
.text:0035C9C8                               var_28          = -0x28
.text:0035C9C8                               var_18          = -0x18
.text:0035C9C8                               var_14          = -0x14
.text:0035C9C8                               var_10          = -0x10
.text:0035C9C8                               var_s0          =  0
.text:0035C9C8
.text:0035C9C8 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035C9CC 28 00 BF FF                                   sd      $ra, 0x28+var_s0($sp)
.text:0035C9D0 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035C9D4 14 00 A5 AF                                   sw      $a1, 0x28+var_14($sp)
.text:0035C9D8 25 10 C0 00                                   move    $v0, $a2
.text:0035C9DC 18 00 A2 A3                                   sb      $v0, 0x28+var_10($sp)
.text:0035C9E0 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)  # this
.text:0035C9E4 E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035C9E8 00 00 00 00                                   nop
.text:0035C9EC 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035C9F0 00 00 A2 A3                                   sb      $v0, 0x28+var_28($sp)
.text:0035C9F4 00 00 A2 93                                   lbu     $v0, 0x28+var_28($sp)
.text:0035C9F8 04 00 40 14                                   bnez    $v0, loc_35CA0C
.text:0035C9FC 00 00 00 00                                   nop
.text:0035CA00 25 10 00 00                                   move    $v0, $zero
.text:0035CA04 67 00 00 10                                   b       loc_35CBA4
.text:0035CA08 00 00 00 00                                   nop
.text:0035CA0C                                # ---------------------------------------------------------------------------
.text:0035CA0C
.text:0035CA0C                               loc_35CA0C:
.text:0035CA0C 00 00 A2 93                                   lbu     $v0, 0x28+var_28($sp)
.text:0035CA10 30 00 40 10                                   beqz    $v0, loc_35CAD4
.text:0035CA14 00 00 00 00                                   nop
.text:0035CA18 00 00 A2 93                                   lbu     $v0, 0x28+var_28($sp)
.text:0035CA1C 09 00 42 2C                                   sltiu   $v0, 9
.text:0035CA20 2C 00 40 10                                   beqz    $v0, loc_35CAD4
.text:0035CA24 00 00 00 00                                   nop
.text:0035CA28 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035CA30 01 00 05 24                                   li      $a1, 1
.text:0035CA34 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035CA38 09 F8 40 00                                   jalr    $v0
.text:0035CA3C 00 00 00 00                                   nop
.text:0035CA40 14 00 A2 8F                                   lw      $v0, 0x28+var_14($sp)
.text:0035CA44 1E 00 40 10                                   beqz    $v0, loc_35CAC0
.text:0035CA48 00 00 00 00                                   nop
.text:0035CA4C 18 00 A2 93                                   lbu     $v0, 0x28+var_10($sp)
.text:0035CA50 81 00 42 2C                                   sltiu   $v0, 0x81
.text:0035CA54 07 00 40 10                                   beqz    $v0, loc_35CA74
.text:0035CA58 00 00 00 00                                   nop
.text:0035CA5C 18 00 A2 93                                   lbu     $v0, 0x28+var_10($sp)
.text:0035CA60 04 00 40 10                                   beqz    $v0, loc_35CA74
.text:0035CA64 00 00 00 00                                   nop
.text:0035CA68 18 00 A2 93                                   lbu     $v0, 0x28+var_10($sp)
.text:0035CA6C 02 00 00 10                                   b       loc_35CA78
.text:0035CA70 00 00 00 00                                   nop
.text:0035CA74                                # ---------------------------------------------------------------------------
.text:0035CA74
.text:0035CA74                               loc_35CA74:
.text:0035CA74 80 00 02 24                                   li      $v0, 0x80
.text:0035CA78
.text:0035CA78                               loc_35CA78:
.text:0035CA78 18 00 A2 A3                                   sb      $v0, 0x28+var_10($sp)
.text:0035CA7C 36 00 02 3C 88 01 42 8C                       lw      $v0, strncpy
.text:0035CA84 36 00 03 3C 98 02 63 8C                       lw      $v1, opcodeParams
.text:0035CA8C 00 00 64 8C                                   lw      $a0, 0($v1)
.text:0035CA90 18 00 A3 93                                   lbu     $v1, 0x28+var_10($sp)
.text:0035CA94 FF FF 63 24                                   addiu   $v1, -1
.text:0035CA98 25 30 60 00                                   move    $a2, $v1
.text:0035CA9C 25 28 80 00                                   move    $a1, $a0
.text:0035CAA0 14 00 A4 8F                                   lw      $a0, 0x28+var_14($sp)
.text:0035CAA4 09 F8 40 00                                   jalr    $v0
.text:0035CAA8 00 00 00 00                                   nop
.text:0035CAAC 18 00 A2 93                                   lbu     $v0, 0x28+var_10($sp)
.text:0035CAB0 FF FF 42 24                                   addiu   $v0, -1
.text:0035CAB4 14 00 A3 8F                                   lw      $v1, 0x28+var_14($sp)
.text:0035CAB8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035CABC 00 00 40 A0                                   sb      $zero, 0($v0)
.text:0035CAC0
.text:0035CAC0                               loc_35CAC0:
.text:0035CAC0 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035CAC8 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035CACC 35 00 00 10                                   b       loc_35CBA4
.text:0035CAD0 00 00 00 00                                   nop
.text:0035CAD4                                # ---------------------------------------------------------------------------
.text:0035CAD4
.text:0035CAD4                               loc_35CAD4:
.text:0035CAD4 14 00 A2 8F                                   lw      $v0, 0x28+var_14($sp)
.text:0035CAD8 15 00 40 14                                   bnez    $v0, loc_35CB30
.text:0035CADC 00 00 00 00                                   nop
.text:0035CAE0 36 00 02 3C 6C 01 42 8C                       lw      $v0, memset
.text:0035CAE8 80 00 06 24                                   li      $a2, 0x80
.text:0035CAEC 25 28 00 00                                   move    $a1, $zero
.text:0035CAF0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035CAF4 48 04 64 24                                   addiu   $a0, $v1, (readString(CRunningScript *,char *,uchar)::result - 0x360000)
.text:0035CAF8 09 F8 40 00                                   jalr    $v0
.text:0035CAFC 00 00 00 00                                   nop
.text:0035CB00 36 00 02 3C A4 02 42 8C                       lw      $v0, GetScriptStringParam
.text:0035CB08 80 00 06 24                                   li      $a2, 0x80
.text:0035CB0C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035CB10 48 04 65 24                                   addiu   $a1, $v1, (readString(CRunningScript *,char *,uchar)::result - 0x360000)
.text:0035CB14 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035CB18 09 F8 40 00                                   jalr    $v0
.text:0035CB1C 00 00 00 00                                   nop
.text:0035CB20 36 00 02 3C 48 04 42 24                       li      $v0, readString(CRunningScript *,char *,uchar)::result
.text:0035CB28 1E 00 00 10                                   b       loc_35CBA4
.text:0035CB2C 00 00 00 00                                   nop
.text:0035CB30                                # ---------------------------------------------------------------------------
.text:0035CB30
.text:0035CB30                               loc_35CB30:
.text:0035CB30 18 00 A2 93                                   lbu     $v0, 0x28+var_10($sp)
.text:0035CB34 81 00 42 2C                                   sltiu   $v0, 0x81
.text:0035CB38 07 00 40 10                                   beqz    $v0, loc_35CB58
.text:0035CB3C 00 00 00 00                                   nop
.text:0035CB40 18 00 A2 93                                   lbu     $v0, 0x28+var_10($sp)
.text:0035CB44 04 00 40 10                                   beqz    $v0, loc_35CB58
.text:0035CB48 00 00 00 00                                   nop
.text:0035CB4C 18 00 A2 93                                   lbu     $v0, 0x28+var_10($sp)
.text:0035CB50 02 00 00 10                                   b       loc_35CB5C
.text:0035CB54 00 00 00 00                                   nop
.text:0035CB58                                # ---------------------------------------------------------------------------
.text:0035CB58
.text:0035CB58                               loc_35CB58:
.text:0035CB58 80 00 02 24                                   li      $v0, 0x80
.text:0035CB5C
.text:0035CB5C                               loc_35CB5C:
.text:0035CB5C 18 00 A2 A3                                   sb      $v0, 0x28+var_10($sp)
.text:0035CB60 36 00 02 3C 6C 01 42 8C                       lw      $v0, memset
.text:0035CB68 18 00 A3 93                                   lbu     $v1, 0x28+var_10($sp)
.text:0035CB6C 25 30 60 00                                   move    $a2, $v1
.text:0035CB70 25 28 00 00                                   move    $a1, $zero
.text:0035CB74 14 00 A4 8F                                   lw      $a0, 0x28+var_14($sp)
.text:0035CB78 09 F8 40 00                                   jalr    $v0
.text:0035CB7C 00 00 00 00                                   nop
.text:0035CB80 36 00 02 3C A4 02 42 8C                       lw      $v0, GetScriptStringParam
.text:0035CB88 18 00 A3 93                                   lbu     $v1, 0x28+var_10($sp)
.text:0035CB8C 25 30 60 00                                   move    $a2, $v1
.text:0035CB90 14 00 A5 8F                                   lw      $a1, 0x28+var_14($sp)
.text:0035CB94 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035CB98 09 F8 40 00                                   jalr    $v0
.text:0035CB9C 00 00 00 00                                   nop
.text:0035CBA0 14 00 A2 8F                                   lw      $v0, 0x28+var_14($sp)
.text:0035CBA4
.text:0035CBA4                               loc_35CBA4:
.text:0035CBA4 28 00 BF DF                                   ld      $ra, 0x28+var_s0($sp)
.text:0035CBA8 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035CBAC 08 00 E0 03                                   jr      $ra
.text:0035CBB0 00 00 00 00                                   nop
.text:0035CBB0                                # End of function readString(CRunningScript *,char *,uchar)
.text:0035CBB0
.text:0035CBB4
.text:0035CBB4                                # =============== S U B R O U T I N E =======================================
.text:0035CBB4
.text:0035CBB4
.text:0035CBB4                                # _DWORD __fastcall format(CRunningScript *, char *, unsigned int, const char *)
.text:0035CBB4                                               .globl format(CRunningScript *, char *, unsigned int, char const*)
.text:0035CBB4                               format(CRunningScript *, char *, unsigned int, char const*):
.text:0035CBB4
.text:0035CBB4                               var_170         = -0x170
.text:0035CBB4                               var_16C         = -0x16C
.text:0035CBB4                               var_168         = -0x168
.text:0035CBB4                               var_164         = -0x164
.text:0035CBB4                               var_160         = -0x160
.text:0035CBB4                               var_15C         = -0x15C
.text:0035CBB4                               var_158         = -0x158
.text:0035CBB4                               var_154         = -0x154
.text:0035CBB4                               var_150         = -0x150
.text:0035CBB4                               var_50          = -0x50
.text:0035CBB4                               var_10          = -0x10
.text:0035CBB4                               var_C           = -0xC
.text:0035CBB4                               var_8           = -8
.text:0035CBB4                               var_4           = -4
.text:0035CBB4                               var_s0          =  0
.text:0035CBB4                               var_s8          =  8
.text:0035CBB4
.text:0035CBB4 80 FE BD 27                                   addiu   $sp, -0x180
.text:0035CBB8 78 01 BF FF                                   sd      $ra, 0x170+var_s8($sp)
.text:0035CBBC 70 01 B0 FF                                   sd      $s0, 0x170+var_s0($sp)
.text:0035CBC0 60 01 A4 AF                                   sw      $a0, 0x170+var_10($sp)
.text:0035CBC4 64 01 A5 AF                                   sw      $a1, 0x170+var_C($sp)
.text:0035CBC8 68 01 A6 AF                                   sw      $a2, 0x170+var_8($sp)
.text:0035CBCC 6C 01 A7 AF                                   sw      $a3, 0x170+var_4($sp)
.text:0035CBD0 00 00 A0 AF                                   sw      $zero, 0x170+var_170($sp)
.text:0035CBD4 6C 01 A2 8F                                   lw      $v0, 0x170+var_4($sp)
.text:0035CBD8 04 00 A2 AF                                   sw      $v0, 0x170+var_16C($sp)
.text:0035CBDC ED 01 00 10                                   b       loc_35D394
.text:0035CBE0 00 00 00 00                                   nop
.text:0035CBE4                                # ---------------------------------------------------------------------------
.text:0035CBE4
.text:0035CBE4                               loc_35CBE4:
.text:0035CBE4 00 00 A2 8F                                   lw      $v0, 0x170+var_170($sp)
.text:0035CBE8 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CBEC 00 00 A3 AF                                   sw      $v1, 0x170+var_170($sp)
.text:0035CBF0 68 01 A3 8F                                   lw      $v1, 0x170+var_8($sp)
.text:0035CBF4 2B 10 43 00                                   sltu    $v0, $v1
.text:0035CBF8 01 00 42 38                                   xori    $v0, 1
.text:0035CBFC FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CC00 04 00 40 10                                   beqz    $v0, loc_35CC14
.text:0035CC04 00 00 00 00                                   nop
.text:0035CC08 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035CC0C F2 01 00 10                                   b       loc_35D3D8
.text:0035CC10 00 00 00 00                                   nop
.text:0035CC14                                # ---------------------------------------------------------------------------
.text:0035CC14
.text:0035CC14                               loc_35CC14:
.text:0035CC14 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CC18 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CC1C 04 00 A3 AF                                   sw      $v1, 0x170+var_16C($sp)
.text:0035CC20 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC24 64 01 A2 8F                                   lw      $v0, 0x170+var_C($sp)
.text:0035CC28 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CC2C 64 01 A4 AF                                   sw      $a0, 0x170+var_C($sp)
.text:0035CC30 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CC34
.text:0035CC34                               loc_35CC34:
.text:0035CC34 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CC38 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CC3C 06 00 40 10                                   beqz    $v0, loc_35CC58
.text:0035CC40 00 00 00 00                                   nop
.text:0035CC44 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CC48 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC4C 25 00 02 24                                   li      $v0, 0x25  # '%'
.text:0035CC50 E4 FF 62 14                                   bne     $v1, $v0, loc_35CBE4
.text:0035CC54 00 00 00 00                                   nop
.text:0035CC58
.text:0035CC58                               loc_35CC58:
.text:0035CC58 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CC5C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC60 25 00 02 24                                   li      $v0, 0x25  # '%'
.text:0035CC64 CB 01 62 14                                   bne     $v1, $v0, loc_35D394
.text:0035CC68 00 00 00 00                                   nop
.text:0035CC6C 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CC70 01 00 42 24                                   addiu   $v0, 1
.text:0035CC74 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC78 25 00 02 24                                   li      $v0, 0x25  # '%'
.text:0035CC7C 17 00 62 14                                   bne     $v1, $v0, loc_35CCDC
.text:0035CC80 00 00 00 00                                   nop
.text:0035CC84 00 00 A2 8F                                   lw      $v0, 0x170+var_170($sp)
.text:0035CC88 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CC8C 00 00 A3 AF                                   sw      $v1, 0x170+var_170($sp)
.text:0035CC90 68 01 A3 8F                                   lw      $v1, 0x170+var_8($sp)
.text:0035CC94 2B 10 43 00                                   sltu    $v0, $v1
.text:0035CC98 01 00 42 38                                   xori    $v0, 1
.text:0035CC9C FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CCA0 04 00 40 10                                   beqz    $v0, loc_35CCB4
.text:0035CCA4 00 00 00 00                                   nop
.text:0035CCA8 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035CCAC CA 01 00 10                                   b       loc_35D3D8
.text:0035CCB0 00 00 00 00                                   nop
.text:0035CCB4                                # ---------------------------------------------------------------------------
.text:0035CCB4
.text:0035CCB4                               loc_35CCB4:
.text:0035CCB4 64 01 A2 8F                                   lw      $v0, 0x170+var_C($sp)
.text:0035CCB8 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CCBC 64 01 A3 AF                                   sw      $v1, 0x170+var_C($sp)
.text:0035CCC0 25 00 03 24                                   li      $v1, 0x25  # '%'
.text:0035CCC4 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CCC8 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CCCC 02 00 42 24                                   addiu   $v0, 2
.text:0035CCD0 04 00 A2 AF                                   sw      $v0, 0x170+var_16C($sp)
.text:0035CCD4 AF 01 00 10                                   b       loc_35D394
.text:0035CCD8 00 00 00 00                                   nop
.text:0035CCDC                                # ---------------------------------------------------------------------------
.text:0035CCDC
.text:0035CCDC                               loc_35CCDC:
.text:0035CCDC 20 01 A2 27                                   addiu   $v0, $sp, 0x170+var_50
.text:0035CCE0 08 00 A2 AF                                   sw      $v0, 0x170+var_168($sp)
.text:0035CCE4 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CCE8 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CCEC 04 00 A3 AF                                   sw      $v1, 0x170+var_16C($sp)
.text:0035CCF0 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CCF4 08 00 A2 8F                                   lw      $v0, 0x170+var_168($sp)
.text:0035CCF8 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CCFC 08 00 A4 AF                                   sw      $a0, 0x170+var_168($sp)
.text:0035CD00 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CD04 32 00 00 10                                   b       loc_35CDD0
.text:0035CD08 00 00 00 00                                   nop
.text:0035CD0C                                # ---------------------------------------------------------------------------
.text:0035CD0C
.text:0035CD0C                               loc_35CD0C:
.text:0035CD0C 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CD10 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CD14 2A 00 02 24                                   li      $v0, 0x2A  # '*'
.text:0035CD18 24 00 62 14                                   bne     $v1, $v0, loc_35CDAC
.text:0035CD1C 00 00 00 00                                   nop
.text:0035CD20 20 00 A2 27                                   addiu   $v0, $sp, 0x170+var_150
.text:0035CD24 0C 00 A2 AF                                   sw      $v0, 0x170+var_164($sp)
.text:0035CD28 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035CD30 01 00 05 24                                   li      $a1, 1
.text:0035CD34 60 01 A4 8F                                   lw      $a0, 0x170+var_10($sp)
.text:0035CD38 09 F8 40 00                                   jalr    $v0
.text:0035CD3C 00 00 00 00                                   nop
.text:0035CD40 36 00 02 3C 8C 01 42 8C                       lw      $v0, sprintf
.text:0035CD48 36 00 03 3C 98 02 63 8C                       lw      $v1, opcodeParams
.text:0035CD50 00 00 63 8C                                   lw      $v1, 0($v1)
.text:0035CD54 25 30 60 00                                   move    $a2, $v1
.text:0035CD58 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035CD5C 18 FF 65 24                                   addiu   $a1, $v1, (int_fmt - 0x360000)
.text:0035CD60 0C 00 A4 8F                                   lw      $a0, 0x170+var_164($sp)
.text:0035CD64 09 F8 40 00                                   jalr    $v0
.text:0035CD68 00 00 00 00                                   nop
.text:0035CD6C 09 00 00 10                                   b       loc_35CD94
.text:0035CD70 00 00 00 00                                   nop
.text:0035CD74                                # ---------------------------------------------------------------------------
.text:0035CD74
.text:0035CD74                               loc_35CD74:
.text:0035CD74 0C 00 A2 8F                                   lw      $v0, 0x170+var_164($sp)
.text:0035CD78 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CD7C 0C 00 A3 AF                                   sw      $v1, 0x170+var_164($sp)
.text:0035CD80 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CD84 08 00 A2 8F                                   lw      $v0, 0x170+var_168($sp)
.text:0035CD88 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CD8C 08 00 A4 AF                                   sw      $a0, 0x170+var_168($sp)
.text:0035CD90 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CD94
.text:0035CD94                               loc_35CD94:
.text:0035CD94 0C 00 A2 8F                                   lw      $v0, 0x170+var_164($sp)
.text:0035CD98 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CD9C F5 FF 40 14                                   bnez    $v0, loc_35CD74
.text:0035CDA0 00 00 00 00                                   nop
.text:0035CDA4 07 00 00 10                                   b       loc_35CDC4
.text:0035CDA8 00 00 00 00                                   nop
.text:0035CDAC                                # ---------------------------------------------------------------------------
.text:0035CDAC
.text:0035CDAC                               loc_35CDAC:
.text:0035CDAC 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CDB0 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CDB4 08 00 A2 8F                                   lw      $v0, 0x170+var_168($sp)
.text:0035CDB8 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CDBC 08 00 A4 AF                                   sw      $a0, 0x170+var_168($sp)
.text:0035CDC0 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CDC4
.text:0035CDC4                               loc_35CDC4:
.text:0035CDC4 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CDC8 01 00 42 24                                   addiu   $v0, 1
.text:0035CDCC 04 00 A2 AF                                   sw      $v0, 0x170+var_16C($sp)
.text:0035CDD0
.text:0035CDD0                               loc_35CDD0:
.text:0035CDD0 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CDD4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CDD8 30 00 02 24                                   li      $v0, 0x30  # '0'
.text:0035CDDC CB FF 62 10                                   beq     $v1, $v0, loc_35CD0C
.text:0035CDE0 00 00 00 00                                   nop
.text:0035CDE4 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CDE8 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CDEC 2B 00 02 24                                   li      $v0, 0x2B  # '+'
.text:0035CDF0 C6 FF 62 10                                   beq     $v1, $v0, loc_35CD0C
.text:0035CDF4 00 00 00 00                                   nop
.text:0035CDF8 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CDFC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CE00 2D 00 02 24                                   li      $v0, 0x2D  # '-'
.text:0035CE04 C1 FF 62 10                                   beq     $v1, $v0, loc_35CD0C
.text:0035CE08 00 00 00 00                                   nop
.text:0035CE0C 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CE10 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CE14 20 00 02 24                                   li      $v0, 0x20  # ' '
.text:0035CE18 BC FF 62 10                                   beq     $v1, $v0, loc_35CD0C
.text:0035CE1C 00 00 00 00                                   nop
.text:0035CE20 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CE24 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CE28 2A 00 02 24                                   li      $v0, 0x2A  # '*'
.text:0035CE2C B7 FF 62 10                                   beq     $v1, $v0, loc_35CD0C
.text:0035CE30 00 00 00 00                                   nop
.text:0035CE34 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CE38 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CE3C 23 00 02 24                                   li      $v0, 0x23  # '#'
.text:0035CE40 B2 FF 62 10                                   beq     $v1, $v0, loc_35CD0C
.text:0035CE44 00 00 00 00                                   nop
.text:0035CE48 09 00 00 10                                   b       loc_35CE70
.text:0035CE4C 00 00 00 00                                   nop
.text:0035CE50                                # ---------------------------------------------------------------------------
.text:0035CE50
.text:0035CE50                               loc_35CE50:
.text:0035CE50 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CE54 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CE58 04 00 A3 AF                                   sw      $v1, 0x170+var_16C($sp)
.text:0035CE5C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CE60 08 00 A2 8F                                   lw      $v0, 0x170+var_168($sp)
.text:0035CE64 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CE68 08 00 A4 AF                                   sw      $a0, 0x170+var_168($sp)
.text:0035CE6C 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CE70
.text:0035CE70                               loc_35CE70:
.text:0035CE70 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CE74 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CE78 D0 FF 42 24                                   addiu   $v0, -0x30
.text:0035CE7C 0A 00 42 2C                                   sltiu   $v0, 0xA
.text:0035CE80 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CE84 F2 FF 40 14                                   bnez    $v0, loc_35CE50
.text:0035CE88 00 00 00 00                                   nop
.text:0035CE8C 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CE90 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CE94 2E 00 02 24                                   li      $v0, 0x2E  # '.'
.text:0035CE98 40 00 62 14                                   bne     $v1, $v0, loc_35CF9C
.text:0035CE9C 00 00 00 00                                   nop
.text:0035CEA0 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CEA4 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CEA8 04 00 A3 AF                                   sw      $v1, 0x170+var_16C($sp)
.text:0035CEAC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CEB0 08 00 A2 8F                                   lw      $v0, 0x170+var_168($sp)
.text:0035CEB4 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CEB8 08 00 A4 AF                                   sw      $a0, 0x170+var_168($sp)
.text:0035CEBC 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CEC0 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CEC4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CEC8 2A 00 02 24                                   li      $v0, 0x2A  # '*'
.text:0035CECC 2C 00 62 14                                   bne     $v1, $v0, loc_35CF80
.text:0035CED0 00 00 00 00                                   nop
.text:0035CED4 20 00 A2 27                                   addiu   $v0, $sp, 0x170+var_150
.text:0035CED8 10 00 A2 AF                                   sw      $v0, 0x170+var_160($sp)
.text:0035CEDC 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035CEE4 01 00 05 24                                   li      $a1, 1
.text:0035CEE8 60 01 A4 8F                                   lw      $a0, 0x170+var_10($sp)
.text:0035CEEC 09 F8 40 00                                   jalr    $v0
.text:0035CEF0 00 00 00 00                                   nop
.text:0035CEF4 36 00 02 3C 8C 01 42 8C                       lw      $v0, sprintf
.text:0035CEFC 36 00 03 3C 98 02 63 8C                       lw      $v1, opcodeParams
.text:0035CF04 00 00 63 8C                                   lw      $v1, 0($v1)
.text:0035CF08 25 30 60 00                                   move    $a2, $v1
.text:0035CF0C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035CF10 18 FF 65 24                                   addiu   $a1, $v1, (int_fmt - 0x360000)
.text:0035CF14 10 00 A4 8F                                   lw      $a0, 0x170+var_160($sp)
.text:0035CF18 09 F8 40 00                                   jalr    $v0
.text:0035CF1C 00 00 00 00                                   nop
.text:0035CF20 09 00 00 10                                   b       loc_35CF48
.text:0035CF24 00 00 00 00                                   nop
.text:0035CF28                                # ---------------------------------------------------------------------------
.text:0035CF28
.text:0035CF28                               loc_35CF28:
.text:0035CF28 10 00 A2 8F                                   lw      $v0, 0x170+var_160($sp)
.text:0035CF2C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CF30 10 00 A3 AF                                   sw      $v1, 0x170+var_160($sp)
.text:0035CF34 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CF38 08 00 A2 8F                                   lw      $v0, 0x170+var_168($sp)
.text:0035CF3C 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CF40 08 00 A4 AF                                   sw      $a0, 0x170+var_168($sp)
.text:0035CF44 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CF48
.text:0035CF48                               loc_35CF48:
.text:0035CF48 10 00 A2 8F                                   lw      $v0, 0x170+var_160($sp)
.text:0035CF4C 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CF50 F5 FF 40 14                                   bnez    $v0, loc_35CF28
.text:0035CF54 00 00 00 00                                   nop
.text:0035CF58 10 00 00 10                                   b       loc_35CF9C
.text:0035CF5C 00 00 00 00                                   nop
.text:0035CF60                                # ---------------------------------------------------------------------------
.text:0035CF60
.text:0035CF60                               loc_35CF60:
.text:0035CF60 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CF64 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CF68 04 00 A3 AF                                   sw      $v1, 0x170+var_16C($sp)
.text:0035CF6C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CF70 08 00 A2 8F                                   lw      $v0, 0x170+var_168($sp)
.text:0035CF74 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CF78 08 00 A4 AF                                   sw      $a0, 0x170+var_168($sp)
.text:0035CF7C 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CF80
.text:0035CF80                               loc_35CF80:
.text:0035CF80 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CF84 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CF88 D0 FF 42 24                                   addiu   $v0, -0x30
.text:0035CF8C 0A 00 42 2C                                   sltiu   $v0, 0xA
.text:0035CF90 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CF94 F2 FF 40 14                                   bnez    $v0, loc_35CF60
.text:0035CF98 00 00 00 00                                   nop
.text:0035CF9C
.text:0035CF9C                               loc_35CF9C:
.text:0035CF9C 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CFA0 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFA4 68 00 02 24                                   li      $v0, 0x68  # 'h'
.text:0035CFA8 06 00 62 10                                   beq     $v1, $v0, loc_35CFC4
.text:0035CFAC 00 00 00 00                                   nop
.text:0035CFB0 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CFB4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFB8 6C 00 02 24                                   li      $v0, 0x6C  # 'l'
.text:0035CFBC 09 00 62 14                                   bne     $v1, $v0, loc_35CFE4
.text:0035CFC0 00 00 00 00                                   nop
.text:0035CFC4
.text:0035CFC4                               loc_35CFC4:
.text:0035CFC4 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CFC8 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CFCC 04 00 A3 AF                                   sw      $v1, 0x170+var_16C($sp)
.text:0035CFD0 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFD4 08 00 A2 8F                                   lw      $v0, 0x170+var_168($sp)
.text:0035CFD8 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CFDC 08 00 A4 AF                                   sw      $a0, 0x170+var_168($sp)
.text:0035CFE0 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CFE4
.text:0035CFE4                               loc_35CFE4:
.text:0035CFE4 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035CFE8 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CFEC 63 00 03 24                                   li      $v1, 0x63  # 'c'
.text:0035CFF0 32 00 43 10                                   beq     $v0, $v1, loc_35D0BC
.text:0035CFF4 00 00 00 00                                   nop
.text:0035CFF8 73 00 03 24                                   li      $v1, 0x73  # 's'
.text:0035CFFC 4F 00 43 14                                   bne     $v0, $v1, loc_35D13C
.text:0035D000 00 00 00 00                                   nop
.text:0035D004 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035D008 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035D00C 60 01 A4 8F                                   lw      $a0, 0x170+var_10($sp)  # CRunningScript *
.text:0035D010 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035D014 00 00 00 00                                   nop
.text:0035D018 1C 00 A2 AF                                   sw      $v0, 0x170+var_154($sp)
.text:0035D01C 1C 00 A2 8F                                   lw      $v0, 0x170+var_154($sp)
.text:0035D020 04 00 40 10                                   beqz    $v0, loc_35D034
.text:0035D024 00 00 00 00                                   nop
.text:0035D028 1C 00 A2 8F                                   lw      $v0, 0x170+var_154($sp)
.text:0035D02C 03 00 00 10                                   b       loc_35D03C
.text:0035D030 00 00 00 00                                   nop
.text:0035D034                                # ---------------------------------------------------------------------------
.text:0035D034
.text:0035D034                               loc_35D034:
.text:0035D034 36 00 02 3C 30 FF 42 24                       li      $v0, none
.text:0035D03C
.text:0035D03C                               loc_35D03C:
.text:0035D03C 14 00 A2 AF                                   sw      $v0, 0x170+var_15C($sp)
.text:0035D040 15 00 00 10                                   b       loc_35D098
.text:0035D044 00 00 00 00                                   nop
.text:0035D048                                # ---------------------------------------------------------------------------
.text:0035D048
.text:0035D048                               loc_35D048:
.text:0035D048 00 00 A2 8F                                   lw      $v0, 0x170+var_170($sp)
.text:0035D04C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D050 00 00 A3 AF                                   sw      $v1, 0x170+var_170($sp)
.text:0035D054 68 01 A3 8F                                   lw      $v1, 0x170+var_8($sp)
.text:0035D058 2B 10 43 00                                   sltu    $v0, $v1
.text:0035D05C 01 00 42 38                                   xori    $v0, 1
.text:0035D060 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035D064 04 00 40 10                                   beqz    $v0, loc_35D078
.text:0035D068 00 00 00 00                                   nop
.text:0035D06C FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035D070 D9 00 00 10                                   b       loc_35D3D8
.text:0035D074 00 00 00 00                                   nop
.text:0035D078                                # ---------------------------------------------------------------------------
.text:0035D078
.text:0035D078                               loc_35D078:
.text:0035D078 14 00 A2 8F                                   lw      $v0, 0x170+var_15C($sp)
.text:0035D07C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D080 14 00 A3 AF                                   sw      $v1, 0x170+var_15C($sp)
.text:0035D084 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D088 64 01 A2 8F                                   lw      $v0, 0x170+var_C($sp)
.text:0035D08C 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035D090 64 01 A4 AF                                   sw      $a0, 0x170+var_C($sp)
.text:0035D094 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035D098
.text:0035D098                               loc_35D098:
.text:0035D098 14 00 A2 8F                                   lw      $v0, 0x170+var_15C($sp)
.text:0035D09C 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035D0A0 E9 FF 40 14                                   bnez    $v0, loc_35D048
.text:0035D0A4 00 00 00 00                                   nop
.text:0035D0A8 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D0AC 01 00 42 24                                   addiu   $v0, 1
.text:0035D0B0 04 00 A2 AF                                   sw      $v0, 0x170+var_16C($sp)
.text:0035D0B4 B7 00 00 10                                   b       loc_35D394
.text:0035D0B8 00 00 00 00                                   nop
.text:0035D0BC                                # ---------------------------------------------------------------------------
.text:0035D0BC
.text:0035D0BC                               loc_35D0BC:
.text:0035D0BC 00 00 A2 8F                                   lw      $v0, 0x170+var_170($sp)
.text:0035D0C0 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D0C4 00 00 A3 AF                                   sw      $v1, 0x170+var_170($sp)
.text:0035D0C8 68 01 A3 8F                                   lw      $v1, 0x170+var_8($sp)
.text:0035D0CC 2B 10 43 00                                   sltu    $v0, $v1
.text:0035D0D0 01 00 42 38                                   xori    $v0, 1
.text:0035D0D4 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035D0D8 04 00 40 10                                   beqz    $v0, loc_35D0EC
.text:0035D0DC 00 00 00 00                                   nop
.text:0035D0E0 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035D0E4 BC 00 00 10                                   b       loc_35D3D8
.text:0035D0E8 00 00 00 00                                   nop
.text:0035D0EC                                # ---------------------------------------------------------------------------
.text:0035D0EC
.text:0035D0EC                               loc_35D0EC:
.text:0035D0EC 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035D0F4 01 00 05 24                                   li      $a1, 1
.text:0035D0F8 60 01 A4 8F                                   lw      $a0, 0x170+var_10($sp)
.text:0035D0FC 09 F8 40 00                                   jalr    $v0
.text:0035D100 00 00 00 00                                   nop
.text:0035D104 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D10C 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035D110 00 1E 02 00                                   sll     $v1, $v0, 24
.text:0035D114 03 1E 03 00                                   sra     $v1, 24
.text:0035D118 64 01 A2 8F                                   lw      $v0, 0x170+var_C($sp)
.text:0035D11C 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035D120 64 01 A4 AF                                   sw      $a0, 0x170+var_C($sp)
.text:0035D124 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035D128 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D12C 01 00 42 24                                   addiu   $v0, 1
.text:0035D130 04 00 A2 AF                                   sw      $v0, 0x170+var_16C($sp)
.text:0035D134 97 00 00 10                                   b       loc_35D394
.text:0035D138 00 00 00 00                                   nop
.text:0035D13C                                # ---------------------------------------------------------------------------
.text:0035D13C
.text:0035D13C                               loc_35D13C:
.text:0035D13C 20 00 A2 27                                   addiu   $v0, $sp, 0x170+var_150
.text:0035D140 18 00 A2 AF                                   sw      $v0, 0x170+var_158($sp)
.text:0035D144 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D148 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D14C 70 00 02 24                                   li      $v0, 0x70  # 'p'
.text:0035D150 06 00 62 10                                   beq     $v1, $v0, loc_35D16C
.text:0035D154 00 00 00 00                                   nop
.text:0035D158 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D15C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D160 50 00 02 24                                   li      $v0, 0x50  # 'P'
.text:0035D164 14 00 62 14                                   bne     $v1, $v0, loc_35D1B8
.text:0035D168 00 00 00 00                                   nop
.text:0035D16C
.text:0035D16C                               loc_35D16C:
.text:0035D16C 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035D174 01 00 05 24                                   li      $a1, 1
.text:0035D178 60 01 A4 8F                                   lw      $a0, 0x170+var_10($sp)
.text:0035D17C 09 F8 40 00                                   jalr    $v0
.text:0035D180 00 00 00 00                                   nop
.text:0035D184 36 00 02 3C 8C 01 42 8C                       lw      $v0, sprintf
.text:0035D18C 36 00 03 3C 98 02 63 8C                       lw      $v1, opcodeParams
.text:0035D194 00 00 63 8C                                   lw      $v1, 0($v1)
.text:0035D198 25 30 60 00                                   move    $a2, $v1
.text:0035D19C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035D1A0 20 FF 65 24                                   addiu   $a1, $v1, (ptrstr - 0x360000)
.text:0035D1A4 18 00 A4 8F                                   lw      $a0, 0x170+var_158($sp)
.text:0035D1A8 09 F8 40 00                                   jalr    $v0
.text:0035D1AC 00 00 00 00                                   nop
.text:0035D1B0 5A 00 00 10                                   b       loc_35D31C
.text:0035D1B4 00 00 00 00                                   nop
.text:0035D1B8                                # ---------------------------------------------------------------------------
.text:0035D1B8
.text:0035D1B8                               loc_35D1B8:
.text:0035D1B8 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D1BC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D1C0 08 00 A2 8F                                   lw      $v0, 0x170+var_168($sp)
.text:0035D1C4 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035D1C8 08 00 A4 AF                                   sw      $a0, 0x170+var_168($sp)
.text:0035D1CC 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035D1D0 08 00 A2 8F                                   lw      $v0, 0x170+var_168($sp)
.text:0035D1D4 00 00 40 A0                                   sb      $zero, 0($v0)
.text:0035D1D8 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D1DC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D1E0 61 00 02 24                                   li      $v0, 0x61  # 'a'
.text:0035D1E4 24 00 62 10                                   beq     $v1, $v0, loc_35D278
.text:0035D1E8 00 00 00 00                                   nop
.text:0035D1EC 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D1F0 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D1F4 41 00 02 24                                   li      $v0, 0x41  # 'A'
.text:0035D1F8 1F 00 62 10                                   beq     $v1, $v0, loc_35D278
.text:0035D1FC 00 00 00 00                                   nop
.text:0035D200 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D204 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D208 65 00 02 24                                   li      $v0, 0x65  # 'e'
.text:0035D20C 1A 00 62 10                                   beq     $v1, $v0, loc_35D278
.text:0035D210 00 00 00 00                                   nop
.text:0035D214 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D218 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D21C 45 00 02 24                                   li      $v0, 0x45  # 'E'
.text:0035D220 15 00 62 10                                   beq     $v1, $v0, loc_35D278
.text:0035D224 00 00 00 00                                   nop
.text:0035D228 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D22C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D230 66 00 02 24                                   li      $v0, 0x66  # 'f'
.text:0035D234 10 00 62 10                                   beq     $v1, $v0, loc_35D278
.text:0035D238 00 00 00 00                                   nop
.text:0035D23C 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D240 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D244 46 00 02 24                                   li      $v0, 0x46  # 'F'
.text:0035D248 0B 00 62 10                                   beq     $v1, $v0, loc_35D278
.text:0035D24C 00 00 00 00                                   nop
.text:0035D250 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D254 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D258 67 00 02 24                                   li      $v0, 0x67  # 'g'
.text:0035D25C 06 00 62 10                                   beq     $v1, $v0, loc_35D278
.text:0035D260 00 00 00 00                                   nop
.text:0035D264 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D268 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D26C 47 00 02 24                                   li      $v0, 0x47  # 'G'
.text:0035D270 19 00 62 14                                   bne     $v1, $v0, loc_35D2D8
.text:0035D274 00 00 00 00                                   nop
.text:0035D278
.text:0035D278                               loc_35D278:
.text:0035D278 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035D280 01 00 05 24                                   li      $a1, 1
.text:0035D284 60 01 A4 8F                                   lw      $a0, 0x170+var_10($sp)
.text:0035D288 09 F8 40 00                                   jalr    $v0
.text:0035D28C 00 00 00 00                                   nop
.text:0035D290 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035D294 8C 01 50 8C                                   lw      $s0, sprintf
.text:0035D298 36 00 02 3C 98 01 42 8C                       lw      $v0, __extendsfdf2
.text:0035D2A0 36 00 03 3C 98 02 63 8C                       lw      $v1, opcodeParams
.text:0035D2A8 00 00 60 C4                                   lwc1    $f0, 0($v1)
.text:0035D2AC 06 03 00 46                                   mov.s   $f12, $f0
.text:0035D2B0 09 F8 40 00                                   jalr    $v0
.text:0035D2B4 00 00 00 00                                   nop
.text:0035D2B8 25 30 40 00                                   move    $a2, $v0
.text:0035D2BC 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035D2C0 28 FF 45 24                                   addiu   $a1, $v0, (fltstr - 0x360000)
.text:0035D2C4 18 00 A4 8F                                   lw      $a0, 0x170+var_158($sp)
.text:0035D2C8 09 F8 00 02                                   jalr    $s0
.text:0035D2CC 00 00 00 00                                   nop
.text:0035D2D0 12 00 00 10                                   b       loc_35D31C
.text:0035D2D4 00 00 00 00                                   nop
.text:0035D2D8                                # ---------------------------------------------------------------------------
.text:0035D2D8
.text:0035D2D8                               loc_35D2D8:
.text:0035D2D8 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035D2E0 01 00 05 24                                   li      $a1, 1
.text:0035D2E4 60 01 A4 8F                                   lw      $a0, 0x170+var_10($sp)
.text:0035D2E8 09 F8 40 00                                   jalr    $v0
.text:0035D2EC 00 00 00 00                                   nop
.text:0035D2F0 36 00 02 3C 8C 01 42 8C                       lw      $v0, sprintf
.text:0035D2F8 36 00 03 3C 98 02 63 8C                       lw      $v1, opcodeParams
.text:0035D300 00 00 63 8C                                   lw      $v1, 0($v1)
.text:0035D304 20 01 A4 27                                   addiu   $a0, $sp, 0x170+var_50
.text:0035D308 25 30 60 00                                   move    $a2, $v1
.text:0035D30C 25 28 80 00                                   move    $a1, $a0
.text:0035D310 18 00 A4 8F                                   lw      $a0, 0x170+var_158($sp)
.text:0035D314 09 F8 40 00                                   jalr    $v0
.text:0035D318 00 00 00 00                                   nop
.text:0035D31C
.text:0035D31C                               loc_35D31C:
.text:0035D31C 15 00 00 10                                   b       loc_35D374
.text:0035D320 00 00 00 00                                   nop
.text:0035D324                                # ---------------------------------------------------------------------------
.text:0035D324
.text:0035D324                               loc_35D324:
.text:0035D324 00 00 A2 8F                                   lw      $v0, 0x170+var_170($sp)
.text:0035D328 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D32C 00 00 A3 AF                                   sw      $v1, 0x170+var_170($sp)
.text:0035D330 68 01 A3 8F                                   lw      $v1, 0x170+var_8($sp)
.text:0035D334 2B 10 43 00                                   sltu    $v0, $v1
.text:0035D338 01 00 42 38                                   xori    $v0, 1
.text:0035D33C FF 00 42 30                                   andi    $v0, 0xFF
.text:0035D340 04 00 40 10                                   beqz    $v0, loc_35D354
.text:0035D344 00 00 00 00                                   nop
.text:0035D348 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035D34C 22 00 00 10                                   b       loc_35D3D8
.text:0035D350 00 00 00 00                                   nop
.text:0035D354                                # ---------------------------------------------------------------------------
.text:0035D354
.text:0035D354                               loc_35D354:
.text:0035D354 18 00 A2 8F                                   lw      $v0, 0x170+var_158($sp)
.text:0035D358 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D35C 18 00 A3 AF                                   sw      $v1, 0x170+var_158($sp)
.text:0035D360 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D364 64 01 A2 8F                                   lw      $v0, 0x170+var_C($sp)
.text:0035D368 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035D36C 64 01 A4 AF                                   sw      $a0, 0x170+var_C($sp)
.text:0035D370 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035D374
.text:0035D374                               loc_35D374:
.text:0035D374 18 00 A2 8F                                   lw      $v0, 0x170+var_158($sp)
.text:0035D378 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035D37C E9 FF 40 14                                   bnez    $v0, loc_35D324
.text:0035D380 00 00 00 00                                   nop
.text:0035D384 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D388 01 00 42 24                                   addiu   $v0, 1
.text:0035D38C 04 00 A2 AF                                   sw      $v0, 0x170+var_16C($sp)
.text:0035D390 00 00 00 00                                   nop
.text:0035D394
.text:0035D394                               loc_35D394:
.text:0035D394 04 00 A2 8F                                   lw      $v0, 0x170+var_16C($sp)
.text:0035D398 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035D39C 25 FE 40 14                                   bnez    $v0, loc_35CC34
.text:0035D3A0 00 00 00 00                                   nop
.text:0035D3A4 00 00 A3 8F                                   lw      $v1, 0x170+var_170($sp)
.text:0035D3A8 68 01 A2 8F                                   lw      $v0, 0x170+var_8($sp)
.text:0035D3AC 2B 10 62 00                                   sltu    $v0, $v1, $v0
.text:0035D3B0 04 00 40 14                                   bnez    $v0, loc_35D3C4
.text:0035D3B4 00 00 00 00                                   nop
.text:0035D3B8 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035D3BC 06 00 00 10                                   b       loc_35D3D8
.text:0035D3C0 00 00 00 00                                   nop
.text:0035D3C4                                # ---------------------------------------------------------------------------
.text:0035D3C4
.text:0035D3C4                               loc_35D3C4:
.text:0035D3C4 64 01 A2 8F                                   lw      $v0, 0x170+var_C($sp)
.text:0035D3C8 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D3CC 64 01 A3 AF                                   sw      $v1, 0x170+var_C($sp)
.text:0035D3D0 00 00 40 A0                                   sb      $zero, 0($v0)
.text:0035D3D4 00 00 A2 8F                                   lw      $v0, 0x170+var_170($sp)
.text:0035D3D8
.text:0035D3D8                               loc_35D3D8:
.text:0035D3D8 78 01 BF DF                                   ld      $ra, 0x170+var_s8($sp)
.text:0035D3DC 70 01 B0 DF                                   ld      $s0, 0x170+var_s0($sp)
.text:0035D3E0 80 01 BD 27                                   addiu   $sp, 0x180
.text:0035D3E4 08 00 E0 03                                   jr      $ra
.text:0035D3E8 00 00 00 00                                   nop
.text:0035D3E8                                # End of function format(CRunningScript *,char *,uint,char const*)
.text:0035D3E8
.text:0035D3EC
.text:0035D3EC                                # =============== S U B R O U T I N E =======================================
.text:0035D3EC
.text:0035D3EC
.text:0035D3EC                                               .globl customOpcodeHandler(CRunningScript *, unsigned short)
.text:0035D3EC                               customOpcodeHandler(CRunningScript *, unsigned short):
.text:0035D3EC
.text:0035D3EC                               var_18          = -0x18
.text:0035D3EC                               var_14          = -0x14
.text:0035D3EC                               var_s0          =  0
.text:0035D3EC
.text:0035D3EC E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D3F0 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035D3F4 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035D3F8 25 10 A0 00                                   move    $v0, $a1
.text:0035D3FC 04 00 A2 A7                                   sh      $v0, 0x18+var_14($sp)
.text:0035D400 04 00 A2 97                                   lhu     $v0, 0x18+var_14($sp)
.text:0035D404 74 F5 43 24                                   addiu   $v1, $v0, -0xA8C
.text:0035D408 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035D40C 80 18 03 00                                   sll     $v1, 2
.text:0035D410 B8 02 42 24                                   li      $v0, customOpcodeHandlers
.text:0035D414 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035D418 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035D41C 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035D420 09 F8 40 00                                   jalr    $v0
.text:0035D424 00 00 00 00                                   nop
.text:0035D428 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035D42C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D430 08 00 E0 03                                   jr      $ra
.text:0035D434 00 00 00 00                                   nop
.text:0035D434                                # End of function customOpcodeHandler(CRunningScript *,ushort)
.text:0035D434
.text:0035D438
.text:0035D438                                # =============== S U B R O U T I N E =======================================
.text:0035D438
.text:0035D438
.text:0035D438                                               .globl opcode_defa(CRunningScript *)
.text:0035D438                               opcode_defa(CRunningScript *):
.text:0035D438
.text:0035D438                               var_10          = -0x10
.text:0035D438
.text:0035D438 F0 FF BD 27                                   addiu   $sp, -0x10
.text:0035D43C 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035D440 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035D444 10 00 BD 27                                   addiu   $sp, 0x10
.text:0035D448 08 00 E0 03                                   jr      $ra
.text:0035D44C 00 00 00 00                                   nop
.text:0035D44C                                # End of function opcode_defa(CRunningScript *)
.text:0035D44C
.text:0035D450
.text:0035D450                                # =============== S U B R O U T I N E =======================================
.text:0035D450
.text:0035D450
.text:0035D450                                               .globl opcode_0A8C(CRunningScript *)
.text:0035D450                               opcode_0A8C(CRunningScript *):
.text:0035D450
.text:0035D450                               var_28          = -0x28
.text:0035D450                               var_24          = -0x24
.text:0035D450                               var_18          = -0x18
.text:0035D450                               var_s0          =  0
.text:0035D450
.text:0035D450 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D454 28 00 BF FF                                   sd      $ra, 0x28+var_s0($sp)
.text:0035D458 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035D45C 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035D464 03 00 05 24                                   li      $a1, 3
.text:0035D468 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035D46C 09 F8 40 00                                   jalr    $v0
.text:0035D470 00 00 00 00                                   nop
.text:0035D474 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D47C 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035D480 00 00 A2 AF                                   sw      $v0, 0x28+var_28($sp)
.text:0035D484 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D48C 04 00 42 24                                   addiu   $v0, 4
.text:0035D490 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035D494 04 00 A2 AF                                   sw      $v0, 0x28+var_24($sp)
.text:0035D498 04 00 A3 8F                                   lw      $v1, 0x28+var_24($sp)
.text:0035D49C 02 00 02 24                                   li      $v0, 2
.text:0035D4A0 0E 00 62 10                                   beq     $v1, $v0, loc_35D4DC
.text:0035D4A4 00 00 00 00                                   nop
.text:0035D4A8 04 00 A3 8F                                   lw      $v1, 0x28+var_24($sp)
.text:0035D4AC 04 00 02 24                                   li      $v0, 4
.text:0035D4B0 13 00 62 10                                   beq     $v1, $v0, loc_35D500
.text:0035D4B4 00 00 00 00                                   nop
.text:0035D4B8 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D4C0 08 00 42 24                                   addiu   $v0, 8
.text:0035D4C4 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035D4C8 25 18 40 00                                   move    $v1, $v0
.text:0035D4CC 00 00 A2 8F                                   lw      $v0, 0x28+var_28($sp)
.text:0035D4D0 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D4D4 11 00 00 10                                   b       loc_35D51C
.text:0035D4D8 00 00 00 00                                   nop
.text:0035D4DC                                # ---------------------------------------------------------------------------
.text:0035D4DC
.text:0035D4DC                               loc_35D4DC:
.text:0035D4DC 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D4E4 08 00 42 24                                   addiu   $v0, 8
.text:0035D4E8 00 00 42 84                                   lh      $v0, 0($v0)
.text:0035D4EC 25 18 40 00                                   move    $v1, $v0
.text:0035D4F0 00 00 A2 8F                                   lw      $v0, 0x28+var_28($sp)
.text:0035D4F4 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D4F8 08 00 00 10                                   b       loc_35D51C
.text:0035D4FC 00 00 00 00                                   nop
.text:0035D500                                # ---------------------------------------------------------------------------
.text:0035D500
.text:0035D500                               loc_35D500:
.text:0035D500 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D508 08 00 42 24                                   addiu   $v0, 8
.text:0035D50C 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035D510 00 00 A2 8F                                   lw      $v0, 0x28+var_28($sp)
.text:0035D514 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D518 00 00 00 00                                   nop
.text:0035D51C
.text:0035D51C                               loc_35D51C:
.text:0035D51C 25 10 00 00                                   move    $v0, $zero
.text:0035D520 28 00 BF DF                                   ld      $ra, 0x28+var_s0($sp)
.text:0035D524 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D528 08 00 E0 03                                   jr      $ra
.text:0035D52C 00 00 00 00                                   nop
.text:0035D52C                                # End of function opcode_0A8C(CRunningScript *)
.text:0035D52C
.text:0035D530
.text:0035D530                                # =============== S U B R O U T I N E =======================================
.text:0035D530
.text:0035D530
.text:0035D530                                # _DWORD __fastcall opcode_0A8D(CRunningScript *)
.text:0035D530                                               .globl opcode_0A8D(CRunningScript *)
.text:0035D530                               opcode_0A8D(CRunningScript *):
.text:0035D530
.text:0035D530                               var_28          = -0x28
.text:0035D530                               var_24          = -0x24
.text:0035D530                               var_18          = -0x18
.text:0035D530                               var_s0          =  0
.text:0035D530
.text:0035D530 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D534 28 00 BF FF                                   sd      $ra, 0x28+var_s0($sp)
.text:0035D538 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035D53C 25 28 A0 03                                   move    $a1, $sp
.text:0035D540 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035D544 F4 7E 0D 0C                                   jal     operator>><ulong>(CRunningScript &,ulong *&)
.text:0035D548 00 00 00 00                                   nop
.text:0035D54C 04 00 A3 27                                   addiu   $v1, $sp, 0x28+var_24
.text:0035D550 25 28 60 00                                   move    $a1, $v1
.text:0035D554 25 20 40 00                                   move    $a0, $v0
.text:0035D558 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D55C 00 00 00 00                                   nop
.text:0035D560 04 00 A2 8F                                   lw      $v0, 0x28+var_24($sp)
.text:0035D564 02 00 03 24                                   li      $v1, 2
.text:0035D568 0B 00 43 10                                   beq     $v0, $v1, loc_35D598
.text:0035D56C 00 00 00 00                                   nop
.text:0035D570 04 00 03 24                                   li      $v1, 4
.text:0035D574 11 00 43 10                                   beq     $v0, $v1, loc_35D5BC
.text:0035D578 00 00 00 00                                   nop
.text:0035D57C 00 00 A3 8F                                   lw      $v1, 0x28+var_28($sp)
.text:0035D580 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D588 00 00 63 90                                   lbu     $v1, 0($v1)
.text:0035D58C 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035D590 10 00 00 10                                   b       loc_35D5D4
.text:0035D594 00 00 00 00                                   nop
.text:0035D598                                # ---------------------------------------------------------------------------
.text:0035D598
.text:0035D598                               loc_35D598:
.text:0035D598 00 00 A2 8F                                   lw      $v0, 0x28+var_28($sp)
.text:0035D59C 00 00 43 94                                   lhu     $v1, 0($v0)
.text:0035D5A0 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D5A8 00 1C 03 00                                   sll     $v1, 16
.text:0035D5AC 03 1C 03 00                                   sra     $v1, 16
.text:0035D5B0 00 00 43 A4                                   sh      $v1, 0($v0)
.text:0035D5B4 07 00 00 10                                   b       loc_35D5D4
.text:0035D5B8 00 00 00 00                                   nop
.text:0035D5BC                                # ---------------------------------------------------------------------------
.text:0035D5BC
.text:0035D5BC                               loc_35D5BC:
.text:0035D5BC 00 00 A3 8F                                   lw      $v1, 0x28+var_28($sp)
.text:0035D5C0 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D5C8 00 00 63 8C                                   lw      $v1, 0($v1)
.text:0035D5CC 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D5D0 00 00 00 00                                   nop
.text:0035D5D4
.text:0035D5D4                               loc_35D5D4:
.text:0035D5D4 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035D5DC 01 00 05 24                                   li      $a1, 1
.text:0035D5E0 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035D5E4 09 F8 40 00                                   jalr    $v0
.text:0035D5E8 00 00 00 00                                   nop
.text:0035D5EC 25 10 00 00                                   move    $v0, $zero
.text:0035D5F0 28 00 BF DF                                   ld      $ra, 0x28+var_s0($sp)
.text:0035D5F4 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D5F8 08 00 E0 03                                   jr      $ra
.text:0035D5FC 00 00 00 00                                   nop
.text:0035D5FC                                # End of function opcode_0A8D(CRunningScript *)
.text:0035D5FC
.text:0035D600
.text:0035D600                                # =============== S U B R O U T I N E =======================================
.text:0035D600
.text:0035D600
.text:0035D600                                               .globl opcode_0A8E(CRunningScript *)
.text:0035D600                               opcode_0A8E(CRunningScript *):
.text:0035D600
.text:0035D600                               var_18          = -0x18
.text:0035D600                               var_s0          =  0
.text:0035D600
.text:0035D600 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D604 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035D608 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035D60C 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035D614 02 00 05 24                                   li      $a1, 2
.text:0035D618 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035D61C 09 F8 40 00                                   jalr    $v0
.text:0035D620 00 00 00 00                                   nop
.text:0035D624 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D62C 00 00 44 8C                                   lw      $a0, 0($v0)
.text:0035D630 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D638 04 00 42 24                                   addiu   $v0, 4
.text:0035D63C 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035D640 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D648 21 18 83 00                                   addu    $v1, $a0, $v1
.text:0035D64C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D650 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035D658 01 00 05 24                                   li      $a1, 1
.text:0035D65C 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035D660 09 F8 40 00                                   jalr    $v0
.text:0035D664 00 00 00 00                                   nop
.text:0035D668 25 10 00 00                                   move    $v0, $zero
.text:0035D66C 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035D670 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D674 08 00 E0 03                                   jr      $ra
.text:0035D678 00 00 00 00                                   nop
.text:0035D678                                # End of function opcode_0A8E(CRunningScript *)
.text:0035D678
.text:0035D67C
.text:0035D67C                                # =============== S U B R O U T I N E =======================================
.text:0035D67C
.text:0035D67C
.text:0035D67C                                               .globl opcode_0A8F(CRunningScript *)
.text:0035D67C                               opcode_0A8F(CRunningScript *):
.text:0035D67C
.text:0035D67C                               var_18          = -0x18
.text:0035D67C                               var_s0          =  0
.text:0035D67C
.text:0035D67C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D680 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035D684 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035D688 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035D690 02 00 05 24                                   li      $a1, 2
.text:0035D694 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035D698 09 F8 40 00                                   jalr    $v0
.text:0035D69C 00 00 00 00                                   nop
.text:0035D6A0 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D6A8 00 00 44 8C                                   lw      $a0, 0($v0)
.text:0035D6AC 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D6B4 04 00 42 24                                   addiu   $v0, 4
.text:0035D6B8 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035D6BC 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D6C4 23 18 83 00                                   subu    $v1, $a0, $v1
.text:0035D6C8 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D6CC 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035D6D4 01 00 05 24                                   li      $a1, 1
.text:0035D6D8 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035D6DC 09 F8 40 00                                   jalr    $v0
.text:0035D6E0 00 00 00 00                                   nop
.text:0035D6E4 25 10 00 00                                   move    $v0, $zero
.text:0035D6E8 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035D6EC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D6F0 08 00 E0 03                                   jr      $ra
.text:0035D6F4 00 00 00 00                                   nop
.text:0035D6F4                                # End of function opcode_0A8F(CRunningScript *)
.text:0035D6F4
.text:0035D6F8
.text:0035D6F8                                # =============== S U B R O U T I N E =======================================
.text:0035D6F8
.text:0035D6F8
.text:0035D6F8                                               .globl opcode_0A90(CRunningScript *)
.text:0035D6F8                               opcode_0A90(CRunningScript *):
.text:0035D6F8
.text:0035D6F8                               var_18          = -0x18
.text:0035D6F8                               var_s0          =  0
.text:0035D6F8
.text:0035D6F8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D6FC 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035D700 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035D704 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035D70C 02 00 05 24                                   li      $a1, 2
.text:0035D710 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035D714 09 F8 40 00                                   jalr    $v0
.text:0035D718 00 00 00 00                                   nop
.text:0035D71C 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D724 00 00 44 8C                                   lw      $a0, 0($v0)
.text:0035D728 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D730 04 00 42 24                                   addiu   $v0, 4
.text:0035D734 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035D738 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D740 18 18 83 00                                   mult    $v1, $a0, $v1
.text:0035D744 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D748 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035D750 01 00 05 24                                   li      $a1, 1
.text:0035D754 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035D758 09 F8 40 00                                   jalr    $v0
.text:0035D75C 00 00 00 00                                   nop
.text:0035D760 25 10 00 00                                   move    $v0, $zero
.text:0035D764 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035D768 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D76C 08 00 E0 03                                   jr      $ra
.text:0035D770 00 00 00 00                                   nop
.text:0035D770                                # End of function opcode_0A90(CRunningScript *)
.text:0035D770
.text:0035D774
.text:0035D774                                # =============== S U B R O U T I N E =======================================
.text:0035D774
.text:0035D774
.text:0035D774                                               .globl opcode_0A91(CRunningScript *)
.text:0035D774                               opcode_0A91(CRunningScript *):
.text:0035D774
.text:0035D774                               var_18          = -0x18
.text:0035D774                               var_s0          =  0
.text:0035D774
.text:0035D774 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D778 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035D77C 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035D780 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035D788 02 00 05 24                                   li      $a1, 2
.text:0035D78C 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035D790 09 F8 40 00                                   jalr    $v0
.text:0035D794 00 00 00 00                                   nop
.text:0035D798 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D7A0 00 00 44 8C                                   lw      $a0, 0($v0)
.text:0035D7A4 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D7AC 04 00 42 24                                   addiu   $v0, 4
.text:0035D7B0 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035D7B4 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035D7BC 1A 00 83 00                                   div     $a0, $v1
.text:0035D7C0 F4 01 60 00                                   teq     $v1, $zero  #7
.text:0035D7C4 10 18 00 00                                   mfhi    $v1
.text:0035D7C8 12 18 00 00                                   mflo    $v1
.text:0035D7CC 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D7D0 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035D7D8 01 00 05 24                                   li      $a1, 1
.text:0035D7DC 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035D7E0 09 F8 40 00                                   jalr    $v0
.text:0035D7E4 00 00 00 00                                   nop
.text:0035D7E8 25 10 00 00                                   move    $v0, $zero
.text:0035D7EC 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035D7F0 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D7F4 08 00 E0 03                                   jr      $ra
.text:0035D7F8 00 00 00 00                                   nop
.text:0035D7F8                                # End of function opcode_0A91(CRunningScript *)
.text:0035D7F8
.text:0035D7FC
.text:0035D7FC                                # =============== S U B R O U T I N E =======================================
.text:0035D7FC
.text:0035D7FC
.text:0035D7FC                                # _DWORD __fastcall opcode_0A96(CRunningScript *)
.text:0035D7FC                                               .globl opcode_0A96(CRunningScript *)
.text:0035D7FC                               opcode_0A96(CRunningScript *):
.text:0035D7FC
.text:0035D7FC                               var_20          = -0x20
.text:0035D7FC                               var_10          = -0x10
.text:0035D7FC                               var_s0          =  0
.text:0035D7FC                               var_s8          =  8
.text:0035D7FC
.text:0035D7FC D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D800 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035D804 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035D808 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035D80C 25 28 A0 03                                   move    $a1, $sp
.text:0035D810 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035D814 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D818 00 00 00 00                                   nop
.text:0035D81C 10 00 B0 8F                                   lw      $s0, 0x20+var_10($sp)
.text:0035D820 36 00 02 3C E4 01 42 8C                       lw      $v0, GetPedStruct
.text:0035D828 36 00 03 3C D8 01 63 8C                       lw      $v1, pedPool
.text:0035D830 00 00 63 8C                                   lw      $v1, 0($v1)
.text:0035D834 25 20 60 00                                   move    $a0, $v1
.text:0035D838 00 00 A3 8F                                   lw      $v1, 0x20+var_20($sp)
.text:0035D83C 25 28 60 00                                   move    $a1, $v1
.text:0035D840 09 F8 40 00                                   jalr    $v0
.text:0035D844 00 00 00 00                                   nop
.text:0035D848 25 28 40 00                                   move    $a1, $v0
.text:0035D84C 25 20 00 02                                   move    $a0, $s0
.text:0035D850 A5 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035D854 00 00 00 00                                   nop
.text:0035D858 25 10 00 00                                   move    $v0, $zero
.text:0035D85C 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035D860 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035D864 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D868 08 00 E0 03                                   jr      $ra
.text:0035D86C 00 00 00 00                                   nop
.text:0035D86C                                # End of function opcode_0A96(CRunningScript *)
.text:0035D86C
.text:0035D870
.text:0035D870                                # =============== S U B R O U T I N E =======================================
.text:0035D870
.text:0035D870
.text:0035D870                                # _DWORD __fastcall opcode_0A97(CRunningScript *)
.text:0035D870                                               .globl opcode_0A97(CRunningScript *)
.text:0035D870                               opcode_0A97(CRunningScript *):
.text:0035D870
.text:0035D870                               var_20          = -0x20
.text:0035D870                               var_10          = -0x10
.text:0035D870                               var_s0          =  0
.text:0035D870                               var_s8          =  8
.text:0035D870
.text:0035D870 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D874 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035D878 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035D87C 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035D880 25 28 A0 03                                   move    $a1, $sp
.text:0035D884 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035D888 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D88C 00 00 00 00                                   nop
.text:0035D890 10 00 B0 8F                                   lw      $s0, 0x20+var_10($sp)
.text:0035D894 36 00 02 3C E8 01 42 8C                       lw      $v0, GetVehStruct
.text:0035D89C 36 00 03 3C DC 01 63 8C                       lw      $v1, vehPool
.text:0035D8A4 00 00 63 8C                                   lw      $v1, 0($v1)
.text:0035D8A8 25 20 60 00                                   move    $a0, $v1
.text:0035D8AC 00 00 A3 8F                                   lw      $v1, 0x20+var_20($sp)
.text:0035D8B0 25 28 60 00                                   move    $a1, $v1
.text:0035D8B4 09 F8 40 00                                   jalr    $v0
.text:0035D8B8 00 00 00 00                                   nop
.text:0035D8BC 25 28 40 00                                   move    $a1, $v0
.text:0035D8C0 25 20 00 02                                   move    $a0, $s0
.text:0035D8C4 A5 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035D8C8 00 00 00 00                                   nop
.text:0035D8CC 25 10 00 00                                   move    $v0, $zero
.text:0035D8D0 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035D8D4 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035D8D8 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D8DC 08 00 E0 03                                   jr      $ra
.text:0035D8E0 00 00 00 00                                   nop
.text:0035D8E0                                # End of function opcode_0A97(CRunningScript *)
.text:0035D8E0
.text:0035D8E4
.text:0035D8E4                                # =============== S U B R O U T I N E =======================================
.text:0035D8E4
.text:0035D8E4
.text:0035D8E4                                # _DWORD __fastcall opcode_0A98(CRunningScript *)
.text:0035D8E4                                               .globl opcode_0A98(CRunningScript *)
.text:0035D8E4                               opcode_0A98(CRunningScript *):
.text:0035D8E4
.text:0035D8E4                               var_20          = -0x20
.text:0035D8E4                               var_10          = -0x10
.text:0035D8E4                               var_s0          =  0
.text:0035D8E4                               var_s8          =  8
.text:0035D8E4
.text:0035D8E4 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D8E8 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035D8EC 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035D8F0 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035D8F4 25 28 A0 03                                   move    $a1, $sp
.text:0035D8F8 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035D8FC 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D900 00 00 00 00                                   nop
.text:0035D904 10 00 B0 8F                                   lw      $s0, 0x20+var_10($sp)
.text:0035D908 36 00 02 3C EC 01 42 8C                       lw      $v0, GetObjStruct
.text:0035D910 36 00 03 3C E0 01 63 8C                       lw      $v1, objPool
.text:0035D918 00 00 63 8C                                   lw      $v1, 0($v1)
.text:0035D91C 25 20 60 00                                   move    $a0, $v1
.text:0035D920 00 00 A3 8F                                   lw      $v1, 0x20+var_20($sp)
.text:0035D924 25 28 60 00                                   move    $a1, $v1
.text:0035D928 09 F8 40 00                                   jalr    $v0
.text:0035D92C 00 00 00 00                                   nop
.text:0035D930 25 28 40 00                                   move    $a1, $v0
.text:0035D934 25 20 00 02                                   move    $a0, $s0
.text:0035D938 A5 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035D93C 00 00 00 00                                   nop
.text:0035D940 25 10 00 00                                   move    $v0, $zero
.text:0035D944 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035D948 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035D94C 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D950 08 00 E0 03                                   jr      $ra
.text:0035D954 00 00 00 00                                   nop
.text:0035D954                                # End of function opcode_0A98(CRunningScript *)
.text:0035D954
.text:0035D958
.text:0035D958                                # =============== S U B R O U T I N E =======================================
.text:0035D958
.text:0035D958
.text:0035D958                                # _DWORD __fastcall opcode_0A9A(CRunningScript *)
.text:0035D958                                               .globl opcode_0A9A(CRunningScript *)
.text:0035D958                               opcode_0A9A(CRunningScript *):
.text:0035D958
.text:0035D958                               var_38          = -0x38
.text:0035D958                               var_34          = -0x34
.text:0035D958                               var_30          = -0x30
.text:0035D958                               var_18          = -0x18
.text:0035D958                               var_s0          =  0
.text:0035D958
.text:0035D958 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035D95C 38 00 BF FF                                   sd      $ra, 0x38+var_s0($sp)
.text:0035D960 20 00 A4 AF                                   sw      $a0, 0x38+var_18($sp)
.text:0035D964 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035D968 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035D96C 20 00 A4 8F                                   lw      $a0, 0x38+var_18($sp)  # CRunningScript *
.text:0035D970 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035D974 00 00 00 00                                   nop
.text:0035D978 00 00 A2 AF                                   sw      $v0, 0x38+var_38($sp)
.text:0035D97C 36 00 02 3C A4 02 42 8C                       lw      $v0, GetScriptStringParam
.text:0035D984 08 00 A3 27                                   addiu   $v1, $sp, 0x38+var_30
.text:0035D988 10 00 06 24                                   li      $a2, 0x10
.text:0035D98C 25 28 60 00                                   move    $a1, $v1
.text:0035D990 20 00 A4 8F                                   lw      $a0, 0x38+var_18($sp)
.text:0035D994 09 F8 40 00                                   jalr    $v0
.text:0035D998 00 00 00 00                                   nop
.text:0035D99C 36 00 02 3C 4C 01 42 8C                       lw      $v0, rw_open
.text:0035D9A4 08 00 A3 27                                   addiu   $v1, $sp, 0x38+var_30
.text:0035D9A8 25 28 60 00                                   move    $a1, $v1
.text:0035D9AC 00 00 A4 8F                                   lw      $a0, 0x38+var_38($sp)
.text:0035D9B0 09 F8 40 00                                   jalr    $v0
.text:0035D9B4 00 00 00 00                                   nop
.text:0035D9B8 04 00 A2 AF                                   sw      $v0, 0x38+var_34($sp)
.text:0035D9BC 04 00 A2 8F                                   lw      $v0, 0x38+var_34($sp)
.text:0035D9C0 0D 00 40 10                                   beqz    $v0, loc_35D9F8
.text:0035D9C4 00 00 00 00                                   nop
.text:0035D9C8 04 00 A5 8F                                   lw      $a1, 0x38+var_34($sp)
.text:0035D9CC 20 00 A4 8F                                   lw      $a0, 0x38+var_18($sp)
.text:0035D9D0 08 7F 0D 0C                                   jal     operator<<<int>(CRunningScript &,int *)
.text:0035D9D4 00 00 00 00                                   nop
.text:0035D9D8 36 00 02 3C C4 01 42 8C                       lw      $v0, SetScriptCondResult
.text:0035D9E0 01 00 05 24                                   li      $a1, 1
.text:0035D9E4 20 00 A4 8F                                   lw      $a0, 0x38+var_18($sp)
.text:0035D9E8 09 F8 40 00                                   jalr    $v0
.text:0035D9EC 00 00 00 00                                   nop
.text:0035D9F0 0B 00 00 10                                   b       loc_35DA20
.text:0035D9F4 00 00 00 00                                   nop
.text:0035D9F8                                # ---------------------------------------------------------------------------
.text:0035D9F8
.text:0035D9F8                               loc_35D9F8:
.text:0035D9F8 25 28 00 00                                   move    $a1, $zero
.text:0035D9FC 20 00 A4 8F                                   lw      $a0, 0x38+var_18($sp)
.text:0035DA00 A5 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035DA04 00 00 00 00                                   nop
.text:0035DA08 36 00 02 3C C4 01 42 8C                       lw      $v0, SetScriptCondResult
.text:0035DA10 25 28 00 00                                   move    $a1, $zero
.text:0035DA14 20 00 A4 8F                                   lw      $a0, 0x38+var_18($sp)
.text:0035DA18 09 F8 40 00                                   jalr    $v0
.text:0035DA1C 00 00 00 00                                   nop
.text:0035DA20
.text:0035DA20                               loc_35DA20:
.text:0035DA20 25 10 00 00                                   move    $v0, $zero
.text:0035DA24 38 00 BF DF                                   ld      $ra, 0x38+var_s0($sp)
.text:0035DA28 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035DA2C 08 00 E0 03                                   jr      $ra
.text:0035DA30 00 00 00 00                                   nop
.text:0035DA30                                # End of function opcode_0A9A(CRunningScript *)
.text:0035DA30
.text:0035DA34
.text:0035DA34                                # =============== S U B R O U T I N E =======================================
.text:0035DA34
.text:0035DA34
.text:0035DA34                                # _DWORD __fastcall opcode_0A9B(CRunningScript *)
.text:0035DA34                                               .globl opcode_0A9B(CRunningScript *)
.text:0035DA34                               opcode_0A9B(CRunningScript *):
.text:0035DA34
.text:0035DA34                               var_28          = -0x28
.text:0035DA34                               var_18          = -0x18
.text:0035DA34                               var_s0          =  0
.text:0035DA34
.text:0035DA34 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035DA38 28 00 BF FF                                   sd      $ra, 0x28+var_s0($sp)
.text:0035DA3C 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035DA40 25 28 A0 03                                   move    $a1, $sp
.text:0035DA44 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035DA48 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DA4C 00 00 00 00                                   nop
.text:0035DA50 36 00 02 3C 58 01 42 8C                       lw      $v0, rw_close
.text:0035DA58 00 00 A3 8F                                   lw      $v1, 0x28+var_28($sp)
.text:0035DA5C 25 20 60 00                                   move    $a0, $v1
.text:0035DA60 09 F8 40 00                                   jalr    $v0
.text:0035DA64 00 00 00 00                                   nop
.text:0035DA68 25 10 00 00                                   move    $v0, $zero
.text:0035DA6C 28 00 BF DF                                   ld      $ra, 0x28+var_s0($sp)
.text:0035DA70 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035DA74 08 00 E0 03                                   jr      $ra
.text:0035DA78 00 00 00 00                                   nop
.text:0035DA78                                # End of function opcode_0A9B(CRunningScript *)
.text:0035DA78
.text:0035DA7C
.text:0035DA7C                                # =============== S U B R O U T I N E =======================================
.text:0035DA7C
.text:0035DA7C
.text:0035DA7C                                # _DWORD __fastcall CFileMgr_GetFileLength(int *)
.text:0035DA7C                                               .globl CFileMgr_GetFileLength(int *)
.text:0035DA7C                               CFileMgr_GetFileLength(int *):
.text:0035DA7C
.text:0035DA7C                               var_38          = -0x38
.text:0035DA7C                               var_34          = -0x34
.text:0035DA7C                               var_30          = -0x30
.text:0035DA7C                               var_2C          = -0x2C
.text:0035DA7C                               var_28          = -0x28
.text:0035DA7C                               var_24          = -0x24
.text:0035DA7C                               var_18          = -0x18
.text:0035DA7C                               var_s0          =  0
.text:0035DA7C
.text:0035DA7C C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035DA80 38 00 BF FF                                   sd      $ra, 0x38+var_s0($sp)
.text:0035DA84 20 00 A4 AF                                   sw      $a0, 0x38+var_18($sp)
.text:0035DA88 36 00 02 3C 5C 01 42 8C                       lw      $v0, RwOsGetFileInterface
.text:0035DA90 09 F8 40 00                                   jalr    $v0
.text:0035DA94 00 00 00 00                                   nop
.text:0035DA98 00 00 A2 AF                                   sw      $v0, 0x38+var_38($sp)
.text:0035DA9C 00 00 A2 8F                                   lw      $v0, 0x38+var_38($sp)
.text:0035DAA0 28 00 42 8C                                   lw      $v0, 0x28($v0)
.text:0035DAA4 20 00 A4 8F                                   lw      $a0, 0x38+var_18($sp)
.text:0035DAA8 09 F8 40 00                                   jalr    $v0
.text:0035DAAC 00 00 00 00                                   nop
.text:0035DAB0 04 00 A2 AF                                   sw      $v0, 0x38+var_34($sp)
.text:0035DAB4 36 00 02 3C 5C 01 42 8C                       lw      $v0, RwOsGetFileInterface
.text:0035DABC 09 F8 40 00                                   jalr    $v0
.text:0035DAC0 00 00 00 00                                   nop
.text:0035DAC4 08 00 A2 AF                                   sw      $v0, 0x38+var_30($sp)
.text:0035DAC8 08 00 A2 8F                                   lw      $v0, 0x38+var_30($sp)
.text:0035DACC 20 00 42 8C                                   lw      $v0, 0x20($v0)
.text:0035DAD0 02 00 06 24                                   li      $a2, 2
.text:0035DAD4 25 28 00 00                                   move    $a1, $zero
.text:0035DAD8 20 00 A4 8F                                   lw      $a0, 0x38+var_18($sp)
.text:0035DADC 09 F8 40 00                                   jalr    $v0
.text:0035DAE0 00 00 00 00                                   nop
.text:0035DAE4 36 00 02 3C 5C 01 42 8C                       lw      $v0, RwOsGetFileInterface
.text:0035DAEC 09 F8 40 00                                   jalr    $v0
.text:0035DAF0 00 00 00 00                                   nop
.text:0035DAF4 0C 00 A2 AF                                   sw      $v0, 0x38+var_2C($sp)
.text:0035DAF8 0C 00 A2 8F                                   lw      $v0, 0x38+var_2C($sp)
.text:0035DAFC 28 00 42 8C                                   lw      $v0, 0x28($v0)
.text:0035DB00 20 00 A4 8F                                   lw      $a0, 0x38+var_18($sp)
.text:0035DB04 09 F8 40 00                                   jalr    $v0
.text:0035DB08 00 00 00 00                                   nop
.text:0035DB0C 10 00 A2 AF                                   sw      $v0, 0x38+var_28($sp)
.text:0035DB10 36 00 02 3C 5C 01 42 8C                       lw      $v0, RwOsGetFileInterface
.text:0035DB18 09 F8 40 00                                   jalr    $v0
.text:0035DB1C 00 00 00 00                                   nop
.text:0035DB20 14 00 A2 AF                                   sw      $v0, 0x38+var_24($sp)
.text:0035DB24 14 00 A2 8F                                   lw      $v0, 0x38+var_24($sp)
.text:0035DB28 20 00 42 8C                                   lw      $v0, 0x20($v0)
.text:0035DB2C 25 30 00 00                                   move    $a2, $zero
.text:0035DB30 04 00 A5 8F                                   lw      $a1, 0x38+var_34($sp)
.text:0035DB34 20 00 A4 8F                                   lw      $a0, 0x38+var_18($sp)
.text:0035DB38 09 F8 40 00                                   jalr    $v0
.text:0035DB3C 00 00 00 00                                   nop
.text:0035DB40 10 00 A2 8F                                   lw      $v0, 0x38+var_28($sp)
.text:0035DB44 38 00 BF DF                                   ld      $ra, 0x38+var_s0($sp)
.text:0035DB48 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035DB4C 08 00 E0 03                                   jr      $ra
.text:0035DB50 00 00 00 00                                   nop
.text:0035DB50                                # End of function CFileMgr_GetFileLength(int *)
.text:0035DB50
.text:0035DB54
.text:0035DB54                                # =============== S U B R O U T I N E =======================================
.text:0035DB54
.text:0035DB54
.text:0035DB54                                # _DWORD __fastcall opcode_0A9C(CRunningScript *)
.text:0035DB54                                               .globl opcode_0A9C(CRunningScript *)
.text:0035DB54                               opcode_0A9C(CRunningScript *):
.text:0035DB54
.text:0035DB54                               var_20          = -0x20
.text:0035DB54                               var_10          = -0x10
.text:0035DB54                               var_s0          =  0
.text:0035DB54                               var_s8          =  8
.text:0035DB54
.text:0035DB54 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035DB58 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035DB5C 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035DB60 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035DB64 25 28 A0 03                                   move    $a1, $sp
.text:0035DB68 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035DB6C 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DB70 00 00 00 00                                   nop
.text:0035DB74 10 00 B0 8F                                   lw      $s0, 0x20+var_10($sp)
.text:0035DB78 00 00 A2 8F                                   lw      $v0, 0x20+var_20($sp)
.text:0035DB7C 25 20 40 00                                   move    $a0, $v0         # int *
.text:0035DB80 9F 76 0D 0C                                   jal     CFileMgr_GetFileLength(int *)
.text:0035DB84 00 00 00 00                                   nop
.text:0035DB88 25 28 40 00                                   move    $a1, $v0
.text:0035DB8C 25 20 00 02                                   move    $a0, $s0
.text:0035DB90 A5 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035DB94 00 00 00 00                                   nop
.text:0035DB98 25 10 00 00                                   move    $v0, $zero
.text:0035DB9C 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035DBA0 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035DBA4 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035DBA8 08 00 E0 03                                   jr      $ra
.text:0035DBAC 00 00 00 00                                   nop
.text:0035DBAC                                # End of function opcode_0A9C(CRunningScript *)
.text:0035DBAC
.text:0035DBB0
.text:0035DBB0                                # =============== S U B R O U T I N E =======================================
.text:0035DBB0
.text:0035DBB0
.text:0035DBB0                                # _DWORD __fastcall opcode_0A9D(CRunningScript *)
.text:0035DBB0                                               .globl opcode_0A9D(CRunningScript *)
.text:0035DBB0                               opcode_0A9D(CRunningScript *):
.text:0035DBB0
.text:0035DBB0                               var_28          = -0x28
.text:0035DBB0                               var_24          = -0x24
.text:0035DBB0                               var_20          = -0x20
.text:0035DBB0                               var_18          = -0x18
.text:0035DBB0                               var_s0          =  0
.text:0035DBB0
.text:0035DBB0 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035DBB4 28 00 BF FF                                   sd      $ra, 0x28+var_s0($sp)
.text:0035DBB8 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035DBBC 04 00 A2 27                                   addiu   $v0, $sp, 0x28+var_24
.text:0035DBC0 25 28 40 00                                   move    $a1, $v0
.text:0035DBC4 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035DBC8 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DBCC 00 00 00 00                                   nop
.text:0035DBD0 08 00 A3 27                                   addiu   $v1, $sp, 0x28+var_20
.text:0035DBD4 25 28 60 00                                   move    $a1, $v1
.text:0035DBD8 25 20 40 00                                   move    $a0, $v0
.text:0035DBDC 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DBE0 00 00 00 00                                   nop
.text:0035DBE4 36 00 02 3C A8 02 42 8C                       lw      $v0, GetScriptParamPointer
.text:0035DBEC 01 00 05 24                                   li      $a1, 1
.text:0035DBF0 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035DBF4 09 F8 40 00                                   jalr    $v0
.text:0035DBF8 00 00 00 00                                   nop
.text:0035DBFC 00 00 A2 AF                                   sw      $v0, 0x28+var_28($sp)
.text:0035DC00 36 00 02 3C 50 01 42 8C                       lw      $v0, rw_read
.text:0035DC08 04 00 A3 8F                                   lw      $v1, 0x28+var_24($sp)
.text:0035DC0C 25 20 60 00                                   move    $a0, $v1
.text:0035DC10 08 00 A3 8F                                   lw      $v1, 0x28+var_20($sp)
.text:0035DC14 25 30 60 00                                   move    $a2, $v1
.text:0035DC18 00 00 A5 8F                                   lw      $a1, 0x28+var_28($sp)
.text:0035DC1C 09 F8 40 00                                   jalr    $v0
.text:0035DC20 00 00 00 00                                   nop
.text:0035DC24 25 10 00 00                                   move    $v0, $zero
.text:0035DC28 28 00 BF DF                                   ld      $ra, 0x28+var_s0($sp)
.text:0035DC2C 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035DC30 08 00 E0 03                                   jr      $ra
.text:0035DC34 00 00 00 00                                   nop
.text:0035DC34                                # End of function opcode_0A9D(CRunningScript *)
.text:0035DC34
.text:0035DC38
.text:0035DC38                                # =============== S U B R O U T I N E =======================================
.text:0035DC38
.text:0035DC38
.text:0035DC38                                               .globl opcode_0A9F(CRunningScript *)
.text:0035DC38                               opcode_0A9F(CRunningScript *):
.text:0035DC38
.text:0035DC38                               var_18          = -0x18
.text:0035DC38                               var_s0          =  0
.text:0035DC38
.text:0035DC38 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035DC3C 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035DC40 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035DC44 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035DC4C 00 00 A3 8F                                   lw      $v1, 0x18+var_18($sp)
.text:0035DC50 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035DC54 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035DC5C 01 00 05 24                                   li      $a1, 1
.text:0035DC60 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035DC64 09 F8 40 00                                   jalr    $v0
.text:0035DC68 00 00 00 00                                   nop
.text:0035DC6C 25 10 00 00                                   move    $v0, $zero
.text:0035DC70 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035DC74 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035DC78 08 00 E0 03                                   jr      $ra
.text:0035DC7C 00 00 00 00                                   nop
.text:0035DC7C                                # End of function opcode_0A9F(CRunningScript *)
.text:0035DC7C
.text:0035DC80
.text:0035DC80                                # =============== S U B R O U T I N E =======================================
.text:0035DC80
.text:0035DC80
.text:0035DC80                                # _DWORD __fastcall opcode_0AA0(CRunningScript *)
.text:0035DC80                                               .globl opcode_0AA0(CRunningScript *)
.text:0035DC80                               opcode_0AA0(CRunningScript *):
.text:0035DC80
.text:0035DC80                               var_20          = -0x20
.text:0035DC80                               var_10          = -0x10
.text:0035DC80                               var_s0          =  0
.text:0035DC80                               var_s8          =  8
.text:0035DC80
.text:0035DC80 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035DC84 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035DC88 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035DC8C 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035DC90 25 28 A0 03                                   move    $a1, $sp
.text:0035DC94 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035DC98 91 7E 0D 0C                                   jal     operator>>(CRunningScript &,int &)
.text:0035DC9C 00 00 00 00                                   nop
.text:0035DCA0 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)  # this
.text:0035DCA4 F2 7D 0D 0C                                   jal     CRunningScript::GetConditionResult(void)
.text:0035DCA8 00 00 00 00                                   nop
.text:0035DCAC 04 00 40 10                                   beqz    $v0, loc_35DCC0
.text:0035DCB0 00 00 00 00                                   nop
.text:0035DCB4 25 10 00 00                                   move    $v0, $zero
.text:0035DCB8 0F 00 00 10                                   b       loc_35DCF8
.text:0035DCBC 00 00 00 00                                   nop
.text:0035DCC0                                # ---------------------------------------------------------------------------
.text:0035DCC0
.text:0035DCC0                               loc_35DCC0:
.text:0035DCC0 10 00 B0 8F                                   lw      $s0, 0x20+var_10($sp)
.text:0035DCC4 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)  # this
.text:0035DCC8 E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035DCCC 00 00 00 00                                   nop
.text:0035DCD0 25 28 40 00                                   move    $a1, $v0         # unsigned __int8 *
.text:0035DCD4 25 20 00 02                                   move    $a0, $s0         # this
.text:0035DCD8 0A 7E 0D 0C                                   jal     CRunningScript::PushStack(uchar *)
.text:0035DCDC 00 00 00 00                                   nop
.text:0035DCE0 00 00 A2 8F                                   lw      $v0, 0x20+var_20($sp)
.text:0035DCE4 25 28 40 00                                   move    $a1, $v0         # int
.text:0035DCE8 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)  # CRunningScript *
.text:0035DCEC 4A 7E 0D 0C                                   jal     ThreadJump(CRunningScript *,int)
.text:0035DCF0 00 00 00 00                                   nop
.text:0035DCF4 25 10 00 00                                   move    $v0, $zero
.text:0035DCF8
.text:0035DCF8                               loc_35DCF8:
.text:0035DCF8 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035DCFC 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035DD00 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035DD04 08 00 E0 03                                   jr      $ra
.text:0035DD08 00 00 00 00                                   nop
.text:0035DD08                                # End of function opcode_0AA0(CRunningScript *)
.text:0035DD08
.text:0035DD0C
.text:0035DD0C                                # =============== S U B R O U T I N E =======================================
.text:0035DD0C
.text:0035DD0C
.text:0035DD0C                                # _DWORD __fastcall opcode_0AA1(CRunningScript *)
.text:0035DD0C                                               .globl opcode_0AA1(CRunningScript *)
.text:0035DD0C                               opcode_0AA1(CRunningScript *):
.text:0035DD0C
.text:0035DD0C                               var_10          = -0x10
.text:0035DD0C                               var_s0          =  0
.text:0035DD0C                               var_s8          =  8
.text:0035DD0C
.text:0035DD0C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035DD10 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035DD14 10 00 B0 FF                                   sd      $s0, 0x10+var_s0($sp)
.text:0035DD18 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035DD1C 00 00 A4 8F                                   lw      $a0, 0x10+var_10($sp)  # this
.text:0035DD20 F2 7D 0D 0C                                   jal     CRunningScript::GetConditionResult(void)
.text:0035DD24 00 00 00 00                                   nop
.text:0035DD28 04 00 40 10                                   beqz    $v0, loc_35DD3C
.text:0035DD2C 00 00 00 00                                   nop
.text:0035DD30 25 10 00 00                                   move    $v0, $zero
.text:0035DD34 0A 00 00 10                                   b       loc_35DD60
.text:0035DD38 00 00 00 00                                   nop
.text:0035DD3C                                # ---------------------------------------------------------------------------
.text:0035DD3C
.text:0035DD3C                               loc_35DD3C:
.text:0035DD3C 00 00 B0 8F                                   lw      $s0, 0x10+var_10($sp)
.text:0035DD40 00 00 A4 8F                                   lw      $a0, 0x10+var_10($sp)  # this
.text:0035DD44 1D 7E 0D 0C                                   jal     CRunningScript::PopStack(void)
.text:0035DD48 00 00 00 00                                   nop
.text:0035DD4C 25 28 40 00                                   move    $a1, $v0         # void *
.text:0035DD50 25 20 00 02                                   move    $a0, $s0         # this
.text:0035DD54 E8 7D 0D 0C                                   jal     CRunningScript::SetIp(void *)
.text:0035DD58 00 00 00 00                                   nop
.text:0035DD5C 25 10 00 00                                   move    $v0, $zero
.text:0035DD60
.text:0035DD60                               loc_35DD60:
.text:0035DD60 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035DD64 10 00 B0 DF                                   ld      $s0, 0x10+var_s0($sp)
.text:0035DD68 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035DD6C 08 00 E0 03                                   jr      $ra
.text:0035DD70 00 00 00 00                                   nop
.text:0035DD70                                # End of function opcode_0AA1(CRunningScript *)
.text:0035DD70
.text:0035DD74
.text:0035DD74                                # =============== S U B R O U T I N E =======================================
.text:0035DD74
.text:0035DD74
.text:0035DD74                                # _DWORD __fastcall opcode_0AA5(CRunningScript *)
.text:0035DD74                                               .globl opcode_0AA5(CRunningScript *)
.text:0035DD74                               opcode_0AA5(CRunningScript *):
.text:0035DD74
.text:0035DD74                               var_78          = -0x78
.text:0035DD74                               var_70          = -0x70
.text:0035DD74                               var_68          = -0x68
.text:0035DD74                               var_60          = -0x60
.text:0035DD74                               var_58          = -0x58
.text:0035DD74                               var_50          = -0x50
.text:0035DD74                               var_48          = -0x48
.text:0035DD74                               var_38          = -0x38
.text:0035DD74                               var_34          = -0x34
.text:0035DD74                               var_30          = -0x30
.text:0035DD74                               var_2C          = -0x2C
.text:0035DD74                               var_28          = -0x28
.text:0035DD74                               var_24          = -0x24
.text:0035DD74                               var_18          = -0x18
.text:0035DD74                               var_s0          =  0
.text:0035DD74
.text:0035DD74 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035DD78 78 00 BF FF                                   sd      $ra, 0x78+var_s0($sp)
.text:0035DD7C 60 00 A4 AF                                   sw      $a0, 0x78+var_18($sp)
.text:0035DD80 4C 00 A2 27                                   addiu   $v0, $sp, 0x78+var_2C
.text:0035DD84 25 28 40 00                                   move    $a1, $v0
.text:0035DD88 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035DD8C 1B 7F 0D 0C                                   jal     operator>><void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035DD90 00 00 00 00                                   nop
.text:0035DD94 50 00 A3 27                                   addiu   $v1, $sp, 0x78+var_28
.text:0035DD98 25 28 60 00                                   move    $a1, $v1
.text:0035DD9C 25 20 40 00                                   move    $a0, $v0
.text:0035DDA0 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DDA4 00 00 00 00                                   nop
.text:0035DDA8 54 00 A3 27                                   addiu   $v1, $sp, 0x78+var_24
.text:0035DDAC 25 28 60 00                                   move    $a1, $v1
.text:0035DDB0 25 20 40 00                                   move    $a0, $v0
.text:0035DDB4 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DDB8 00 00 00 00                                   nop
.text:0035DDBC 50 00 A2 8F                                   lw      $v0, 0x78+var_28($sp)
.text:0035DDC0 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035DDC4 03 00 40 14                                   bnez    $v0, loc_35DDD4
.text:0035DDC8 00 00 00 00                                   nop
.text:0035DDCC 0F 00 02 24                                   li      $v0, 0xF
.text:0035DDD0 50 00 A2 AF                                   sw      $v0, 0x78+var_28($sp)
.text:0035DDD4
.text:0035DDD4                               loc_35DDD4:
.text:0035DDD4 54 00 A2 8F                                   lw      $v0, 0x78+var_24($sp)
.text:0035DDD8 80 10 02 00                                   sll     $v0, 2
.text:0035DDDC 54 00 A2 AF                                   sw      $v0, 0x78+var_24($sp)
.text:0035DDE0 50 00 A2 8F                                   lw      $v0, 0x78+var_28($sp)
.text:0035DDE4 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DDE8 36 00 02 3C D0 05 42 24                       li      $v0, arguments
.text:0035DDF0 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DDF4 48 00 A2 AF                                   sw      $v0, 0x78+var_30($sp)
.text:0035DDF8 40 00 A0 AF                                   sw      $zero, 0x78+var_38($sp)
.text:0035DDFC 36 00 02 3C D0 05 42 24                       li      $v0, arguments
.text:0035DE04 44 00 A2 AF                                   sw      $v0, 0x78+var_34($sp)
.text:0035DE08 87 00 00 10                                   b       loc_35E028
.text:0035DE0C 00 00 00 00                                   nop
.text:0035DE10                                # ---------------------------------------------------------------------------
.text:0035DE10
.text:0035DE10                               loc_35DE10:                              # this
.text:0035DE10 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035DE14 E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035DE18 00 00 00 00                                   nop
.text:0035DE1C 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035DE20 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035DE24 7D 00 60 10                                   beqz    $v1, def_35DE40  # jumptable 0035DE40 default case, cases 0,12,13,15
.text:0035DE28 00 00 00 00                                   nop
.text:0035DE2C 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DE30 36 00 02 3C 38 FF 42 24                       li      $v0, jpt_35DE40
.text:0035DE38 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DE3C 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035DE40 08 00 40 00                                   jr      $v0              # switch jump
.text:0035DE44 00 00 00 00                                   nop
.text:0035DE48                                # ---------------------------------------------------------------------------
.text:0035DE48
.text:0035DE48                               loc_35DE48:                              # jumptable 0035DE40 case 6
.text:0035DE48 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DE4C 25 28 40 00                                   move    $a1, $v0
.text:0035DE50 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035DE54 B8 7E 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035DE58 00 00 00 00                                   nop
.text:0035DE5C 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035DE60 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035DE64 44 00 40 10                                   beqz    $v0, def_35DE84  # jumptable 0035DE84 default case
.text:0035DE68 00 00 00 00                                   nop
.text:0035DE6C 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035DE70 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DE74 36 00 02 3C 80 FF 42 24                       li      $v0, jpt_35DE84
.text:0035DE7C 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DE80 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035DE84 08 00 40 00                                   jr      $v0              # switch jump
.text:0035DE88 00 00 00 00                                   nop
.text:0035DE8C                                # ---------------------------------------------------------------------------
.text:0035DE8C
.text:0035DE8C                               loc_35DE8C:                              # jumptable 0035DE84 case 0
.text:0035DE8C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DE90 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035DE94 38 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DE98 00 00 00 00                                   nop
.text:0035DE9C                                # ---------------------------------------------------------------------------
.text:0035DE9C
.text:0035DE9C                               loc_35DE9C:                              # jumptable 0035DE84 case 1
.text:0035DE9C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DEA0 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035DEA4 34 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DEA8 00 00 00 00                                   nop
.text:0035DEAC                                # ---------------------------------------------------------------------------
.text:0035DEAC
.text:0035DEAC                               loc_35DEAC:                              # jumptable 0035DE84 case 2
.text:0035DEAC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DEB0 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035DEB4 30 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DEB8 00 00 00 00                                   nop
.text:0035DEBC                                # ---------------------------------------------------------------------------
.text:0035DEBC
.text:0035DEBC                               loc_35DEBC:                              # jumptable 0035DE84 case 3
.text:0035DEBC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DEC0 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035DEC4 2C 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DEC8 00 00 00 00                                   nop
.text:0035DECC                                # ---------------------------------------------------------------------------
.text:0035DECC
.text:0035DECC                               loc_35DECC:                              # jumptable 0035DE84 case 4
.text:0035DECC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DED0 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035DED4 28 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DED8 00 00 00 00                                   nop
.text:0035DEDC                                # ---------------------------------------------------------------------------
.text:0035DEDC
.text:0035DEDC                               loc_35DEDC:                              # jumptable 0035DE84 case 5
.text:0035DEDC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DEE0 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035DEE4 24 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DEE8 00 00 00 00                                   nop
.text:0035DEEC                                # ---------------------------------------------------------------------------
.text:0035DEEC
.text:0035DEEC                               loc_35DEEC:                              # jumptable 0035DE84 case 6
.text:0035DEEC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DEF0 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035DEF4 20 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DEF8 00 00 00 00                                   nop
.text:0035DEFC                                # ---------------------------------------------------------------------------
.text:0035DEFC
.text:0035DEFC                               loc_35DEFC:                              # jumptable 0035DE84 case 7
.text:0035DEFC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DF00 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035DF04 1C 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DF08 00 00 00 00                                   nop
.text:0035DF0C                                # ---------------------------------------------------------------------------
.text:0035DF0C
.text:0035DF0C                               loc_35DF0C:                              # jumptable 0035DE84 case 8
.text:0035DF0C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DF10 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035DF14 18 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DF18 00 00 00 00                                   nop
.text:0035DF1C                                # ---------------------------------------------------------------------------
.text:0035DF1C
.text:0035DF1C                               loc_35DF1C:                              # jumptable 0035DE84 case 9
.text:0035DF1C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DF20 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035DF24 14 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DF28 00 00 00 00                                   nop
.text:0035DF2C                                # ---------------------------------------------------------------------------
.text:0035DF2C
.text:0035DF2C                               loc_35DF2C:                              # jumptable 0035DE84 case 10
.text:0035DF2C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DF30 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035DF34 10 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DF38 00 00 00 00                                   nop
.text:0035DF3C                                # ---------------------------------------------------------------------------
.text:0035DF3C
.text:0035DF3C                               loc_35DF3C:                              # jumptable 0035DE84 case 11
.text:0035DF3C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DF40 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035DF44 0C 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DF48 00 00 00 00                                   nop
.text:0035DF4C                                # ---------------------------------------------------------------------------
.text:0035DF4C
.text:0035DF4C                               loc_35DF4C:                              # jumptable 0035DE84 case 12
.text:0035DF4C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DF50 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035DF54 08 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DF58 00 00 00 00                                   nop
.text:0035DF5C                                # ---------------------------------------------------------------------------
.text:0035DF5C
.text:0035DF5C                               loc_35DF5C:                              # jumptable 0035DE84 case 13
.text:0035DF5C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DF60 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035DF64 04 00 00 10                                   b       def_35DE84       # jumptable 0035DE84 default case
.text:0035DF68 00 00 00 00                                   nop
.text:0035DF6C                                # ---------------------------------------------------------------------------
.text:0035DF6C
.text:0035DF6C                               loc_35DF6C:                              # jumptable 0035DE84 case 14
.text:0035DF6C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DF70 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035DF74 00 00 00 00                                   nop
.text:0035DF78
.text:0035DF78                               def_35DE84:                              # jumptable 0035DE84 default case
.text:0035DF78 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035DF7C 01 00 42 24                                   addiu   $v0, 1
.text:0035DF80 40 00 A2 AF                                   sw      $v0, 0x78+var_38($sp)
.text:0035DF84 25 00 00 10                                   b       def_35DE40       # jumptable 0035DE40 default case, cases 0,12,13,15
.text:0035DF88 00 00 00 00                                   nop
.text:0035DF8C                                # ---------------------------------------------------------------------------
.text:0035DF8C
.text:0035DF8C                               loc_35DF8C:                              # jumptable 0035DE40 cases 1-5,7,8
.text:0035DF8C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DF90 25 28 40 00                                   move    $a1, $v0
.text:0035DF94 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035DF98 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DF9C 00 00 00 00                                   nop
.text:0035DFA0 1E 00 00 10                                   b       def_35DE40       # jumptable 0035DE40 default case, cases 0,12,13,15
.text:0035DFA4 00 00 00 00                                   nop
.text:0035DFA8                                # ---------------------------------------------------------------------------
.text:0035DFA8
.text:0035DFA8                               loc_35DFA8:                              # jumptable 0035DE40 cases 10,11,16,17
.text:0035DFA8 36 00 02 3C A8 02 42 8C                       lw      $v0, GetScriptParamPointer
.text:0035DFB0 01 00 05 24                                   li      $a1, 1
.text:0035DFB4 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035DFB8 09 F8 40 00                                   jalr    $v0
.text:0035DFBC 00 00 00 00                                   nop
.text:0035DFC0 25 18 40 00                                   move    $v1, $v0
.text:0035DFC4 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035DFC8 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035DFCC 13 00 00 10                                   b       def_35DE40       # jumptable 0035DE40 default case, cases 0,12,13,15
.text:0035DFD0 00 00 00 00                                   nop
.text:0035DFD4                                # ---------------------------------------------------------------------------
.text:0035DFD4
.text:0035DFD4                               loc_35DFD4:                              # jumptable 0035DE40 cases 9,14
.text:0035DFD4 36 00 02 3C C8 05 42 90                       lbu     $v0, currTextParam
.text:0035DFDC 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035DFE0 FF 00 64 30                                   andi    $a0, $v1, 0xFF
.text:0035DFE4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DFE8 C8 05 64 A0                                   sb      $a0, currTextParam
.text:0035DFEC C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035DFF0 36 00 02 3C C8 04 42 24                       li      $v0, textParams
.text:0035DFF8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DFFC 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035E000 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035E004 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)  # CRunningScript *
.text:0035E008 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E00C 00 00 00 00                                   nop
.text:0035E010 25 18 40 00                                   move    $v1, $v0
.text:0035E014 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E018 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E01C
.text:0035E01C                               def_35DE40:                              # jumptable 0035DE40 default case, cases 0,12,13,15
.text:0035E01C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E020 04 00 42 24                                   addiu   $v0, 4
.text:0035E024 44 00 A2 AF                                   sw      $v0, 0x78+var_34($sp)
.text:0035E028
.text:0035E028                               loc_35E028:
.text:0035E028 44 00 A3 8F                                   lw      $v1, 0x78+var_34($sp)
.text:0035E02C 48 00 A2 8F                                   lw      $v0, 0x78+var_30($sp)
.text:0035E030 77 FF 62 14                                   bne     $v1, $v0, loc_35DE10
.text:0035E034 00 00 00 00                                   nop
.text:0035E038 4C 00 A2 8F                                   lw      $v0, 0x78+var_2C($sp)
.text:0035E03C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E040 D0 05 6A 24                                   addiu   $a6, $v1, (arguments - 0x360000)
.text:0035E044 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E048 D0 05 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035E04C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E050 D0 05 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035E054 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E058 D0 05 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035E05C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E060 D0 05 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035E064 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E068 D0 05 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035E06C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E070 D0 05 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035E074 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E078 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E080 38 00 6B 8D                                   lw      $a7, (dword_360608 - 0x3605D0)($a7)
.text:0035E084 30 00 AB AF                                   sw      $a7, 0x78+var_48($sp)
.text:0035E088 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E090 34 00 6B 8D                                   lw      $a7, (dword_360604 - 0x3605D0)($a7)
.text:0035E094 28 00 AB AF                                   sw      $a7, 0x78+var_50($sp)
.text:0035E098 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E0A0 30 00 6B 8D                                   lw      $a7, (dword_360600 - 0x3605D0)($a7)
.text:0035E0A4 20 00 AB AF                                   sw      $a7, 0x78+var_58($sp)
.text:0035E0A8 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E0B0 2C 00 6B 8D                                   lw      $a7, (dword_3605FC - 0x3605D0)($a7)
.text:0035E0B4 18 00 AB AF                                   sw      $a7, 0x78+var_60($sp)
.text:0035E0B8 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E0C0 28 00 6B 8D                                   lw      $a7, (dword_3605F8 - 0x3605D0)($a7)
.text:0035E0C4 10 00 AB AF                                   sw      $a7, 0x78+var_68($sp)
.text:0035E0C8 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E0D0 24 00 6B 8D                                   lw      $a7, (dword_3605F4 - 0x3605D0)($a7)
.text:0035E0D4 08 00 AB AF                                   sw      $a7, 0x78+var_70($sp)
.text:0035E0D8 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E0E0 20 00 6B 8D                                   lw      $a7, (dword_3605F0 - 0x3605D0)($a7)
.text:0035E0E4 00 00 AB AF                                   sw      $a7, 0x78+var_78($sp)
.text:0035E0E8 1C 00 4B 8D                                   lw      $a7, (dword_3605EC - 0x3605D0)($a6)
.text:0035E0EC 18 00 2A 8D                                   lw      $a6, (dword_3605E8 - 0x3605D0)($a5)
.text:0035E0F0 14 00 09 8D                                   lw      $a5, (dword_3605E4 - 0x3605D0)($a4)
.text:0035E0F4 10 00 E8 8C                                   lw      $a4, (dword_3605E0 - 0x3605D0)($a3)
.text:0035E0F8 0C 00 C7 8C                                   lw      $a3, (dword_3605DC - 0x3605D0)($a2)
.text:0035E0FC 08 00 A6 8C                                   lw      $a2, (dword_3605D8 - 0x3605D0)($a1)
.text:0035E100 04 00 85 8C                                   lw      $a1, (dword_3605D4 - 0x3605D0)($a0)
.text:0035E104 D0 05 64 8C                                   lw      $a0, (arguments - 0x360000)($v1)
.text:0035E108 09 F8 40 00                                   jalr    $v0
.text:0035E10C 00 00 00 00                                   nop
.text:0035E110 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)  # CRunningScript *
.text:0035E114 2F 7E 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035E118 00 00 00 00                                   nop
.text:0035E11C 25 10 00 00                                   move    $v0, $zero
.text:0035E120 78 00 BF DF                                   ld      $ra, 0x78+var_s0($sp)
.text:0035E124 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035E128 08 00 E0 03                                   jr      $ra
.text:0035E12C 00 00 00 00                                   nop
.text:0035E12C                                # End of function opcode_0AA5(CRunningScript *)
.text:0035E12C
.text:0035E130
.text:0035E130                                # =============== S U B R O U T I N E =======================================
.text:0035E130
.text:0035E130
.text:0035E130                                # _DWORD __fastcall opcode_0AA6(CRunningScript *)
.text:0035E130                                               .globl opcode_0AA6(CRunningScript *)
.text:0035E130                               opcode_0AA6(CRunningScript *):
.text:0035E130
.text:0035E130                               var_78          = -0x78
.text:0035E130                               var_70          = -0x70
.text:0035E130                               var_68          = -0x68
.text:0035E130                               var_60          = -0x60
.text:0035E130                               var_58          = -0x58
.text:0035E130                               var_50          = -0x50
.text:0035E130                               var_48          = -0x48
.text:0035E130                               var_40          = -0x40
.text:0035E130                               var_38          = -0x38
.text:0035E130                               var_34          = -0x34
.text:0035E130                               var_30          = -0x30
.text:0035E130                               var_2C          = -0x2C
.text:0035E130                               var_28          = -0x28
.text:0035E130                               var_24          = -0x24
.text:0035E130                               var_20          = -0x20
.text:0035E130                               var_18          = -0x18
.text:0035E130                               var_s0          =  0
.text:0035E130
.text:0035E130 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035E134 78 00 BF FF                                   sd      $ra, 0x78+var_s0($sp)
.text:0035E138 60 00 A4 AF                                   sw      $a0, 0x78+var_18($sp)
.text:0035E13C 4C 00 A2 27                                   addiu   $v0, $sp, 0x78+var_2C
.text:0035E140 25 28 40 00                                   move    $a1, $v0
.text:0035E144 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E148 30 7F 0D 0C                                   jal     operator>><void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035E14C 00 00 00 00                                   nop
.text:0035E150 50 00 A3 27                                   addiu   $v1, $sp, 0x78+var_28
.text:0035E154 25 28 60 00                                   move    $a1, $v1
.text:0035E158 25 20 40 00                                   move    $a0, $v0
.text:0035E15C E0 7E 0D 0C                                   jal     operator>>(CRunningScript &,void *&)
.text:0035E160 00 00 00 00                                   nop
.text:0035E164 54 00 A3 27                                   addiu   $v1, $sp, 0x78+var_24
.text:0035E168 25 28 60 00                                   move    $a1, $v1
.text:0035E16C 25 20 40 00                                   move    $a0, $v0
.text:0035E170 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E174 00 00 00 00                                   nop
.text:0035E178 58 00 A3 27                                   addiu   $v1, $sp, 0x78+var_20
.text:0035E17C 25 28 60 00                                   move    $a1, $v1
.text:0035E180 25 20 40 00                                   move    $a0, $v0
.text:0035E184 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E188 00 00 00 00                                   nop
.text:0035E18C 54 00 A2 8F                                   lw      $v0, 0x78+var_24($sp)
.text:0035E190 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035E194 03 00 40 14                                   bnez    $v0, loc_35E1A4
.text:0035E198 00 00 00 00                                   nop
.text:0035E19C 0F 00 02 24                                   li      $v0, 0xF
.text:0035E1A0 54 00 A2 AF                                   sw      $v0, 0x78+var_24($sp)
.text:0035E1A4
.text:0035E1A4                               loc_35E1A4:
.text:0035E1A4 58 00 A2 8F                                   lw      $v0, 0x78+var_20($sp)
.text:0035E1A8 80 10 02 00                                   sll     $v0, 2
.text:0035E1AC 58 00 A2 AF                                   sw      $v0, 0x78+var_20($sp)
.text:0035E1B0 54 00 A2 8F                                   lw      $v0, 0x78+var_24($sp)
.text:0035E1B4 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E1B8 36 00 02 3C D0 05 42 24                       li      $v0, arguments
.text:0035E1C0 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E1C4 48 00 A2 AF                                   sw      $v0, 0x78+var_30($sp)
.text:0035E1C8 40 00 A0 AF                                   sw      $zero, 0x78+var_38($sp)
.text:0035E1CC 36 00 02 3C D0 05 42 24                       li      $v0, arguments
.text:0035E1D4 44 00 A2 AF                                   sw      $v0, 0x78+var_34($sp)
.text:0035E1D8 87 00 00 10                                   b       loc_35E3F8
.text:0035E1DC 00 00 00 00                                   nop
.text:0035E1E0                                # ---------------------------------------------------------------------------
.text:0035E1E0
.text:0035E1E0                               loc_35E1E0:                              # this
.text:0035E1E0 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E1E4 E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035E1E8 00 00 00 00                                   nop
.text:0035E1EC 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035E1F0 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035E1F4 7D 00 60 10                                   beqz    $v1, def_35E210  # jumptable 0035E210 default case, cases 0,12,13,15
.text:0035E1F8 00 00 00 00                                   nop
.text:0035E1FC 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E200 36 00 02 3C BC FF 42 24                       li      $v0, jpt_35E210
.text:0035E208 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E20C 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E210 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E214 00 00 00 00                                   nop
.text:0035E218                                # ---------------------------------------------------------------------------
.text:0035E218
.text:0035E218                               loc_35E218:                              # jumptable 0035E210 case 6
.text:0035E218 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E21C 25 28 40 00                                   move    $a1, $v0
.text:0035E220 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E224 B8 7E 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035E228 00 00 00 00                                   nop
.text:0035E22C 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035E230 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035E234 44 00 40 10                                   beqz    $v0, def_35E254  # jumptable 0035E254 default case
.text:0035E238 00 00 00 00                                   nop
.text:0035E23C 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035E240 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E244 36 00 02 3C 04 00 42 24                       li      $v0, jpt_35E254
.text:0035E24C 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E250 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E254 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E258 00 00 00 00                                   nop
.text:0035E25C                                # ---------------------------------------------------------------------------
.text:0035E25C
.text:0035E25C                               loc_35E25C:                              # jumptable 0035E254 case 0
.text:0035E25C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E260 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035E264 38 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E268 00 00 00 00                                   nop
.text:0035E26C                                # ---------------------------------------------------------------------------
.text:0035E26C
.text:0035E26C                               loc_35E26C:                              # jumptable 0035E254 case 1
.text:0035E26C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E270 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035E274 34 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E278 00 00 00 00                                   nop
.text:0035E27C                                # ---------------------------------------------------------------------------
.text:0035E27C
.text:0035E27C                               loc_35E27C:                              # jumptable 0035E254 case 2
.text:0035E27C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E280 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035E284 30 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E288 00 00 00 00                                   nop
.text:0035E28C                                # ---------------------------------------------------------------------------
.text:0035E28C
.text:0035E28C                               loc_35E28C:                              # jumptable 0035E254 case 3
.text:0035E28C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E290 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035E294 2C 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E298 00 00 00 00                                   nop
.text:0035E29C                                # ---------------------------------------------------------------------------
.text:0035E29C
.text:0035E29C                               loc_35E29C:                              # jumptable 0035E254 case 4
.text:0035E29C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E2A0 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035E2A4 28 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E2A8 00 00 00 00                                   nop
.text:0035E2AC                                # ---------------------------------------------------------------------------
.text:0035E2AC
.text:0035E2AC                               loc_35E2AC:                              # jumptable 0035E254 case 5
.text:0035E2AC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E2B0 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035E2B4 24 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E2B8 00 00 00 00                                   nop
.text:0035E2BC                                # ---------------------------------------------------------------------------
.text:0035E2BC
.text:0035E2BC                               loc_35E2BC:                              # jumptable 0035E254 case 6
.text:0035E2BC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E2C0 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035E2C4 20 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E2C8 00 00 00 00                                   nop
.text:0035E2CC                                # ---------------------------------------------------------------------------
.text:0035E2CC
.text:0035E2CC                               loc_35E2CC:                              # jumptable 0035E254 case 7
.text:0035E2CC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E2D0 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035E2D4 1C 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E2D8 00 00 00 00                                   nop
.text:0035E2DC                                # ---------------------------------------------------------------------------
.text:0035E2DC
.text:0035E2DC                               loc_35E2DC:                              # jumptable 0035E254 case 8
.text:0035E2DC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E2E0 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035E2E4 18 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E2E8 00 00 00 00                                   nop
.text:0035E2EC                                # ---------------------------------------------------------------------------
.text:0035E2EC
.text:0035E2EC                               loc_35E2EC:                              # jumptable 0035E254 case 9
.text:0035E2EC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E2F0 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035E2F4 14 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E2F8 00 00 00 00                                   nop
.text:0035E2FC                                # ---------------------------------------------------------------------------
.text:0035E2FC
.text:0035E2FC                               loc_35E2FC:                              # jumptable 0035E254 case 10
.text:0035E2FC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E300 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035E304 10 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E308 00 00 00 00                                   nop
.text:0035E30C                                # ---------------------------------------------------------------------------
.text:0035E30C
.text:0035E30C                               loc_35E30C:                              # jumptable 0035E254 case 11
.text:0035E30C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E310 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035E314 0C 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E318 00 00 00 00                                   nop
.text:0035E31C                                # ---------------------------------------------------------------------------
.text:0035E31C
.text:0035E31C                               loc_35E31C:                              # jumptable 0035E254 case 12
.text:0035E31C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E320 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035E324 08 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E328 00 00 00 00                                   nop
.text:0035E32C                                # ---------------------------------------------------------------------------
.text:0035E32C
.text:0035E32C                               loc_35E32C:                              # jumptable 0035E254 case 13
.text:0035E32C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E330 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035E334 04 00 00 10                                   b       def_35E254       # jumptable 0035E254 default case
.text:0035E338 00 00 00 00                                   nop
.text:0035E33C                                # ---------------------------------------------------------------------------
.text:0035E33C
.text:0035E33C                               loc_35E33C:                              # jumptable 0035E254 case 14
.text:0035E33C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E340 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035E344 00 00 00 00                                   nop
.text:0035E348
.text:0035E348                               def_35E254:                              # jumptable 0035E254 default case
.text:0035E348 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035E34C 01 00 42 24                                   addiu   $v0, 1
.text:0035E350 40 00 A2 AF                                   sw      $v0, 0x78+var_38($sp)
.text:0035E354 25 00 00 10                                   b       def_35E210       # jumptable 0035E210 default case, cases 0,12,13,15
.text:0035E358 00 00 00 00                                   nop
.text:0035E35C                                # ---------------------------------------------------------------------------
.text:0035E35C
.text:0035E35C                               loc_35E35C:                              # jumptable 0035E210 cases 1-5,7,8
.text:0035E35C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E360 25 28 40 00                                   move    $a1, $v0
.text:0035E364 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E368 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E36C 00 00 00 00                                   nop
.text:0035E370 1E 00 00 10                                   b       def_35E210       # jumptable 0035E210 default case, cases 0,12,13,15
.text:0035E374 00 00 00 00                                   nop
.text:0035E378                                # ---------------------------------------------------------------------------
.text:0035E378
.text:0035E378                               loc_35E378:                              # jumptable 0035E210 cases 10,11,16,17
.text:0035E378 36 00 02 3C A8 02 42 8C                       lw      $v0, GetScriptParamPointer
.text:0035E380 01 00 05 24                                   li      $a1, 1
.text:0035E384 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E388 09 F8 40 00                                   jalr    $v0
.text:0035E38C 00 00 00 00                                   nop
.text:0035E390 25 18 40 00                                   move    $v1, $v0
.text:0035E394 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E398 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E39C 13 00 00 10                                   b       def_35E210       # jumptable 0035E210 default case, cases 0,12,13,15
.text:0035E3A0 00 00 00 00                                   nop
.text:0035E3A4                                # ---------------------------------------------------------------------------
.text:0035E3A4
.text:0035E3A4                               loc_35E3A4:                              # jumptable 0035E210 cases 9,14
.text:0035E3A4 36 00 02 3C C8 05 42 90                       lbu     $v0, currTextParam
.text:0035E3AC 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035E3B0 FF 00 64 30                                   andi    $a0, $v1, 0xFF
.text:0035E3B4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E3B8 C8 05 64 A0                                   sb      $a0, currTextParam
.text:0035E3BC C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035E3C0 36 00 02 3C C8 04 42 24                       li      $v0, textParams
.text:0035E3C8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E3CC 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035E3D0 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035E3D4 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)  # CRunningScript *
.text:0035E3D8 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E3DC 00 00 00 00                                   nop
.text:0035E3E0 25 18 40 00                                   move    $v1, $v0
.text:0035E3E4 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E3E8 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E3EC
.text:0035E3EC                               def_35E210:                              # jumptable 0035E210 default case, cases 0,12,13,15
.text:0035E3EC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E3F0 04 00 42 24                                   addiu   $v0, 4
.text:0035E3F4 44 00 A2 AF                                   sw      $v0, 0x78+var_34($sp)
.text:0035E3F8
.text:0035E3F8                               loc_35E3F8:
.text:0035E3F8 44 00 A3 8F                                   lw      $v1, 0x78+var_34($sp)
.text:0035E3FC 48 00 A2 8F                                   lw      $v0, 0x78+var_30($sp)
.text:0035E400 77 FF 62 14                                   bne     $v1, $v0, loc_35E1E0
.text:0035E404 00 00 00 00                                   nop
.text:0035E408 4C 00 A2 8F                                   lw      $v0, 0x78+var_2C($sp)
.text:0035E40C 50 00 AC 8F                                   lw      $t4, 0x78+var_28($sp)
.text:0035E410 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E414 D0 05 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035E418 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E41C D0 05 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035E420 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E424 D0 05 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035E428 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E42C D0 05 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035E430 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E434 D0 05 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035E438 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E43C D0 05 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035E440 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E444 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035E44C 38 00 4A 8D                                   lw      $a6, (dword_360608 - 0x3605D0)($a6)
.text:0035E450 38 00 AA AF                                   sw      $a6, 0x78+var_40($sp)
.text:0035E454 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035E45C 34 00 4A 8D                                   lw      $a6, (dword_360604 - 0x3605D0)($a6)
.text:0035E460 30 00 AA AF                                   sw      $a6, 0x78+var_48($sp)
.text:0035E464 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035E46C 30 00 4A 8D                                   lw      $a6, (dword_360600 - 0x3605D0)($a6)
.text:0035E470 28 00 AA AF                                   sw      $a6, 0x78+var_50($sp)
.text:0035E474 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035E47C 2C 00 4A 8D                                   lw      $a6, (dword_3605FC - 0x3605D0)($a6)
.text:0035E480 20 00 AA AF                                   sw      $a6, 0x78+var_58($sp)
.text:0035E484 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035E48C 28 00 4A 8D                                   lw      $a6, (dword_3605F8 - 0x3605D0)($a6)
.text:0035E490 18 00 AA AF                                   sw      $a6, 0x78+var_60($sp)
.text:0035E494 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035E49C 24 00 4A 8D                                   lw      $a6, (dword_3605F4 - 0x3605D0)($a6)
.text:0035E4A0 10 00 AA AF                                   sw      $a6, 0x78+var_68($sp)
.text:0035E4A4 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035E4AC 20 00 4A 8D                                   lw      $a6, (dword_3605F0 - 0x3605D0)($a6)
.text:0035E4B0 08 00 AA AF                                   sw      $a6, 0x78+var_70($sp)
.text:0035E4B4 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035E4BC 1C 00 4A 8D                                   lw      $a6, (dword_3605EC - 0x3605D0)($a6)
.text:0035E4C0 00 00 AA AF                                   sw      $a6, 0x78+var_78($sp)
.text:0035E4C4 18 00 2B 8D                                   lw      $a7, (dword_3605E8 - 0x3605D0)($a5)
.text:0035E4C8 14 00 0A 8D                                   lw      $a6, (dword_3605E4 - 0x3605D0)($a4)
.text:0035E4CC 10 00 E9 8C                                   lw      $a5, (dword_3605E0 - 0x3605D0)($a3)
.text:0035E4D0 0C 00 C8 8C                                   lw      $a4, (dword_3605DC - 0x3605D0)($a2)
.text:0035E4D4 08 00 A7 8C                                   lw      $a3, (dword_3605D8 - 0x3605D0)($a1)
.text:0035E4D8 04 00 86 8C                                   lw      $a2, (dword_3605D4 - 0x3605D0)($a0)
.text:0035E4DC D0 05 65 8C                                   lw      $a1, (arguments - 0x360000)($v1)
.text:0035E4E0 25 20 80 01                                   move    $a0, $t4
.text:0035E4E4 09 F8 40 00                                   jalr    $v0
.text:0035E4E8 00 00 00 00                                   nop
.text:0035E4EC 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)  # CRunningScript *
.text:0035E4F0 2F 7E 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035E4F4 00 00 00 00                                   nop
.text:0035E4F8 25 10 00 00                                   move    $v0, $zero
.text:0035E4FC 78 00 BF DF                                   ld      $ra, 0x78+var_s0($sp)
.text:0035E500 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035E504 08 00 E0 03                                   jr      $ra
.text:0035E508 00 00 00 00                                   nop
.text:0035E508                                # End of function opcode_0AA6(CRunningScript *)
.text:0035E508
.text:0035E50C
.text:0035E50C                                # =============== S U B R O U T I N E =======================================
.text:0035E50C
.text:0035E50C
.text:0035E50C                                # _DWORD __fastcall opcode_0AA7(CRunningScript *)
.text:0035E50C                                               .globl opcode_0AA7(CRunningScript *)
.text:0035E50C                               opcode_0AA7(CRunningScript *):
.text:0035E50C
.text:0035E50C                               var_78          = -0x78
.text:0035E50C                               var_70          = -0x70
.text:0035E50C                               var_68          = -0x68
.text:0035E50C                               var_60          = -0x60
.text:0035E50C                               var_58          = -0x58
.text:0035E50C                               var_50          = -0x50
.text:0035E50C                               var_48          = -0x48
.text:0035E50C                               var_38          = -0x38
.text:0035E50C                               var_34          = -0x34
.text:0035E50C                               var_30          = -0x30
.text:0035E50C                               var_2C          = -0x2C
.text:0035E50C                               var_28          = -0x28
.text:0035E50C                               var_24          = -0x24
.text:0035E50C                               var_20          = -0x20
.text:0035E50C                               var_18          = -0x18
.text:0035E50C                               var_s0          =  0
.text:0035E50C
.text:0035E50C 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035E510 78 00 BF FF                                   sd      $ra, 0x78+var_s0($sp)
.text:0035E514 60 00 A4 AF                                   sw      $a0, 0x78+var_18($sp)
.text:0035E518 50 00 A2 27                                   addiu   $v0, $sp, 0x78+var_28
.text:0035E51C 25 28 40 00                                   move    $a1, $v0
.text:0035E520 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E524 45 7F 0D 0C                                   jal     operator>><ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035E528 00 00 00 00                                   nop
.text:0035E52C 54 00 A3 27                                   addiu   $v1, $sp, 0x78+var_24
.text:0035E530 25 28 60 00                                   move    $a1, $v1
.text:0035E534 25 20 40 00                                   move    $a0, $v0
.text:0035E538 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E53C 00 00 00 00                                   nop
.text:0035E540 58 00 A3 27                                   addiu   $v1, $sp, 0x78+var_20
.text:0035E544 25 28 60 00                                   move    $a1, $v1
.text:0035E548 25 20 40 00                                   move    $a0, $v0
.text:0035E54C 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E550 00 00 00 00                                   nop
.text:0035E554 54 00 A2 8F                                   lw      $v0, 0x78+var_24($sp)
.text:0035E558 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035E55C 03 00 40 14                                   bnez    $v0, loc_35E56C
.text:0035E560 00 00 00 00                                   nop
.text:0035E564 0F 00 02 24                                   li      $v0, 0xF
.text:0035E568 54 00 A2 AF                                   sw      $v0, 0x78+var_24($sp)
.text:0035E56C
.text:0035E56C                               loc_35E56C:
.text:0035E56C 58 00 A2 8F                                   lw      $v0, 0x78+var_20($sp)
.text:0035E570 80 10 02 00                                   sll     $v0, 2
.text:0035E574 58 00 A2 AF                                   sw      $v0, 0x78+var_20($sp)
.text:0035E578 54 00 A2 8F                                   lw      $v0, 0x78+var_24($sp)
.text:0035E57C 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E580 36 00 02 3C D0 05 42 24                       li      $v0, arguments
.text:0035E588 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E58C 48 00 A2 AF                                   sw      $v0, 0x78+var_30($sp)
.text:0035E590 40 00 A0 AF                                   sw      $zero, 0x78+var_38($sp)
.text:0035E594 36 00 02 3C D0 05 42 24                       li      $v0, arguments
.text:0035E59C 44 00 A2 AF                                   sw      $v0, 0x78+var_34($sp)
.text:0035E5A0 87 00 00 10                                   b       loc_35E7C0
.text:0035E5A4 00 00 00 00                                   nop
.text:0035E5A8                                # ---------------------------------------------------------------------------
.text:0035E5A8
.text:0035E5A8                               loc_35E5A8:                              # this
.text:0035E5A8 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E5AC E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035E5B0 00 00 00 00                                   nop
.text:0035E5B4 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035E5B8 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035E5BC 7D 00 60 10                                   beqz    $v1, def_35E5D8  # jumptable 0035E5D8 default case, cases 0,12,13,15
.text:0035E5C0 00 00 00 00                                   nop
.text:0035E5C4 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E5C8 36 00 02 3C 40 00 42 24                       li      $v0, jpt_35E5D8
.text:0035E5D0 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E5D4 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E5D8 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E5DC 00 00 00 00                                   nop
.text:0035E5E0                                # ---------------------------------------------------------------------------
.text:0035E5E0
.text:0035E5E0                               loc_35E5E0:                              # jumptable 0035E5D8 case 6
.text:0035E5E0 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E5E4 25 28 40 00                                   move    $a1, $v0
.text:0035E5E8 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E5EC B8 7E 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035E5F0 00 00 00 00                                   nop
.text:0035E5F4 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035E5F8 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035E5FC 44 00 40 10                                   beqz    $v0, def_35E61C  # jumptable 0035E61C default case
.text:0035E600 00 00 00 00                                   nop
.text:0035E604 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035E608 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E60C 36 00 02 3C 88 00 42 24                       li      $v0, jpt_35E61C
.text:0035E614 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E618 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E61C 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E620 00 00 00 00                                   nop
.text:0035E624                                # ---------------------------------------------------------------------------
.text:0035E624
.text:0035E624                               loc_35E624:                              # jumptable 0035E61C case 0
.text:0035E624 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E628 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035E62C 38 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E630 00 00 00 00                                   nop
.text:0035E634                                # ---------------------------------------------------------------------------
.text:0035E634
.text:0035E634                               loc_35E634:                              # jumptable 0035E61C case 1
.text:0035E634 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E638 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035E63C 34 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E640 00 00 00 00                                   nop
.text:0035E644                                # ---------------------------------------------------------------------------
.text:0035E644
.text:0035E644                               loc_35E644:                              # jumptable 0035E61C case 2
.text:0035E644 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E648 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035E64C 30 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E650 00 00 00 00                                   nop
.text:0035E654                                # ---------------------------------------------------------------------------
.text:0035E654
.text:0035E654                               loc_35E654:                              # jumptable 0035E61C case 3
.text:0035E654 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E658 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035E65C 2C 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E660 00 00 00 00                                   nop
.text:0035E664                                # ---------------------------------------------------------------------------
.text:0035E664
.text:0035E664                               loc_35E664:                              # jumptable 0035E61C case 4
.text:0035E664 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E668 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035E66C 28 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E670 00 00 00 00                                   nop
.text:0035E674                                # ---------------------------------------------------------------------------
.text:0035E674
.text:0035E674                               loc_35E674:                              # jumptable 0035E61C case 5
.text:0035E674 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E678 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035E67C 24 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E680 00 00 00 00                                   nop
.text:0035E684                                # ---------------------------------------------------------------------------
.text:0035E684
.text:0035E684                               loc_35E684:                              # jumptable 0035E61C case 6
.text:0035E684 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E688 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035E68C 20 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E690 00 00 00 00                                   nop
.text:0035E694                                # ---------------------------------------------------------------------------
.text:0035E694
.text:0035E694                               loc_35E694:                              # jumptable 0035E61C case 7
.text:0035E694 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E698 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035E69C 1C 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E6A0 00 00 00 00                                   nop
.text:0035E6A4                                # ---------------------------------------------------------------------------
.text:0035E6A4
.text:0035E6A4                               loc_35E6A4:                              # jumptable 0035E61C case 8
.text:0035E6A4 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E6A8 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035E6AC 18 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E6B0 00 00 00 00                                   nop
.text:0035E6B4                                # ---------------------------------------------------------------------------
.text:0035E6B4
.text:0035E6B4                               loc_35E6B4:                              # jumptable 0035E61C case 9
.text:0035E6B4 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E6B8 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035E6BC 14 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E6C0 00 00 00 00                                   nop
.text:0035E6C4                                # ---------------------------------------------------------------------------
.text:0035E6C4
.text:0035E6C4                               loc_35E6C4:                              # jumptable 0035E61C case 10
.text:0035E6C4 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E6C8 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035E6CC 10 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E6D0 00 00 00 00                                   nop
.text:0035E6D4                                # ---------------------------------------------------------------------------
.text:0035E6D4
.text:0035E6D4                               loc_35E6D4:                              # jumptable 0035E61C case 11
.text:0035E6D4 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E6D8 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035E6DC 0C 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E6E0 00 00 00 00                                   nop
.text:0035E6E4                                # ---------------------------------------------------------------------------
.text:0035E6E4
.text:0035E6E4                               loc_35E6E4:                              # jumptable 0035E61C case 12
.text:0035E6E4 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E6E8 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035E6EC 08 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E6F0 00 00 00 00                                   nop
.text:0035E6F4                                # ---------------------------------------------------------------------------
.text:0035E6F4
.text:0035E6F4                               loc_35E6F4:                              # jumptable 0035E61C case 13
.text:0035E6F4 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E6F8 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035E6FC 04 00 00 10                                   b       def_35E61C       # jumptable 0035E61C default case
.text:0035E700 00 00 00 00                                   nop
.text:0035E704                                # ---------------------------------------------------------------------------
.text:0035E704
.text:0035E704                               loc_35E704:                              # jumptable 0035E61C case 14
.text:0035E704 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E708 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035E70C 00 00 00 00                                   nop
.text:0035E710
.text:0035E710                               def_35E61C:                              # jumptable 0035E61C default case
.text:0035E710 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035E714 01 00 42 24                                   addiu   $v0, 1
.text:0035E718 40 00 A2 AF                                   sw      $v0, 0x78+var_38($sp)
.text:0035E71C 25 00 00 10                                   b       def_35E5D8       # jumptable 0035E5D8 default case, cases 0,12,13,15
.text:0035E720 00 00 00 00                                   nop
.text:0035E724                                # ---------------------------------------------------------------------------
.text:0035E724
.text:0035E724                               loc_35E724:                              # jumptable 0035E5D8 cases 1-5,7,8
.text:0035E724 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E728 25 28 40 00                                   move    $a1, $v0
.text:0035E72C 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E730 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E734 00 00 00 00                                   nop
.text:0035E738 1E 00 00 10                                   b       def_35E5D8       # jumptable 0035E5D8 default case, cases 0,12,13,15
.text:0035E73C 00 00 00 00                                   nop
.text:0035E740                                # ---------------------------------------------------------------------------
.text:0035E740
.text:0035E740                               loc_35E740:                              # jumptable 0035E5D8 cases 10,11,16,17
.text:0035E740 36 00 02 3C A8 02 42 8C                       lw      $v0, GetScriptParamPointer
.text:0035E748 01 00 05 24                                   li      $a1, 1
.text:0035E74C 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E750 09 F8 40 00                                   jalr    $v0
.text:0035E754 00 00 00 00                                   nop
.text:0035E758 25 18 40 00                                   move    $v1, $v0
.text:0035E75C 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E760 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E764 13 00 00 10                                   b       def_35E5D8       # jumptable 0035E5D8 default case, cases 0,12,13,15
.text:0035E768 00 00 00 00                                   nop
.text:0035E76C                                # ---------------------------------------------------------------------------
.text:0035E76C
.text:0035E76C                               loc_35E76C:                              # jumptable 0035E5D8 cases 9,14
.text:0035E76C 36 00 02 3C C8 05 42 90                       lbu     $v0, currTextParam
.text:0035E774 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035E778 FF 00 64 30                                   andi    $a0, $v1, 0xFF
.text:0035E77C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E780 C8 05 64 A0                                   sb      $a0, currTextParam
.text:0035E784 C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035E788 36 00 02 3C C8 04 42 24                       li      $v0, textParams
.text:0035E790 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E794 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035E798 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035E79C 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)  # CRunningScript *
.text:0035E7A0 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E7A4 00 00 00 00                                   nop
.text:0035E7A8 25 18 40 00                                   move    $v1, $v0
.text:0035E7AC 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E7B0 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E7B4
.text:0035E7B4                               def_35E5D8:                              # jumptable 0035E5D8 default case, cases 0,12,13,15
.text:0035E7B4 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E7B8 04 00 42 24                                   addiu   $v0, 4
.text:0035E7BC 44 00 A2 AF                                   sw      $v0, 0x78+var_34($sp)
.text:0035E7C0
.text:0035E7C0                               loc_35E7C0:
.text:0035E7C0 44 00 A3 8F                                   lw      $v1, 0x78+var_34($sp)
.text:0035E7C4 48 00 A2 8F                                   lw      $v0, 0x78+var_30($sp)
.text:0035E7C8 77 FF 62 14                                   bne     $v1, $v0, loc_35E5A8
.text:0035E7CC 00 00 00 00                                   nop
.text:0035E7D0 50 00 A2 8F                                   lw      $v0, 0x78+var_28($sp)
.text:0035E7D4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E7D8 D0 05 6A 24                                   addiu   $a6, $v1, (arguments - 0x360000)
.text:0035E7DC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E7E0 D0 05 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035E7E4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E7E8 D0 05 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035E7EC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E7F0 D0 05 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035E7F4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E7F8 D0 05 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035E7FC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E800 D0 05 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035E804 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E808 D0 05 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035E80C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E810 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E818 38 00 6B 8D                                   lw      $a7, (dword_360608 - 0x3605D0)($a7)
.text:0035E81C 30 00 AB AF                                   sw      $a7, 0x78+var_48($sp)
.text:0035E820 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E828 34 00 6B 8D                                   lw      $a7, (dword_360604 - 0x3605D0)($a7)
.text:0035E82C 28 00 AB AF                                   sw      $a7, 0x78+var_50($sp)
.text:0035E830 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E838 30 00 6B 8D                                   lw      $a7, (dword_360600 - 0x3605D0)($a7)
.text:0035E83C 20 00 AB AF                                   sw      $a7, 0x78+var_58($sp)
.text:0035E840 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E848 2C 00 6B 8D                                   lw      $a7, (dword_3605FC - 0x3605D0)($a7)
.text:0035E84C 18 00 AB AF                                   sw      $a7, 0x78+var_60($sp)
.text:0035E850 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E858 28 00 6B 8D                                   lw      $a7, (dword_3605F8 - 0x3605D0)($a7)
.text:0035E85C 10 00 AB AF                                   sw      $a7, 0x78+var_68($sp)
.text:0035E860 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E868 24 00 6B 8D                                   lw      $a7, (dword_3605F4 - 0x3605D0)($a7)
.text:0035E86C 08 00 AB AF                                   sw      $a7, 0x78+var_70($sp)
.text:0035E870 36 00 0B 3C D0 05 6B 25                       li      $a7, arguments
.text:0035E878 20 00 6B 8D                                   lw      $a7, (dword_3605F0 - 0x3605D0)($a7)
.text:0035E87C 00 00 AB AF                                   sw      $a7, 0x78+var_78($sp)
.text:0035E880 1C 00 4B 8D                                   lw      $a7, (dword_3605EC - 0x3605D0)($a6)
.text:0035E884 18 00 2A 8D                                   lw      $a6, (dword_3605E8 - 0x3605D0)($a5)
.text:0035E888 14 00 09 8D                                   lw      $a5, (dword_3605E4 - 0x3605D0)($a4)
.text:0035E88C 10 00 E8 8C                                   lw      $a4, (dword_3605E0 - 0x3605D0)($a3)
.text:0035E890 0C 00 C7 8C                                   lw      $a3, (dword_3605DC - 0x3605D0)($a2)
.text:0035E894 08 00 A6 8C                                   lw      $a2, (dword_3605D8 - 0x3605D0)($a1)
.text:0035E898 04 00 85 8C                                   lw      $a1, (dword_3605D4 - 0x3605D0)($a0)
.text:0035E89C D0 05 64 8C                                   lw      $a0, (arguments - 0x360000)($v1)
.text:0035E8A0 09 F8 40 00                                   jalr    $v0
.text:0035E8A4 00 00 00 00                                   nop
.text:0035E8A8 4C 00 A2 AF                                   sw      $v0, 0x78+var_2C($sp)
.text:0035E8AC 4C 00 A5 8F                                   lw      $a1, 0x78+var_2C($sp)
.text:0035E8B0 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E8B4 7E 7E 0D 0C                                   jal     operator<<(CRunningScript &,ulong)
.text:0035E8B8 00 00 00 00                                   nop
.text:0035E8BC 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)  # CRunningScript *
.text:0035E8C0 2F 7E 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035E8C4 00 00 00 00                                   nop
.text:0035E8C8 25 10 00 00                                   move    $v0, $zero
.text:0035E8CC 78 00 BF DF                                   ld      $ra, 0x78+var_s0($sp)
.text:0035E8D0 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035E8D4 08 00 E0 03                                   jr      $ra
.text:0035E8D8 00 00 00 00                                   nop
.text:0035E8D8                                # End of function opcode_0AA7(CRunningScript *)
.text:0035E8D8
.text:0035E8DC
.text:0035E8DC                                # =============== S U B R O U T I N E =======================================
.text:0035E8DC
.text:0035E8DC
.text:0035E8DC                                # _DWORD __fastcall opcode_0AA8(CRunningScript *)
.text:0035E8DC                                               .globl opcode_0AA8(CRunningScript *)
.text:0035E8DC                               opcode_0AA8(CRunningScript *):
.text:0035E8DC
.text:0035E8DC                               var_78          = -0x78
.text:0035E8DC                               var_70          = -0x70
.text:0035E8DC                               var_68          = -0x68
.text:0035E8DC                               var_60          = -0x60
.text:0035E8DC                               var_58          = -0x58
.text:0035E8DC                               var_50          = -0x50
.text:0035E8DC                               var_48          = -0x48
.text:0035E8DC                               var_40          = -0x40
.text:0035E8DC                               var_38          = -0x38
.text:0035E8DC                               var_34          = -0x34
.text:0035E8DC                               var_30          = -0x30
.text:0035E8DC                               var_2C          = -0x2C
.text:0035E8DC                               var_28          = -0x28
.text:0035E8DC                               var_24          = -0x24
.text:0035E8DC                               var_20          = -0x20
.text:0035E8DC                               var_1C          = -0x1C
.text:0035E8DC                               var_18          = -0x18
.text:0035E8DC                               var_s0          =  0
.text:0035E8DC
.text:0035E8DC 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035E8E0 78 00 BF FF                                   sd      $ra, 0x78+var_s0($sp)
.text:0035E8E4 60 00 A4 AF                                   sw      $a0, 0x78+var_18($sp)
.text:0035E8E8 50 00 A2 27                                   addiu   $v0, $sp, 0x78+var_28
.text:0035E8EC 25 28 40 00                                   move    $a1, $v0
.text:0035E8F0 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E8F4 5A 7F 0D 0C                                   jal     operator>><ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035E8F8 00 00 00 00                                   nop
.text:0035E8FC 54 00 A3 27                                   addiu   $v1, $sp, 0x78+var_24
.text:0035E900 25 28 60 00                                   move    $a1, $v1
.text:0035E904 25 20 40 00                                   move    $a0, $v0
.text:0035E908 E0 7E 0D 0C                                   jal     operator>>(CRunningScript &,void *&)
.text:0035E90C 00 00 00 00                                   nop
.text:0035E910 58 00 A3 27                                   addiu   $v1, $sp, 0x78+var_20
.text:0035E914 25 28 60 00                                   move    $a1, $v1
.text:0035E918 25 20 40 00                                   move    $a0, $v0
.text:0035E91C 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E920 00 00 00 00                                   nop
.text:0035E924 5C 00 A3 27                                   addiu   $v1, $sp, 0x78+var_1C
.text:0035E928 25 28 60 00                                   move    $a1, $v1
.text:0035E92C 25 20 40 00                                   move    $a0, $v0
.text:0035E930 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E934 00 00 00 00                                   nop
.text:0035E938 58 00 A2 8F                                   lw      $v0, 0x78+var_20($sp)
.text:0035E93C 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035E940 03 00 40 14                                   bnez    $v0, loc_35E950
.text:0035E944 00 00 00 00                                   nop
.text:0035E948 0F 00 02 24                                   li      $v0, 0xF
.text:0035E94C 58 00 A2 AF                                   sw      $v0, 0x78+var_20($sp)
.text:0035E950
.text:0035E950                               loc_35E950:
.text:0035E950 5C 00 A2 8F                                   lw      $v0, 0x78+var_1C($sp)
.text:0035E954 80 10 02 00                                   sll     $v0, 2
.text:0035E958 5C 00 A2 AF                                   sw      $v0, 0x78+var_1C($sp)
.text:0035E95C 58 00 A2 8F                                   lw      $v0, 0x78+var_20($sp)
.text:0035E960 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E964 36 00 02 3C D0 05 42 24                       li      $v0, arguments
.text:0035E96C 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E970 48 00 A2 AF                                   sw      $v0, 0x78+var_30($sp)
.text:0035E974 40 00 A0 AF                                   sw      $zero, 0x78+var_38($sp)
.text:0035E978 36 00 02 3C D0 05 42 24                       li      $v0, arguments
.text:0035E980 44 00 A2 AF                                   sw      $v0, 0x78+var_34($sp)
.text:0035E984 87 00 00 10                                   b       loc_35EBA4
.text:0035E988 00 00 00 00                                   nop
.text:0035E98C                                # ---------------------------------------------------------------------------
.text:0035E98C
.text:0035E98C                               loc_35E98C:                              # this
.text:0035E98C 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E990 E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035E994 00 00 00 00                                   nop
.text:0035E998 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035E99C 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035E9A0 7D 00 60 10                                   beqz    $v1, def_35E9BC  # jumptable 0035E9BC default case, cases 0,12,13,15
.text:0035E9A4 00 00 00 00                                   nop
.text:0035E9A8 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E9AC 36 00 02 3C C4 00 42 24                       li      $v0, jpt_35E9BC
.text:0035E9B4 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E9B8 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E9BC 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E9C0 00 00 00 00                                   nop
.text:0035E9C4                                # ---------------------------------------------------------------------------
.text:0035E9C4
.text:0035E9C4                               loc_35E9C4:                              # jumptable 0035E9BC case 6
.text:0035E9C4 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035E9C8 25 28 40 00                                   move    $a1, $v0
.text:0035E9CC 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035E9D0 B8 7E 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035E9D4 00 00 00 00                                   nop
.text:0035E9D8 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035E9DC 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035E9E0 44 00 40 10                                   beqz    $v0, def_35EA00  # jumptable 0035EA00 default case
.text:0035E9E4 00 00 00 00                                   nop
.text:0035E9E8 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035E9EC 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E9F0 36 00 02 3C 0C 01 42 24                       li      $v0, jpt_35EA00
.text:0035E9F8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E9FC 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035EA00 08 00 40 00                                   jr      $v0              # switch jump
.text:0035EA04 00 00 00 00                                   nop
.text:0035EA08                                # ---------------------------------------------------------------------------
.text:0035EA08
.text:0035EA08                               loc_35EA08:                              # jumptable 0035EA00 case 0
.text:0035EA08 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EA0C 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035EA10 38 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EA14 00 00 00 00                                   nop
.text:0035EA18                                # ---------------------------------------------------------------------------
.text:0035EA18
.text:0035EA18                               loc_35EA18:                              # jumptable 0035EA00 case 1
.text:0035EA18 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EA1C 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035EA20 34 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EA24 00 00 00 00                                   nop
.text:0035EA28                                # ---------------------------------------------------------------------------
.text:0035EA28
.text:0035EA28                               loc_35EA28:                              # jumptable 0035EA00 case 2
.text:0035EA28 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EA2C 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035EA30 30 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EA34 00 00 00 00                                   nop
.text:0035EA38                                # ---------------------------------------------------------------------------
.text:0035EA38
.text:0035EA38                               loc_35EA38:                              # jumptable 0035EA00 case 3
.text:0035EA38 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EA3C 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035EA40 2C 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EA44 00 00 00 00                                   nop
.text:0035EA48                                # ---------------------------------------------------------------------------
.text:0035EA48
.text:0035EA48                               loc_35EA48:                              # jumptable 0035EA00 case 4
.text:0035EA48 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EA4C 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035EA50 28 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EA54 00 00 00 00                                   nop
.text:0035EA58                                # ---------------------------------------------------------------------------
.text:0035EA58
.text:0035EA58                               loc_35EA58:                              # jumptable 0035EA00 case 5
.text:0035EA58 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EA5C 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035EA60 24 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EA64 00 00 00 00                                   nop
.text:0035EA68                                # ---------------------------------------------------------------------------
.text:0035EA68
.text:0035EA68                               loc_35EA68:                              # jumptable 0035EA00 case 6
.text:0035EA68 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EA6C 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035EA70 20 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EA74 00 00 00 00                                   nop
.text:0035EA78                                # ---------------------------------------------------------------------------
.text:0035EA78
.text:0035EA78                               loc_35EA78:                              # jumptable 0035EA00 case 7
.text:0035EA78 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EA7C 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035EA80 1C 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EA84 00 00 00 00                                   nop
.text:0035EA88                                # ---------------------------------------------------------------------------
.text:0035EA88
.text:0035EA88                               loc_35EA88:                              # jumptable 0035EA00 case 8
.text:0035EA88 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EA8C 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035EA90 18 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EA94 00 00 00 00                                   nop
.text:0035EA98                                # ---------------------------------------------------------------------------
.text:0035EA98
.text:0035EA98                               loc_35EA98:                              # jumptable 0035EA00 case 9
.text:0035EA98 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EA9C 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035EAA0 14 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EAA4 00 00 00 00                                   nop
.text:0035EAA8                                # ---------------------------------------------------------------------------
.text:0035EAA8
.text:0035EAA8                               loc_35EAA8:                              # jumptable 0035EA00 case 10
.text:0035EAA8 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EAAC 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035EAB0 10 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EAB4 00 00 00 00                                   nop
.text:0035EAB8                                # ---------------------------------------------------------------------------
.text:0035EAB8
.text:0035EAB8                               loc_35EAB8:                              # jumptable 0035EA00 case 11
.text:0035EAB8 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EABC 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035EAC0 0C 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EAC4 00 00 00 00                                   nop
.text:0035EAC8                                # ---------------------------------------------------------------------------
.text:0035EAC8
.text:0035EAC8                               loc_35EAC8:                              # jumptable 0035EA00 case 12
.text:0035EAC8 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EACC 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035EAD0 08 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EAD4 00 00 00 00                                   nop
.text:0035EAD8                                # ---------------------------------------------------------------------------
.text:0035EAD8
.text:0035EAD8                               loc_35EAD8:                              # jumptable 0035EA00 case 13
.text:0035EAD8 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EADC 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035EAE0 04 00 00 10                                   b       def_35EA00       # jumptable 0035EA00 default case
.text:0035EAE4 00 00 00 00                                   nop
.text:0035EAE8                                # ---------------------------------------------------------------------------
.text:0035EAE8
.text:0035EAE8                               loc_35EAE8:                              # jumptable 0035EA00 case 14
.text:0035EAE8 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EAEC 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035EAF0 00 00 00 00                                   nop
.text:0035EAF4
.text:0035EAF4                               def_35EA00:                              # jumptable 0035EA00 default case
.text:0035EAF4 40 00 A2 8F                                   lw      $v0, 0x78+var_38($sp)
.text:0035EAF8 01 00 42 24                                   addiu   $v0, 1
.text:0035EAFC 40 00 A2 AF                                   sw      $v0, 0x78+var_38($sp)
.text:0035EB00 25 00 00 10                                   b       def_35E9BC       # jumptable 0035E9BC default case, cases 0,12,13,15
.text:0035EB04 00 00 00 00                                   nop
.text:0035EB08                                # ---------------------------------------------------------------------------
.text:0035EB08
.text:0035EB08                               loc_35EB08:                              # jumptable 0035E9BC cases 1-5,7,8
.text:0035EB08 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EB0C 25 28 40 00                                   move    $a1, $v0
.text:0035EB10 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035EB14 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EB18 00 00 00 00                                   nop
.text:0035EB1C 1E 00 00 10                                   b       def_35E9BC       # jumptable 0035E9BC default case, cases 0,12,13,15
.text:0035EB20 00 00 00 00                                   nop
.text:0035EB24                                # ---------------------------------------------------------------------------
.text:0035EB24
.text:0035EB24                               loc_35EB24:                              # jumptable 0035E9BC cases 10,11,16,17
.text:0035EB24 36 00 02 3C A8 02 42 8C                       lw      $v0, GetScriptParamPointer
.text:0035EB2C 01 00 05 24                                   li      $a1, 1
.text:0035EB30 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035EB34 09 F8 40 00                                   jalr    $v0
.text:0035EB38 00 00 00 00                                   nop
.text:0035EB3C 25 18 40 00                                   move    $v1, $v0
.text:0035EB40 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EB44 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035EB48 13 00 00 10                                   b       def_35E9BC       # jumptable 0035E9BC default case, cases 0,12,13,15
.text:0035EB4C 00 00 00 00                                   nop
.text:0035EB50                                # ---------------------------------------------------------------------------
.text:0035EB50
.text:0035EB50                               loc_35EB50:                              # jumptable 0035E9BC cases 9,14
.text:0035EB50 36 00 02 3C C8 05 42 90                       lbu     $v0, currTextParam
.text:0035EB58 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035EB5C FF 00 64 30                                   andi    $a0, $v1, 0xFF
.text:0035EB60 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EB64 C8 05 64 A0                                   sb      $a0, currTextParam
.text:0035EB68 C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035EB6C 36 00 02 3C C8 04 42 24                       li      $v0, textParams
.text:0035EB74 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035EB78 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035EB7C 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035EB80 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)  # CRunningScript *
.text:0035EB84 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035EB88 00 00 00 00                                   nop
.text:0035EB8C 25 18 40 00                                   move    $v1, $v0
.text:0035EB90 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EB94 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035EB98
.text:0035EB98                               def_35E9BC:                              # jumptable 0035E9BC default case, cases 0,12,13,15
.text:0035EB98 44 00 A2 8F                                   lw      $v0, 0x78+var_34($sp)
.text:0035EB9C 04 00 42 24                                   addiu   $v0, 4
.text:0035EBA0 44 00 A2 AF                                   sw      $v0, 0x78+var_34($sp)
.text:0035EBA4
.text:0035EBA4                               loc_35EBA4:
.text:0035EBA4 44 00 A3 8F                                   lw      $v1, 0x78+var_34($sp)
.text:0035EBA8 48 00 A2 8F                                   lw      $v0, 0x78+var_30($sp)
.text:0035EBAC 77 FF 62 14                                   bne     $v1, $v0, loc_35E98C
.text:0035EBB0 00 00 00 00                                   nop
.text:0035EBB4 50 00 A2 8F                                   lw      $v0, 0x78+var_28($sp)
.text:0035EBB8 54 00 AC 8F                                   lw      $t4, 0x78+var_24($sp)
.text:0035EBBC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EBC0 D0 05 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035EBC4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EBC8 D0 05 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035EBCC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EBD0 D0 05 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035EBD4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EBD8 D0 05 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035EBDC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EBE0 D0 05 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035EBE4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EBE8 D0 05 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035EBEC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EBF0 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035EBF8 38 00 4A 8D                                   lw      $a6, (dword_360608 - 0x3605D0)($a6)
.text:0035EBFC 38 00 AA AF                                   sw      $a6, 0x78+var_40($sp)
.text:0035EC00 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035EC08 34 00 4A 8D                                   lw      $a6, (dword_360604 - 0x3605D0)($a6)
.text:0035EC0C 30 00 AA AF                                   sw      $a6, 0x78+var_48($sp)
.text:0035EC10 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035EC18 30 00 4A 8D                                   lw      $a6, (dword_360600 - 0x3605D0)($a6)
.text:0035EC1C 28 00 AA AF                                   sw      $a6, 0x78+var_50($sp)
.text:0035EC20 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035EC28 2C 00 4A 8D                                   lw      $a6, (dword_3605FC - 0x3605D0)($a6)
.text:0035EC2C 20 00 AA AF                                   sw      $a6, 0x78+var_58($sp)
.text:0035EC30 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035EC38 28 00 4A 8D                                   lw      $a6, (dword_3605F8 - 0x3605D0)($a6)
.text:0035EC3C 18 00 AA AF                                   sw      $a6, 0x78+var_60($sp)
.text:0035EC40 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035EC48 24 00 4A 8D                                   lw      $a6, (dword_3605F4 - 0x3605D0)($a6)
.text:0035EC4C 10 00 AA AF                                   sw      $a6, 0x78+var_68($sp)
.text:0035EC50 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035EC58 20 00 4A 8D                                   lw      $a6, (dword_3605F0 - 0x3605D0)($a6)
.text:0035EC5C 08 00 AA AF                                   sw      $a6, 0x78+var_70($sp)
.text:0035EC60 36 00 0A 3C D0 05 4A 25                       li      $a6, arguments
.text:0035EC68 1C 00 4A 8D                                   lw      $a6, (dword_3605EC - 0x3605D0)($a6)
.text:0035EC6C 00 00 AA AF                                   sw      $a6, 0x78+var_78($sp)
.text:0035EC70 18 00 2B 8D                                   lw      $a7, (dword_3605E8 - 0x3605D0)($a5)
.text:0035EC74 14 00 0A 8D                                   lw      $a6, (dword_3605E4 - 0x3605D0)($a4)
.text:0035EC78 10 00 E9 8C                                   lw      $a5, (dword_3605E0 - 0x3605D0)($a3)
.text:0035EC7C 0C 00 C8 8C                                   lw      $a4, (dword_3605DC - 0x3605D0)($a2)
.text:0035EC80 08 00 A7 8C                                   lw      $a3, (dword_3605D8 - 0x3605D0)($a1)
.text:0035EC84 04 00 86 8C                                   lw      $a2, (dword_3605D4 - 0x3605D0)($a0)
.text:0035EC88 D0 05 65 8C                                   lw      $a1, (arguments - 0x360000)($v1)
.text:0035EC8C 25 20 80 01                                   move    $a0, $t4
.text:0035EC90 09 F8 40 00                                   jalr    $v0
.text:0035EC94 00 00 00 00                                   nop
.text:0035EC98 4C 00 A2 AF                                   sw      $v0, 0x78+var_2C($sp)
.text:0035EC9C 4C 00 A5 8F                                   lw      $a1, 0x78+var_2C($sp)
.text:0035ECA0 60 00 A4 8F                                   lw      $a0, 0x78+var_18($sp)
.text:0035ECA4 7E 7E 0D 0C                                   jal     operator<<(CRunningScript &,ulong)
.text:0035ECA8 00 00 00 00                                   nop
.text:0035ECAC 25 10 00 00                                   move    $v0, $zero
.text:0035ECB0 78 00 BF DF                                   ld      $ra, 0x78+var_s0($sp)
.text:0035ECB4 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035ECB8 08 00 E0 03                                   jr      $ra
.text:0035ECBC 00 00 00 00                                   nop
.text:0035ECBC                                # End of function opcode_0AA8(CRunningScript *)
.text:0035ECBC
.text:0035ECC0
.text:0035ECC0                                # =============== S U B R O U T I N E =======================================
.text:0035ECC0
.text:0035ECC0
.text:0035ECC0                                # _DWORD __fastcall opcode_0AC6(CRunningScript *)
.text:0035ECC0                                               .globl opcode_0AC6(CRunningScript *)
.text:0035ECC0                               opcode_0AC6(CRunningScript *):
.text:0035ECC0
.text:0035ECC0                               var_20          = -0x20
.text:0035ECC0                               var_10          = -0x10
.text:0035ECC0                               var_s0          =  0
.text:0035ECC0                               var_s8          =  8
.text:0035ECC0
.text:0035ECC0 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035ECC4 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035ECC8 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035ECCC 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035ECD0 25 28 A0 03                                   move    $a1, $sp
.text:0035ECD4 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035ECD8 91 7E 0D 0C                                   jal     operator>>(CRunningScript &,int &)
.text:0035ECDC 00 00 00 00                                   nop
.text:0035ECE0 10 00 B0 8F                                   lw      $s0, 0x20+var_10($sp)
.text:0035ECE4 00 00 A2 8F                                   lw      $v0, 0x20+var_20($sp)
.text:0035ECE8 0A 00 41 04                                   bgez    $v0, loc_35ED14
.text:0035ECEC 00 00 00 00                                   nop
.text:0035ECF0 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)  # this
.text:0035ECF4 DA 7D 0D 0C                                   jal     CRunningScript::GetBasePointer(void)
.text:0035ECF8 00 00 00 00                                   nop
.text:0035ECFC 25 18 40 00                                   move    $v1, $v0
.text:0035ED00 00 00 A2 8F                                   lw      $v0, 0x20+var_20($sp)
.text:0035ED04 23 10 02 00                                   negu    $v0, $v0
.text:0035ED08 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035ED0C 05 00 00 10                                   b       loc_35ED24
.text:0035ED10 00 00 00 00                                   nop
.text:0035ED14                                # ---------------------------------------------------------------------------
.text:0035ED14
.text:0035ED14                               loc_35ED14:
.text:0035ED14 36 00 02 3C A8 01 42 8C                       lw      $v0, CTheScripts_ScriptSpace
.text:0035ED1C 00 00 A3 8F                                   lw      $v1, 0x20+var_20($sp)
.text:0035ED20 21 10 43 00                                   addu    $v0, $v1
.text:0035ED24
.text:0035ED24                               loc_35ED24:
.text:0035ED24 25 28 40 00                                   move    $a1, $v0
.text:0035ED28 25 20 00 02                                   move    $a0, $s0
.text:0035ED2C 6F 7F 0D 0C                                   jal     operator<<<uchar>(CRunningScript &,uchar *)
.text:0035ED30 00 00 00 00                                   nop
.text:0035ED34 25 10 00 00                                   move    $v0, $zero
.text:0035ED38 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035ED3C 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035ED40 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035ED44 08 00 E0 03                                   jr      $ra
.text:0035ED48 00 00 00 00                                   nop
.text:0035ED48                                # End of function opcode_0AC6(CRunningScript *)
.text:0035ED48
.text:0035ED4C
.text:0035ED4C                                # =============== S U B R O U T I N E =======================================
.text:0035ED4C
.text:0035ED4C
.text:0035ED4C                                # _DWORD __fastcall opcode_0AC7(CRunningScript *)
.text:0035ED4C                                               .globl opcode_0AC7(CRunningScript *)
.text:0035ED4C                               opcode_0AC7(CRunningScript *):
.text:0035ED4C
.text:0035ED4C                               var_10          = -0x10
.text:0035ED4C                               var_s0          =  0
.text:0035ED4C                               var_s8          =  8
.text:0035ED4C
.text:0035ED4C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035ED50 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035ED54 10 00 B0 FF                                   sd      $s0, 0x10+var_s0($sp)
.text:0035ED58 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035ED5C 00 00 B0 8F                                   lw      $s0, 0x10+var_10($sp)
.text:0035ED60 36 00 02 3C A8 02 42 8C                       lw      $v0, GetScriptParamPointer
.text:0035ED68 01 00 05 24                                   li      $a1, 1
.text:0035ED6C 00 00 A4 8F                                   lw      $a0, 0x10+var_10($sp)
.text:0035ED70 09 F8 40 00                                   jalr    $v0
.text:0035ED74 00 00 00 00                                   nop
.text:0035ED78 25 28 40 00                                   move    $a1, $v0
.text:0035ED7C 25 20 00 02                                   move    $a0, $s0
.text:0035ED80 82 7F 0D 0C                                   jal     operator<<<SCRIPT_VAR>(CRunningScript &,SCRIPT_VAR *)
.text:0035ED84 00 00 00 00                                   nop
.text:0035ED88 25 10 00 00                                   move    $v0, $zero
.text:0035ED8C 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035ED90 10 00 B0 DF                                   ld      $s0, 0x10+var_s0($sp)
.text:0035ED94 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035ED98 08 00 E0 03                                   jr      $ra
.text:0035ED9C 00 00 00 00                                   nop
.text:0035ED9C                                # End of function opcode_0AC7(CRunningScript *)
.text:0035ED9C
.text:0035EDA0
.text:0035EDA0                                # =============== S U B R O U T I N E =======================================
.text:0035EDA0
.text:0035EDA0
.text:0035EDA0                                # _DWORD __fastcall opcode_0AC8(CRunningScript *)
.text:0035EDA0                                               .globl opcode_0AC8(CRunningScript *)
.text:0035EDA0                               opcode_0AC8(CRunningScript *):
.text:0035EDA0
.text:0035EDA0                               var_28          = -0x28
.text:0035EDA0                               var_24          = -0x24
.text:0035EDA0                               var_18          = -0x18
.text:0035EDA0                               var_s0          =  0
.text:0035EDA0
.text:0035EDA0 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EDA4 28 00 BF FF                                   sd      $ra, 0x28+var_s0($sp)
.text:0035EDA8 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035EDAC 04 00 A2 27                                   addiu   $v0, $sp, 0x28+var_24
.text:0035EDB0 25 28 40 00                                   move    $a1, $v0
.text:0035EDB4 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035EDB8 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EDBC 00 00 00 00                                   nop
.text:0035EDC0 36 00 02 3C 64 01 42 8C                       lw      $v0, malloc
.text:0035EDC8 04 00 A3 8F                                   lw      $v1, 0x28+var_24($sp)
.text:0035EDCC 25 20 60 00                                   move    $a0, $v1
.text:0035EDD0 09 F8 40 00                                   jalr    $v0
.text:0035EDD4 00 00 00 00                                   nop
.text:0035EDD8 00 00 A2 AF                                   sw      $v0, 0x28+var_28($sp)
.text:0035EDDC 00 00 A5 8F                                   lw      $a1, 0x28+var_28($sp)
.text:0035EDE0 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035EDE4 95 7F 0D 0C                                   jal     operator<<<void>(CRunningScript &,void *)
.text:0035EDE8 00 00 00 00                                   nop
.text:0035EDEC 36 00 02 3C C4 01 42 8C                       lw      $v0, SetScriptCondResult
.text:0035EDF4 00 00 A3 8F                                   lw      $v1, 0x28+var_28($sp)
.text:0035EDF8 2B 18 03 00                                   sltu    $v1, $zero, $v1
.text:0035EDFC FF 00 63 30                                   andi    $v1, 0xFF
.text:0035EE00 25 28 60 00                                   move    $a1, $v1
.text:0035EE04 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035EE08 09 F8 40 00                                   jalr    $v0
.text:0035EE0C 00 00 00 00                                   nop
.text:0035EE10 25 10 00 00                                   move    $v0, $zero
.text:0035EE14 28 00 BF DF                                   ld      $ra, 0x28+var_s0($sp)
.text:0035EE18 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035EE1C 08 00 E0 03                                   jr      $ra
.text:0035EE20 00 00 00 00                                   nop
.text:0035EE20                                # End of function opcode_0AC8(CRunningScript *)
.text:0035EE20
.text:0035EE24
.text:0035EE24                                # =============== S U B R O U T I N E =======================================
.text:0035EE24
.text:0035EE24
.text:0035EE24                                # _DWORD __fastcall opcode_0AC9(CRunningScript *)
.text:0035EE24                                               .globl opcode_0AC9(CRunningScript *)
.text:0035EE24                               opcode_0AC9(CRunningScript *):
.text:0035EE24
.text:0035EE24                               var_28          = -0x28
.text:0035EE24                               var_18          = -0x18
.text:0035EE24                               var_s0          =  0
.text:0035EE24
.text:0035EE24 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EE28 28 00 BF FF                                   sd      $ra, 0x28+var_s0($sp)
.text:0035EE2C 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035EE30 25 28 A0 03                                   move    $a1, $sp
.text:0035EE34 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035EE38 E0 7E 0D 0C                                   jal     operator>>(CRunningScript &,void *&)
.text:0035EE3C 00 00 00 00                                   nop
.text:0035EE40 36 00 02 3C 68 01 42 8C                       lw      $v0, free
.text:0035EE48 00 00 A3 8F                                   lw      $v1, 0x28+var_28($sp)
.text:0035EE4C 25 20 60 00                                   move    $a0, $v1
.text:0035EE50 09 F8 40 00                                   jalr    $v0
.text:0035EE54 00 00 00 00                                   nop
.text:0035EE58 25 10 00 00                                   move    $v0, $zero
.text:0035EE5C 28 00 BF DF                                   ld      $ra, 0x28+var_s0($sp)
.text:0035EE60 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035EE64 08 00 E0 03                                   jr      $ra
.text:0035EE68 00 00 00 00                                   nop
.text:0035EE68                                # End of function opcode_0AC9(CRunningScript *)
.text:0035EE68
.text:0035EE6C
.text:0035EE6C                                # =============== S U B R O U T I N E =======================================
.text:0035EE6C
.text:0035EE6C
.text:0035EE6C                                # _DWORD __fastcall opcode_0ACA(CRunningScript *)
.text:0035EE6C                                               .globl opcode_0ACA(CRunningScript *)
.text:0035EE6C                               opcode_0ACA(CRunningScript *):
.text:0035EE6C
.text:0035EE6C                               var_10          = -0x10
.text:0035EE6C                               var_s0          =  0
.text:0035EE6C                               var_s8          =  8
.text:0035EE6C
.text:0035EE6C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EE70 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EE74 10 00 B0 FF                                   sd      $s0, 0x10+var_s0($sp)
.text:0035EE78 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035EE7C 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035EE80 C8 01 50 8C                                   lw      $s0, PrintHelp
.text:0035EE84 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035EE88 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035EE8C 00 00 A4 8F                                   lw      $a0, 0x10+var_10($sp)  # CRunningScript *
.text:0035EE90 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035EE94 00 00 00 00                                   nop
.text:0035EE98 25 38 00 00                                   move    $a3, $zero
.text:0035EE9C 25 30 00 00                                   move    $a2, $zero
.text:0035EEA0 25 28 00 00                                   move    $a1, $zero
.text:0035EEA4 25 20 40 00                                   move    $a0, $v0
.text:0035EEA8 09 F8 00 02                                   jalr    $s0
.text:0035EEAC 00 00 00 00                                   nop
.text:0035EEB0 25 10 00 00                                   move    $v0, $zero
.text:0035EEB4 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035EEB8 10 00 B0 DF                                   ld      $s0, 0x10+var_s0($sp)
.text:0035EEBC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EEC0 08 00 E0 03                                   jr      $ra
.text:0035EEC4 00 00 00 00                                   nop
.text:0035EEC4                                # End of function opcode_0ACA(CRunningScript *)
.text:0035EEC4
.text:0035EEC8
.text:0035EEC8                                # =============== S U B R O U T I N E =======================================
.text:0035EEC8
.text:0035EEC8
.text:0035EEC8                                # _DWORD __fastcall opcode_0ACB(CRunningScript *)
.text:0035EEC8                                               .globl opcode_0ACB(CRunningScript *)
.text:0035EEC8                               opcode_0ACB(CRunningScript *):
.text:0035EEC8
.text:0035EEC8                               var_28          = -0x28
.text:0035EEC8                               var_24          = -0x24
.text:0035EEC8                               var_20          = -0x20
.text:0035EEC8                               var_18          = -0x18
.text:0035EEC8                               var_s0          =  0
.text:0035EEC8
.text:0035EEC8 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EECC 28 00 BF FF                                   sd      $ra, 0x28+var_s0($sp)
.text:0035EED0 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035EED4 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035EED8 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035EEDC 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)  # CRunningScript *
.text:0035EEE0 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035EEE4 00 00 00 00                                   nop
.text:0035EEE8 00 00 A2 AF                                   sw      $v0, 0x28+var_28($sp)
.text:0035EEEC 04 00 A2 27                                   addiu   $v0, $sp, 0x28+var_24
.text:0035EEF0 25 28 40 00                                   move    $a1, $v0
.text:0035EEF4 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035EEF8 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EEFC 00 00 00 00                                   nop
.text:0035EF00 08 00 A3 27                                   addiu   $v1, $sp, 0x28+var_20
.text:0035EF04 25 28 60 00                                   move    $a1, $v1
.text:0035EF08 25 20 40 00                                   move    $a0, $v0
.text:0035EF0C 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EF10 00 00 00 00                                   nop
.text:0035EF14 36 00 02 3C 80 01 42 8C                       lw      $v0, strcpy
.text:0035EF1C 00 00 A5 8F                                   lw      $a1, 0x28+var_28($sp)
.text:0035EF20 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EF24 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EF28 09 F8 40 00                                   jalr    $v0
.text:0035EF2C 00 00 00 00                                   nop
.text:0035EF30 36 00 02 3C CC 01 42 8C                       lw      $v0, PrintBig
.text:0035EF38 04 00 A3 8F                                   lw      $v1, 0x28+var_24($sp)
.text:0035EF3C 25 20 60 00                                   move    $a0, $v1
.text:0035EF40 08 00 A3 8F                                   lw      $v1, 0x28+var_20($sp)
.text:0035EF44 FF FF 63 30                                   andi    $v1, 0xFFFF
.text:0035EF48 FF FF 63 24                                   addiu   $v1, -1
.text:0035EF4C FF FF 63 30                                   andi    $v1, 0xFFFF
.text:0035EF50 25 30 60 00                                   move    $a2, $v1
.text:0035EF54 25 28 80 00                                   move    $a1, $a0
.text:0035EF58 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EF5C 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EF60 09 F8 40 00                                   jalr    $v0
.text:0035EF64 00 00 00 00                                   nop
.text:0035EF68 25 10 00 00                                   move    $v0, $zero
.text:0035EF6C 28 00 BF DF                                   ld      $ra, 0x28+var_s0($sp)
.text:0035EF70 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035EF74 08 00 E0 03                                   jr      $ra
.text:0035EF78 00 00 00 00                                   nop
.text:0035EF78                                # End of function opcode_0ACB(CRunningScript *)
.text:0035EF78
.text:0035EF7C
.text:0035EF7C                                # =============== S U B R O U T I N E =======================================
.text:0035EF7C
.text:0035EF7C
.text:0035EF7C                                # _DWORD __fastcall opcode_0ACC(CRunningScript *)
.text:0035EF7C                                               .globl opcode_0ACC(CRunningScript *)
.text:0035EF7C                               opcode_0ACC(CRunningScript *):
.text:0035EF7C
.text:0035EF7C                               var_28          = -0x28
.text:0035EF7C                               var_24          = -0x24
.text:0035EF7C                               var_18          = -0x18
.text:0035EF7C                               var_s0          =  0
.text:0035EF7C
.text:0035EF7C D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EF80 28 00 BF FF                                   sd      $ra, 0x28+var_s0($sp)
.text:0035EF84 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035EF88 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035EF8C 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035EF90 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)  # CRunningScript *
.text:0035EF94 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035EF98 00 00 00 00                                   nop
.text:0035EF9C 00 00 A2 AF                                   sw      $v0, 0x28+var_28($sp)
.text:0035EFA0 04 00 A2 27                                   addiu   $v0, $sp, 0x28+var_24
.text:0035EFA4 25 28 40 00                                   move    $a1, $v0
.text:0035EFA8 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035EFAC 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EFB0 00 00 00 00                                   nop
.text:0035EFB4 36 00 02 3C 80 01 42 8C                       lw      $v0, strcpy
.text:0035EFBC 00 00 A5 8F                                   lw      $a1, 0x28+var_28($sp)
.text:0035EFC0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EFC4 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EFC8 09 F8 40 00                                   jalr    $v0
.text:0035EFCC 00 00 00 00                                   nop
.text:0035EFD0 36 00 02 3C D0 01 42 8C                       lw      $v0, Print
.text:0035EFD8 04 00 A3 8F                                   lw      $v1, 0x28+var_24($sp)
.text:0035EFDC 25 38 00 00                                   move    $a3, $zero
.text:0035EFE0 25 30 00 00                                   move    $a2, $zero
.text:0035EFE4 25 28 60 00                                   move    $a1, $v1
.text:0035EFE8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EFEC 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EFF0 09 F8 40 00                                   jalr    $v0
.text:0035EFF4 00 00 00 00                                   nop
.text:0035EFF8 25 10 00 00                                   move    $v0, $zero
.text:0035EFFC 28 00 BF DF                                   ld      $ra, 0x28+var_s0($sp)
.text:0035F000 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035F004 08 00 E0 03                                   jr      $ra
.text:0035F008 00 00 00 00                                   nop
.text:0035F008                                # End of function opcode_0ACC(CRunningScript *)
.text:0035F008
.text:0035F00C
.text:0035F00C                                # =============== S U B R O U T I N E =======================================
.text:0035F00C
.text:0035F00C
.text:0035F00C                                # _DWORD __fastcall opcode_0ACD(CRunningScript *)
.text:0035F00C                                               .globl opcode_0ACD(CRunningScript *)
.text:0035F00C                               opcode_0ACD(CRunningScript *):
.text:0035F00C
.text:0035F00C                               var_28          = -0x28
.text:0035F00C                               var_24          = -0x24
.text:0035F00C                               var_18          = -0x18
.text:0035F00C                               var_s0          =  0
.text:0035F00C
.text:0035F00C D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035F010 28 00 BF FF                                   sd      $ra, 0x28+var_s0($sp)
.text:0035F014 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035F018 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035F01C 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035F020 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)  # CRunningScript *
.text:0035F024 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035F028 00 00 00 00                                   nop
.text:0035F02C 00 00 A2 AF                                   sw      $v0, 0x28+var_28($sp)
.text:0035F030 04 00 A2 27                                   addiu   $v0, $sp, 0x28+var_24
.text:0035F034 25 28 40 00                                   move    $a1, $v0
.text:0035F038 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035F03C 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F040 00 00 00 00                                   nop
.text:0035F044 36 00 02 3C 80 01 42 8C                       lw      $v0, strcpy
.text:0035F04C 00 00 A5 8F                                   lw      $a1, 0x28+var_28($sp)
.text:0035F050 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035F054 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035F058 09 F8 40 00                                   jalr    $v0
.text:0035F05C 00 00 00 00                                   nop
.text:0035F060 36 00 02 3C D4 01 42 8C                       lw      $v0, PrintNow
.text:0035F068 04 00 A3 8F                                   lw      $v1, 0x28+var_24($sp)
.text:0035F06C 25 38 00 00                                   move    $a3, $zero
.text:0035F070 25 30 00 00                                   move    $a2, $zero
.text:0035F074 25 28 60 00                                   move    $a1, $v1
.text:0035F078 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035F07C 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035F080 09 F8 40 00                                   jalr    $v0
.text:0035F084 00 00 00 00                                   nop
.text:0035F088 25 10 00 00                                   move    $v0, $zero
.text:0035F08C 28 00 BF DF                                   ld      $ra, 0x28+var_s0($sp)
.text:0035F090 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035F094 08 00 E0 03                                   jr      $ra
.text:0035F098 00 00 00 00                                   nop
.text:0035F098                                # End of function opcode_0ACD(CRunningScript *)
.text:0035F098
.text:0035F09C
.text:0035F09C                                # =============== S U B R O U T I N E =======================================
.text:0035F09C
.text:0035F09C
.text:0035F09C                                # _DWORD __fastcall opcode_0ACE(CRunningScript *)
.text:0035F09C                                               .globl opcode_0ACE(CRunningScript *)
.text:0035F09C                               opcode_0ACE(CRunningScript *):
.text:0035F09C
.text:0035F09C                               var_98          = -0x98
.text:0035F09C                               var_18          = -0x18
.text:0035F09C                               var_s0          =  0
.text:0035F09C
.text:0035F09C E0 FE BD 27                                   addiu   $sp, -0x120
.text:0035F0A0 18 01 BF FF                                   sd      $ra, 0x118+var_s0($sp)
.text:0035F0A4 00 01 A4 AF                                   sw      $a0, 0x118+var_18($sp)
.text:0035F0A8 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035F0AC 25 28 A0 03                                   move    $a1, $sp         # char *
.text:0035F0B0 00 01 A4 8F                                   lw      $a0, 0x118+var_18($sp)  # CRunningScript *
.text:0035F0B4 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035F0B8 00 00 00 00                                   nop
.text:0035F0BC 80 00 A2 27                                   addiu   $v0, $sp, 0x118+var_98
.text:0035F0C0 25 38 A0 03                                   move    $a3, $sp         # char *
.text:0035F0C4 80 00 06 24                                   li      $a2, 0x80        # unsigned int
.text:0035F0C8 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035F0CC 00 01 A4 8F                                   lw      $a0, 0x118+var_18($sp)  # CRunningScript *
.text:0035F0D0 ED 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035F0D4 00 00 00 00                                   nop
.text:0035F0D8 36 00 02 3C C8 01 42 8C                       lw      $v0, PrintHelp
.text:0035F0E0 80 00 A3 27                                   addiu   $v1, $sp, 0x118+var_98
.text:0035F0E4 25 38 00 00                                   move    $a3, $zero
.text:0035F0E8 25 30 00 00                                   move    $a2, $zero
.text:0035F0EC 25 28 00 00                                   move    $a1, $zero
.text:0035F0F0 25 20 60 00                                   move    $a0, $v1
.text:0035F0F4 09 F8 40 00                                   jalr    $v0
.text:0035F0F8 00 00 00 00                                   nop
.text:0035F0FC 00 01 A4 8F                                   lw      $a0, 0x118+var_18($sp)  # CRunningScript *
.text:0035F100 2F 7E 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035F104 00 00 00 00                                   nop
.text:0035F108 25 10 00 00                                   move    $v0, $zero
.text:0035F10C 18 01 BF DF                                   ld      $ra, 0x118+var_s0($sp)
.text:0035F110 20 01 BD 27                                   addiu   $sp, 0x120
.text:0035F114 08 00 E0 03                                   jr      $ra
.text:0035F118 00 00 00 00                                   nop
.text:0035F118                                # End of function opcode_0ACE(CRunningScript *)
.text:0035F118
.text:0035F11C
.text:0035F11C                                # =============== S U B R O U T I N E =======================================
.text:0035F11C
.text:0035F11C
.text:0035F11C                                # _DWORD __fastcall opcode_0ACF(CRunningScript *)
.text:0035F11C                                               .globl opcode_0ACF(CRunningScript *)
.text:0035F11C                               opcode_0ACF(CRunningScript *):
.text:0035F11C
.text:0035F11C                               var_A8          = -0xA8
.text:0035F11C                               var_28          = -0x28
.text:0035F11C                               var_24          = -0x24
.text:0035F11C                               var_18          = -0x18
.text:0035F11C                               var_s0          =  0
.text:0035F11C
.text:0035F11C D0 FE BD 27                                   addiu   $sp, -0x130
.text:0035F120 28 01 BF FF                                   sd      $ra, 0x128+var_s0($sp)
.text:0035F124 10 01 A4 AF                                   sw      $a0, 0x128+var_18($sp)
.text:0035F128 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035F12C 25 28 A0 03                                   move    $a1, $sp         # char *
.text:0035F130 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)  # CRunningScript *
.text:0035F134 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035F138 00 00 00 00                                   nop
.text:0035F13C 00 01 A2 27                                   addiu   $v0, $sp, 0x128+var_28
.text:0035F140 25 28 40 00                                   move    $a1, $v0
.text:0035F144 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)
.text:0035F148 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F14C 00 00 00 00                                   nop
.text:0035F150 04 01 A3 27                                   addiu   $v1, $sp, 0x128+var_24
.text:0035F154 25 28 60 00                                   move    $a1, $v1
.text:0035F158 25 20 40 00                                   move    $a0, $v0
.text:0035F15C 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F160 00 00 00 00                                   nop
.text:0035F164 80 00 A2 27                                   addiu   $v0, $sp, 0x128+var_A8
.text:0035F168 25 38 A0 03                                   move    $a3, $sp         # char *
.text:0035F16C 80 00 06 24                                   li      $a2, 0x80        # unsigned int
.text:0035F170 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035F174 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)  # CRunningScript *
.text:0035F178 ED 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035F17C 00 00 00 00                                   nop
.text:0035F180 36 00 02 3C 80 01 42 8C                       lw      $v0, strcpy
.text:0035F188 80 00 A3 27                                   addiu   $v1, $sp, 0x128+var_A8
.text:0035F18C 25 28 60 00                                   move    $a1, $v1
.text:0035F190 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035F194 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035F198 09 F8 40 00                                   jalr    $v0
.text:0035F19C 00 00 00 00                                   nop
.text:0035F1A0 36 00 02 3C CC 01 42 8C                       lw      $v0, PrintBig
.text:0035F1A8 00 01 A3 8F                                   lw      $v1, 0x128+var_28($sp)
.text:0035F1AC 25 20 60 00                                   move    $a0, $v1
.text:0035F1B0 04 01 A3 8F                                   lw      $v1, 0x128+var_24($sp)
.text:0035F1B4 FF FF 63 30                                   andi    $v1, 0xFFFF
.text:0035F1B8 FF FF 63 24                                   addiu   $v1, -1
.text:0035F1BC FF FF 63 30                                   andi    $v1, 0xFFFF
.text:0035F1C0 25 30 60 00                                   move    $a2, $v1
.text:0035F1C4 25 28 80 00                                   move    $a1, $a0
.text:0035F1C8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035F1CC 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035F1D0 09 F8 40 00                                   jalr    $v0
.text:0035F1D4 00 00 00 00                                   nop
.text:0035F1D8 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)  # CRunningScript *
.text:0035F1DC 2F 7E 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035F1E0 00 00 00 00                                   nop
.text:0035F1E4 25 10 00 00                                   move    $v0, $zero
.text:0035F1E8 28 01 BF DF                                   ld      $ra, 0x128+var_s0($sp)
.text:0035F1EC 30 01 BD 27                                   addiu   $sp, 0x130
.text:0035F1F0 08 00 E0 03                                   jr      $ra
.text:0035F1F4 00 00 00 00                                   nop
.text:0035F1F4                                # End of function opcode_0ACF(CRunningScript *)
.text:0035F1F4
.text:0035F1F8
.text:0035F1F8                                # =============== S U B R O U T I N E =======================================
.text:0035F1F8
.text:0035F1F8
.text:0035F1F8                                # _DWORD __fastcall opcode_0AD0(CRunningScript *)
.text:0035F1F8                                               .globl opcode_0AD0(CRunningScript *)
.text:0035F1F8                               opcode_0AD0(CRunningScript *):
.text:0035F1F8
.text:0035F1F8                               var_A8          = -0xA8
.text:0035F1F8                               var_28          = -0x28
.text:0035F1F8                               var_18          = -0x18
.text:0035F1F8                               var_s0          =  0
.text:0035F1F8
.text:0035F1F8 D0 FE BD 27                                   addiu   $sp, -0x130
.text:0035F1FC 28 01 BF FF                                   sd      $ra, 0x128+var_s0($sp)
.text:0035F200 10 01 A4 AF                                   sw      $a0, 0x128+var_18($sp)
.text:0035F204 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035F208 25 28 A0 03                                   move    $a1, $sp         # char *
.text:0035F20C 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)  # CRunningScript *
.text:0035F210 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035F214 00 00 00 00                                   nop
.text:0035F218 00 01 A2 27                                   addiu   $v0, $sp, 0x128+var_28
.text:0035F21C 25 28 40 00                                   move    $a1, $v0
.text:0035F220 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)
.text:0035F224 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F228 00 00 00 00                                   nop
.text:0035F22C 80 00 A2 27                                   addiu   $v0, $sp, 0x128+var_A8
.text:0035F230 25 38 A0 03                                   move    $a3, $sp         # char *
.text:0035F234 80 00 06 24                                   li      $a2, 0x80        # unsigned int
.text:0035F238 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035F23C 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)  # CRunningScript *
.text:0035F240 ED 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035F244 00 00 00 00                                   nop
.text:0035F248 36 00 02 3C 80 01 42 8C                       lw      $v0, strcpy
.text:0035F250 80 00 A3 27                                   addiu   $v1, $sp, 0x128+var_A8
.text:0035F254 25 28 60 00                                   move    $a1, $v1
.text:0035F258 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035F25C 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035F260 09 F8 40 00                                   jalr    $v0
.text:0035F264 00 00 00 00                                   nop
.text:0035F268 36 00 02 3C D0 01 42 8C                       lw      $v0, Print
.text:0035F270 00 01 A3 8F                                   lw      $v1, 0x128+var_28($sp)
.text:0035F274 25 38 00 00                                   move    $a3, $zero
.text:0035F278 25 30 00 00                                   move    $a2, $zero
.text:0035F27C 25 28 60 00                                   move    $a1, $v1
.text:0035F280 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035F284 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035F288 09 F8 40 00                                   jalr    $v0
.text:0035F28C 00 00 00 00                                   nop
.text:0035F290 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)  # CRunningScript *
.text:0035F294 2F 7E 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035F298 00 00 00 00                                   nop
.text:0035F29C 25 10 00 00                                   move    $v0, $zero
.text:0035F2A0 28 01 BF DF                                   ld      $ra, 0x128+var_s0($sp)
.text:0035F2A4 30 01 BD 27                                   addiu   $sp, 0x130
.text:0035F2A8 08 00 E0 03                                   jr      $ra
.text:0035F2AC 00 00 00 00                                   nop
.text:0035F2AC                                # End of function opcode_0AD0(CRunningScript *)
.text:0035F2AC
.text:0035F2B0
.text:0035F2B0                                # =============== S U B R O U T I N E =======================================
.text:0035F2B0
.text:0035F2B0
.text:0035F2B0                                # _DWORD __fastcall opcode_0AD1(CRunningScript *)
.text:0035F2B0                                               .globl opcode_0AD1(CRunningScript *)
.text:0035F2B0                               opcode_0AD1(CRunningScript *):
.text:0035F2B0
.text:0035F2B0                               var_A8          = -0xA8
.text:0035F2B0                               var_28          = -0x28
.text:0035F2B0                               var_18          = -0x18
.text:0035F2B0                               var_s0          =  0
.text:0035F2B0
.text:0035F2B0 D0 FE BD 27                                   addiu   $sp, -0x130
.text:0035F2B4 28 01 BF FF                                   sd      $ra, 0x128+var_s0($sp)
.text:0035F2B8 10 01 A4 AF                                   sw      $a0, 0x128+var_18($sp)
.text:0035F2BC 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035F2C0 25 28 A0 03                                   move    $a1, $sp         # char *
.text:0035F2C4 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)  # CRunningScript *
.text:0035F2C8 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035F2CC 00 00 00 00                                   nop
.text:0035F2D0 00 01 A2 27                                   addiu   $v0, $sp, 0x128+var_28
.text:0035F2D4 25 28 40 00                                   move    $a1, $v0
.text:0035F2D8 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)
.text:0035F2DC 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F2E0 00 00 00 00                                   nop
.text:0035F2E4 80 00 A2 27                                   addiu   $v0, $sp, 0x128+var_A8
.text:0035F2E8 25 38 A0 03                                   move    $a3, $sp         # char *
.text:0035F2EC 80 00 06 24                                   li      $a2, 0x80        # unsigned int
.text:0035F2F0 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035F2F4 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)  # CRunningScript *
.text:0035F2F8 ED 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035F2FC 00 00 00 00                                   nop
.text:0035F300 36 00 02 3C 80 01 42 8C                       lw      $v0, strcpy
.text:0035F308 80 00 A3 27                                   addiu   $v1, $sp, 0x128+var_A8
.text:0035F30C 25 28 60 00                                   move    $a1, $v1
.text:0035F310 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035F314 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035F318 09 F8 40 00                                   jalr    $v0
.text:0035F31C 00 00 00 00                                   nop
.text:0035F320 36 00 02 3C D4 01 42 8C                       lw      $v0, PrintNow
.text:0035F328 00 01 A3 8F                                   lw      $v1, 0x128+var_28($sp)
.text:0035F32C 25 38 00 00                                   move    $a3, $zero
.text:0035F330 25 30 00 00                                   move    $a2, $zero
.text:0035F334 25 28 60 00                                   move    $a1, $v1
.text:0035F338 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035F33C 18 02 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035F340 09 F8 40 00                                   jalr    $v0
.text:0035F344 00 00 00 00                                   nop
.text:0035F348 10 01 A4 8F                                   lw      $a0, 0x128+var_18($sp)  # CRunningScript *
.text:0035F34C 2F 7E 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035F350 00 00 00 00                                   nop
.text:0035F354 25 10 00 00                                   move    $v0, $zero
.text:0035F358 28 01 BF DF                                   ld      $ra, 0x128+var_s0($sp)
.text:0035F35C 30 01 BD 27                                   addiu   $sp, 0x130
.text:0035F360 08 00 E0 03                                   jr      $ra
.text:0035F364 00 00 00 00                                   nop
.text:0035F364                                # End of function opcode_0AD1(CRunningScript *)
.text:0035F364
.text:0035F368
.text:0035F368                                # =============== S U B R O U T I N E =======================================
.text:0035F368
.text:0035F368
.text:0035F368                                # _DWORD __fastcall opcode_0AD3(CRunningScript *)
.text:0035F368                                               .globl opcode_0AD3(CRunningScript *)
.text:0035F368                               opcode_0AD3(CRunningScript *):
.text:0035F368
.text:0035F368                               var_28          = -0x28
.text:0035F368                               var_18          = -0x18
.text:0035F368                               var_s0          =  0
.text:0035F368
.text:0035F368 50 FF BD 27                                   addiu   $sp, -0xB0
.text:0035F36C A8 00 BF FF                                   sd      $ra, 0xA8+var_s0($sp)
.text:0035F370 90 00 A4 AF                                   sw      $a0, 0xA8+var_18($sp)
.text:0035F374 90 00 A4 8F                                   lw      $a0, 0xA8+var_18($sp)  # this
.text:0035F378 E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035F37C 00 00 00 00                                   nop
.text:0035F380 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F384 0B 00 40 10                                   beqz    $v0, loc_35F3B4
.text:0035F388 00 00 00 00                                   nop
.text:0035F38C 90 00 A4 8F                                   lw      $a0, 0xA8+var_18($sp)  # this
.text:0035F390 E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035F394 00 00 00 00                                   nop
.text:0035F398 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F39C 09 00 42 2C                                   sltiu   $v0, 9
.text:0035F3A0 04 00 40 10                                   beqz    $v0, loc_35F3B4
.text:0035F3A4 00 00 00 00                                   nop
.text:0035F3A8 01 00 02 24                                   li      $v0, 1
.text:0035F3AC 02 00 00 10                                   b       loc_35F3B8
.text:0035F3B0 00 00 00 00                                   nop
.text:0035F3B4                                # ---------------------------------------------------------------------------
.text:0035F3B4
.text:0035F3B4                               loc_35F3B4:
.text:0035F3B4 25 10 00 00                                   move    $v0, $zero
.text:0035F3B8
.text:0035F3B8                               loc_35F3B8:
.text:0035F3B8 08 00 40 10                                   beqz    $v0, loc_35F3DC
.text:0035F3BC 00 00 00 00                                   nop
.text:0035F3C0 80 00 A2 27                                   addiu   $v0, $sp, 0xA8+var_28
.text:0035F3C4 25 28 40 00                                   move    $a1, $v0
.text:0035F3C8 90 00 A4 8F                                   lw      $a0, 0xA8+var_18($sp)
.text:0035F3CC CC 7E 0D 0C                                   jal     operator>>(CRunningScript &,char *&)
.text:0035F3D0 00 00 00 00                                   nop
.text:0035F3D4 08 00 00 10                                   b       loc_35F3F8
.text:0035F3D8 00 00 00 00                                   nop
.text:0035F3DC                                # ---------------------------------------------------------------------------
.text:0035F3DC
.text:0035F3DC                               loc_35F3DC:
.text:0035F3DC 36 00 02 3C A8 02 42 8C                       lw      $v0, GetScriptParamPointer
.text:0035F3E4 01 00 05 24                                   li      $a1, 1
.text:0035F3E8 90 00 A4 8F                                   lw      $a0, 0xA8+var_18($sp)
.text:0035F3EC 09 F8 40 00                                   jalr    $v0
.text:0035F3F0 00 00 00 00                                   nop
.text:0035F3F4 80 00 A2 AF                                   sw      $v0, 0xA8+var_28($sp)
.text:0035F3F8
.text:0035F3F8                               loc_35F3F8:                              # unsigned __int8
.text:0035F3F8 80 00 06 24                                   li      $a2, 0x80
.text:0035F3FC 25 28 A0 03                                   move    $a1, $sp         # char *
.text:0035F400 90 00 A4 8F                                   lw      $a0, 0xA8+var_18($sp)  # CRunningScript *
.text:0035F404 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035F408 00 00 00 00                                   nop
.text:0035F40C 80 00 A2 8F                                   lw      $v0, 0xA8+var_28($sp)
.text:0035F410 25 38 A0 03                                   move    $a3, $sp         # char *
.text:0035F414 FF FF 06 24                                   li      $a2, 0xFFFFFFFF  # unsigned int
.text:0035F418 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035F41C 90 00 A4 8F                                   lw      $a0, 0xA8+var_18($sp)  # CRunningScript *
.text:0035F420 ED 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035F424 00 00 00 00                                   nop
.text:0035F428 90 00 A4 8F                                   lw      $a0, 0xA8+var_18($sp)  # CRunningScript *
.text:0035F42C 2F 7E 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035F430 00 00 00 00                                   nop
.text:0035F434 25 10 00 00                                   move    $v0, $zero
.text:0035F438 A8 00 BF DF                                   ld      $ra, 0xA8+var_s0($sp)
.text:0035F43C B0 00 BD 27                                   addiu   $sp, 0xB0
.text:0035F440 08 00 E0 03                                   jr      $ra
.text:0035F444 00 00 00 00                                   nop
.text:0035F444                                # End of function opcode_0AD3(CRunningScript *)
.text:0035F444
.text:0035F448
.text:0035F448                                # =============== S U B R O U T I N E =======================================
.text:0035F448
.text:0035F448
.text:0035F448                                # _DWORD __fastcall opcode_0AD5(CRunningScript *)
.text:0035F448                                               .globl opcode_0AD5(CRunningScript *)
.text:0035F448                               opcode_0AD5(CRunningScript *):
.text:0035F448
.text:0035F448                               var_20          = -0x20
.text:0035F448                               var_1C          = -0x1C
.text:0035F448                               var_18          = -0x18
.text:0035F448                               var_10          = -0x10
.text:0035F448                               var_s0          =  0
.text:0035F448                               var_s8          =  8
.text:0035F448
.text:0035F448 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035F44C 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035F450 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035F454 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035F458 25 28 A0 03                                   move    $a1, $sp
.text:0035F45C 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035F460 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F464 00 00 00 00                                   nop
.text:0035F468 04 00 A3 27                                   addiu   $v1, $sp, 0x20+var_1C
.text:0035F46C 25 28 60 00                                   move    $a1, $v1
.text:0035F470 25 20 40 00                                   move    $a0, $v0
.text:0035F474 91 7E 0D 0C                                   jal     operator>>(CRunningScript &,int &)
.text:0035F478 00 00 00 00                                   nop
.text:0035F47C 08 00 A3 27                                   addiu   $v1, $sp, 0x20+var_18
.text:0035F480 25 28 60 00                                   move    $a1, $v1
.text:0035F484 25 20 40 00                                   move    $a0, $v0
.text:0035F488 91 7E 0D 0C                                   jal     operator>>(CRunningScript &,int &)
.text:0035F48C 00 00 00 00                                   nop
.text:0035F490 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035F494 C4 01 50 8C                                   lw      $s0, SetScriptCondResult
.text:0035F498 36 00 02 3C 54 01 42 8C                       lw      $v0, rw_seek
.text:0035F4A0 00 00 A3 8F                                   lw      $v1, 0x20+var_20($sp)
.text:0035F4A4 25 38 60 00                                   move    $a3, $v1
.text:0035F4A8 04 00 A3 8F                                   lw      $v1, 0x20+var_1C($sp)
.text:0035F4AC 08 00 A4 8F                                   lw      $a0, 0x20+var_18($sp)
.text:0035F4B0 25 30 80 00                                   move    $a2, $a0
.text:0035F4B4 25 28 60 00                                   move    $a1, $v1
.text:0035F4B8 25 20 E0 00                                   move    $a0, $a3
.text:0035F4BC 09 F8 40 00                                   jalr    $v0
.text:0035F4C0 00 00 00 00                                   nop
.text:0035F4C4 01 00 42 2C                                   sltiu   $v0, 1
.text:0035F4C8 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035F4CC 25 28 40 00                                   move    $a1, $v0
.text:0035F4D0 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035F4D4 09 F8 00 02                                   jalr    $s0
.text:0035F4D8 00 00 00 00                                   nop
.text:0035F4DC 25 10 00 00                                   move    $v0, $zero
.text:0035F4E0 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035F4E4 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035F4E8 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035F4EC 08 00 E0 03                                   jr      $ra
.text:0035F4F0 00 00 00 00                                   nop
.text:0035F4F0                                # End of function opcode_0AD5(CRunningScript *)
.text:0035F4F0
.text:0035F4F4
.text:0035F4F4                                # =============== S U B R O U T I N E =======================================
.text:0035F4F4
.text:0035F4F4
.text:0035F4F4                                # _DWORD __fastcall opcode_0ADE(CRunningScript *)
.text:0035F4F4                                               .globl opcode_0ADE(CRunningScript *)
.text:0035F4F4                               opcode_0ADE(CRunningScript *):
.text:0035F4F4
.text:0035F4F4                               var_28          = -0x28
.text:0035F4F4                               var_18          = -0x18
.text:0035F4F4                               var_s0          =  0
.text:0035F4F4                               var_s8          =  8
.text:0035F4F4                               var_s10         =  0x10
.text:0035F4F4
.text:0035F4F4 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035F4F8 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035F4FC 30 00 B1 FF                                   sd      $s1, 0x28+var_s8($sp)
.text:0035F500 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035F504 10 00 A4 AF                                   sw      $a0, 0x28+var_18($sp)
.text:0035F508 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035F50C 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035F510 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)  # CRunningScript *
.text:0035F514 72 72 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035F518 00 00 00 00                                   nop
.text:0035F51C 00 00 A2 AF                                   sw      $v0, 0x28+var_28($sp)
.text:0035F520 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)  # this
.text:0035F524 E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035F528 00 00 00 00                                   nop
.text:0035F52C 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F530 0B 00 40 10                                   beqz    $v0, loc_35F560
.text:0035F534 00 00 00 00                                   nop
.text:0035F538 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)  # this
.text:0035F53C E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035F540 00 00 00 00                                   nop
.text:0035F544 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F548 09 00 42 2C                                   sltiu   $v0, 9
.text:0035F54C 04 00 40 10                                   beqz    $v0, loc_35F560
.text:0035F550 00 00 00 00                                   nop
.text:0035F554 01 00 02 24                                   li      $v0, 1
.text:0035F558 02 00 00 10                                   b       loc_35F564
.text:0035F55C 00 00 00 00                                   nop
.text:0035F560                                # ---------------------------------------------------------------------------
.text:0035F560
.text:0035F560                               loc_35F560:
.text:0035F560 25 10 00 00                                   move    $v0, $zero
.text:0035F564
.text:0035F564                               loc_35F564:
.text:0035F564 10 00 40 10                                   beqz    $v0, loc_35F5A8
.text:0035F568 00 00 00 00                                   nop
.text:0035F56C 10 00 B0 8F                                   lw      $s0, 0x28+var_18($sp)
.text:0035F570 36 00 02 3C FC 01 42 8C                       lw      $v0, CText_Get
.text:0035F578 36 00 03 3C 00 02 63 8C                       lw      $v1, gameTexts
.text:0035F580 00 00 A5 8F                                   lw      $a1, 0x28+var_28($sp)
.text:0035F584 25 20 60 00                                   move    $a0, $v1
.text:0035F588 09 F8 40 00                                   jalr    $v0
.text:0035F58C 00 00 00 00                                   nop
.text:0035F590 25 28 40 00                                   move    $a1, $v0
.text:0035F594 25 20 00 02                                   move    $a0, $s0
.text:0035F598 A8 7F 0D 0C                                   jal     operator<<<char const>(CRunningScript &,char const *)
.text:0035F59C 00 00 00 00                                   nop
.text:0035F5A0 16 00 00 10                                   b       loc_35F5FC
.text:0035F5A4 00 00 00 00                                   nop
.text:0035F5A8                                # ---------------------------------------------------------------------------
.text:0035F5A8
.text:0035F5A8                               loc_35F5A8:
.text:0035F5A8 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035F5AC 80 01 50 8C                                   lw      $s0, strcpy
.text:0035F5B0 36 00 02 3C A8 02 42 8C                       lw      $v0, GetScriptParamPointer
.text:0035F5B8 01 00 05 24                                   li      $a1, 1
.text:0035F5BC 10 00 A4 8F                                   lw      $a0, 0x28+var_18($sp)
.text:0035F5C0 09 F8 40 00                                   jalr    $v0
.text:0035F5C4 00 00 00 00                                   nop
.text:0035F5C8 25 88 40 00                                   move    $s1, $v0
.text:0035F5CC 36 00 02 3C FC 01 42 8C                       lw      $v0, CText_Get
.text:0035F5D4 36 00 03 3C 00 02 63 8C                       lw      $v1, gameTexts
.text:0035F5DC 00 00 A5 8F                                   lw      $a1, 0x28+var_28($sp)
.text:0035F5E0 25 20 60 00                                   move    $a0, $v1
.text:0035F5E4 09 F8 40 00                                   jalr    $v0
.text:0035F5E8 00 00 00 00                                   nop
.text:0035F5EC 25 28 40 00                                   move    $a1, $v0
.text:0035F5F0 25 20 20 02                                   move    $a0, $s1
.text:0035F5F4 09 F8 00 02                                   jalr    $s0
.text:0035F5F8 00 00 00 00                                   nop
.text:0035F5FC
.text:0035F5FC                               loc_35F5FC:
.text:0035F5FC 25 10 00 00                                   move    $v0, $zero
.text:0035F600 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035F604 30 00 B1 DF                                   ld      $s1, 0x28+var_s8($sp)
.text:0035F608 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035F60C 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035F610 08 00 E0 03                                   jr      $ra
.text:0035F614 00 00 00 00                                   nop
.text:0035F614                                # End of function opcode_0ADE(CRunningScript *)
.text:0035F614
.text:0035F618
.text:0035F618                                # =============== S U B R O U T I N E =======================================
.text:0035F618
.text:0035F618
.text:0035F618                                # _DWORD __fastcall opcode_0AEA(CRunningScript *)
.text:0035F618                                               .globl opcode_0AEA(CRunningScript *)
.text:0035F618                               opcode_0AEA(CRunningScript *):
.text:0035F618
.text:0035F618                               var_20          = -0x20
.text:0035F618                               var_10          = -0x10
.text:0035F618                               var_s0          =  0
.text:0035F618                               var_s8          =  8
.text:0035F618
.text:0035F618 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035F61C 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035F620 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035F624 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035F628 25 28 A0 03                                   move    $a1, $sp
.text:0035F62C 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035F630 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F634 00 00 00 00                                   nop
.text:0035F638 10 00 B0 8F                                   lw      $s0, 0x20+var_10($sp)
.text:0035F63C 36 00 02 3C F0 01 42 8C                       lw      $v0, GetPedHandle
.text:0035F644 36 00 03 3C D8 01 63 8C                       lw      $v1, pedPool
.text:0035F64C 00 00 A4 8F                                   lw      $a0, 0x20+var_20($sp)
.text:0035F650 25 28 80 00                                   move    $a1, $a0
.text:0035F654 25 20 60 00                                   move    $a0, $v1
.text:0035F658 09 F8 40 00                                   jalr    $v0
.text:0035F65C 00 00 00 00                                   nop
.text:0035F660 25 28 40 00                                   move    $a1, $v0
.text:0035F664 25 20 00 02                                   move    $a0, $s0
.text:0035F668 A5 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035F66C 00 00 00 00                                   nop
.text:0035F670 25 10 00 00                                   move    $v0, $zero
.text:0035F674 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035F678 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035F67C 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035F680 08 00 E0 03                                   jr      $ra
.text:0035F684 00 00 00 00                                   nop
.text:0035F684                                # End of function opcode_0AEA(CRunningScript *)
.text:0035F684
.text:0035F688
.text:0035F688                                # =============== S U B R O U T I N E =======================================
.text:0035F688
.text:0035F688
.text:0035F688                                # _DWORD __fastcall opcode_0AEB(CRunningScript *)
.text:0035F688                                               .globl opcode_0AEB(CRunningScript *)
.text:0035F688                               opcode_0AEB(CRunningScript *):
.text:0035F688
.text:0035F688                               var_20          = -0x20
.text:0035F688                               var_10          = -0x10
.text:0035F688                               var_s0          =  0
.text:0035F688                               var_s8          =  8
.text:0035F688
.text:0035F688 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035F68C 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035F690 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035F694 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035F698 25 28 A0 03                                   move    $a1, $sp
.text:0035F69C 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035F6A0 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F6A4 00 00 00 00                                   nop
.text:0035F6A8 10 00 B0 8F                                   lw      $s0, 0x20+var_10($sp)
.text:0035F6AC 36 00 02 3C F4 01 42 8C                       lw      $v0, GetVehHandle
.text:0035F6B4 36 00 03 3C DC 01 63 8C                       lw      $v1, vehPool
.text:0035F6BC 00 00 A4 8F                                   lw      $a0, 0x20+var_20($sp)
.text:0035F6C0 25 28 80 00                                   move    $a1, $a0
.text:0035F6C4 25 20 60 00                                   move    $a0, $v1
.text:0035F6C8 09 F8 40 00                                   jalr    $v0
.text:0035F6CC 00 00 00 00                                   nop
.text:0035F6D0 25 28 40 00                                   move    $a1, $v0
.text:0035F6D4 25 20 00 02                                   move    $a0, $s0
.text:0035F6D8 A5 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035F6DC 00 00 00 00                                   nop
.text:0035F6E0 25 10 00 00                                   move    $v0, $zero
.text:0035F6E4 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035F6E8 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035F6EC 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035F6F0 08 00 E0 03                                   jr      $ra
.text:0035F6F4 00 00 00 00                                   nop
.text:0035F6F4                                # End of function opcode_0AEB(CRunningScript *)
.text:0035F6F4
.text:0035F6F8
.text:0035F6F8                                # =============== S U B R O U T I N E =======================================
.text:0035F6F8
.text:0035F6F8
.text:0035F6F8                                # _DWORD __fastcall opcode_0AEC(CRunningScript *)
.text:0035F6F8                                               .globl opcode_0AEC(CRunningScript *)
.text:0035F6F8                               opcode_0AEC(CRunningScript *):
.text:0035F6F8
.text:0035F6F8                               var_20          = -0x20
.text:0035F6F8                               var_10          = -0x10
.text:0035F6F8                               var_s0          =  0
.text:0035F6F8                               var_s8          =  8
.text:0035F6F8
.text:0035F6F8 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035F6FC 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035F700 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035F704 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035F708 25 28 A0 03                                   move    $a1, $sp
.text:0035F70C 10 00 A4 8F                                   lw      $a0, 0x20+var_10($sp)
.text:0035F710 6A 7E 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F714 00 00 00 00                                   nop
.text:0035F718 10 00 B0 8F                                   lw      $s0, 0x20+var_10($sp)
.text:0035F71C 36 00 02 3C F8 01 42 8C                       lw      $v0, GetObjHandle
.text:0035F724 36 00 03 3C E0 01 63 8C                       lw      $v1, objPool
.text:0035F72C 00 00 A4 8F                                   lw      $a0, 0x20+var_20($sp)
.text:0035F730 25 28 80 00                                   move    $a1, $a0
.text:0035F734 25 20 60 00                                   move    $a0, $v1
.text:0035F738 09 F8 40 00                                   jalr    $v0
.text:0035F73C 00 00 00 00                                   nop
.text:0035F740 25 28 40 00                                   move    $a1, $v0
.text:0035F744 25 20 00 02                                   move    $a0, $s0
.text:0035F748 A5 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035F74C 00 00 00 00                                   nop
.text:0035F750 25 10 00 00                                   move    $v0, $zero
.text:0035F754 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035F758 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035F75C 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035F760 08 00 E0 03                                   jr      $ra
.text:0035F764 00 00 00 00                                   nop
.text:0035F764                                # End of function opcode_0AEC(CRunningScript *)
.text:0035F764
.text:0035F768
.text:0035F768                                # =============== S U B R O U T I N E =======================================
.text:0035F768
.text:0035F768
.text:0035F768                                # _DWORD CRunningScript::GetBasePointer(CRunningScript *__hidden this)
.text:0035F768                                               .globl CRunningScript::GetBasePointer(void)  # weak
.text:0035F768                               CRunningScript::GetBasePointer(void):
.text:0035F768
.text:0035F768                               var_10          = -0x10
.text:0035F768
.text:0035F768 F0 FF BD 27                                   addiu   $sp, -0x10
.text:0035F76C 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035F770 00 00 A2 8F                                   lw      $v0, 0x10+var_10($sp)
.text:0035F774 10 00 42 8C                                   lw      $v0, 0x10($v0)
.text:0035F778 10 00 BD 27                                   addiu   $sp, 0x10
.text:0035F77C 08 00 E0 03                                   jr      $ra
.text:0035F780 00 00 00 00                                   nop
.text:0035F780                                # End of function CRunningScript::GetBasePointer(void)
.text:0035F780
.text:0035F784
.text:0035F784                                # =============== S U B R O U T I N E =======================================
.text:0035F784
.text:0035F784
.text:0035F784                                # _DWORD CRunningScript::GetBytePointer(CRunningScript *__hidden this)
.text:0035F784                                               .globl CRunningScript::GetBytePointer(void)  # weak
.text:0035F784                               CRunningScript::GetBytePointer(void):
.text:0035F784
.text:0035F784                               var_10          = -0x10
.text:0035F784
.text:0035F784 F0 FF BD 27                                   addiu   $sp, -0x10
.text:0035F788 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035F78C 00 00 A2 8F                                   lw      $v0, 0x10+var_10($sp)
.text:0035F790 14 00 42 8C                                   lw      $v0, 0x14($v0)
.text:0035F794 10 00 BD 27                                   addiu   $sp, 0x10
.text:0035F798 08 00 E0 03                                   jr      $ra
.text:0035F79C 00 00 00 00                                   nop
.text:0035F79C                                # End of function CRunningScript::GetBytePointer(void)
.text:0035F79C
.text:0035F7A0
.text:0035F7A0                                # =============== S U B R O U T I N E =======================================
.text:0035F7A0
.text:0035F7A0
.text:0035F7A0                                # _DWORD __fastcall CRunningScript::SetIp(CRunningScript *__hidden this, void *)
.text:0035F7A0                                               .globl CRunningScript::SetIp(void *)  # weak
.text:0035F7A0                               CRunningScript::SetIp(void *):
.text:0035F7A0
.text:0035F7A0                               var_10          = -0x10
.text:0035F7A0                               var_C           = -0xC
.text:0035F7A0
.text:0035F7A0 F0 FF BD 27                                   addiu   $sp, -0x10
.text:0035F7A4 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035F7A8 04 00 A5 AF                                   sw      $a1, 0x10+var_C($sp)
.text:0035F7AC 00 00 A2 8F                                   lw      $v0, 0x10+var_10($sp)
.text:0035F7B0 04 00 A3 8F                                   lw      $v1, 0x10+var_C($sp)
.text:0035F7B4 14 00 43 AC                                   sw      $v1, 0x14($v0)
.text:0035F7B8 00 00 00 00                                   nop
.text:0035F7BC 10 00 BD 27                                   addiu   $sp, 0x10
.text:0035F7C0 08 00 E0 03                                   jr      $ra
.text:0035F7C4 00 00 00 00                                   nop
.text:0035F7C4                                # End of function CRunningScript::SetIp(void *)
.text:0035F7C4
.text:0035F7C8
.text:0035F7C8                                # =============== S U B R O U T I N E =======================================
.text:0035F7C8
.text:0035F7C8
.text:0035F7C8                                # _DWORD CRunningScript::GetConditionResult(CRunningScript *__hidden this)
.text:0035F7C8                                               .globl CRunningScript::GetConditionResult(void)  # weak
.text:0035F7C8                               CRunningScript::GetConditionResult(void):
.text:0035F7C8
.text:0035F7C8                               var_10          = -0x10
.text:0035F7C8
.text:0035F7C8 F0 FF BD 27                                   addiu   $sp, -0x10
.text:0035F7CC 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035F7D0 00 00 A2 8F                                   lw      $v0, 0x10+var_10($sp)
.text:0035F7D4 C5 00 42 90                                   lbu     $v0, 0xC5($v0)
.text:0035F7D8 2B 10 02 00                                   sltu    $v0, $zero, $v0
.text:0035F7DC FF 00 42 30                                   andi    $v0, 0xFF
.text:0035F7E0 10 00 BD 27                                   addiu   $sp, 0x10
.text:0035F7E4 08 00 E0 03                                   jr      $ra
.text:0035F7E8 00 00 00 00                                   nop
.text:0035F7E8                                # End of function CRunningScript::GetConditionResult(void)
.text:0035F7E8
.text:0035F7EC
.text:0035F7EC                                # =============== S U B R O U T I N E =======================================
.text:0035F7EC
.text:0035F7EC
.text:0035F7EC                                # _DWORD CRunningScript::ReadDataByte(CRunningScript *__hidden this)
.text:0035F7EC                                               .globl CRunningScript::ReadDataByte(void)  # weak
.text:0035F7EC                               CRunningScript::ReadDataByte(void):
.text:0035F7EC
.text:0035F7EC                               var_20          = -0x20
.text:0035F7EC                               var_10          = -0x10
.text:0035F7EC
.text:0035F7EC E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F7F0 10 00 A4 AF                                   sw      $a0, 0x20+var_10($sp)
.text:0035F7F4 10 00 A2 8F                                   lw      $v0, 0x20+var_10($sp)
.text:0035F7F8 14 00 42 8C                                   lw      $v0, 0x14($v0)
.text:0035F7FC 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F800 00 00 A2 A3                                   sb      $v0, 0x20+var_20($sp)
.text:0035F804 10 00 A2 8F                                   lw      $v0, 0x20+var_10($sp)
.text:0035F808 14 00 42 8C                                   lw      $v0, 0x14($v0)
.text:0035F80C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035F810 10 00 A2 8F                                   lw      $v0, 0x20+var_10($sp)
.text:0035F814 14 00 43 AC                                   sw      $v1, 0x14($v0)
.text:0035F818 00 00 A2 83                                   lb      $v0, 0x20+var_20($sp)
.text:0035F81C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F820 08 00 E0 03                                   jr      $ra
.text:0035F824 00 00 00 00                                   nop
.text:0035F824                                # End of function CRunningScript::ReadDataByte(void)
.text:0035F824
.text:0035F828
.text:0035F828                                # =============== S U B R O U T I N E =======================================
.text:0035F828
.text:0035F828
.text:0035F828                                # _DWORD __fastcall CRunningScript::PushStack(CRunningScript *__hidden this, unsigned __int8 *)
.text:0035F828                                               .globl CRunningScript::PushStack(unsigned char *)  # weak
.text:0035F828                               CRunningScript::PushStack(unsigned char *):
.text:0035F828
.text:0035F828                               var_10          = -0x10
.text:0035F828                               var_C           = -0xC
.text:0035F828
.text:0035F828 F0 FF BD 27                                   addiu   $sp, -0x10
.text:0035F82C 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035F830 04 00 A5 AF                                   sw      $a1, 0x10+var_C($sp)
.text:0035F834 04 00 A3 8F                                   lw      $v1, 0x10+var_C($sp)
.text:0035F838 00 00 A2 8F                                   lw      $v0, 0x10+var_10($sp)
.text:0035F83C 38 00 42 94                                   lhu     $v0, 0x38($v0)
.text:0035F840 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035F844 FF FF 85 30                                   andi    $a1, $a0, 0xFFFF
.text:0035F848 00 00 A4 8F                                   lw      $a0, 0x10+var_10($sp)
.text:0035F84C 38 00 85 A4                                   sh      $a1, 0x38($a0)
.text:0035F850 00 00 A4 8F                                   lw      $a0, 0x10+var_10($sp)
.text:0035F854 06 00 42 24                                   addiu   $v0, 6
.text:0035F858 80 10 02 00                                   sll     $v0, 2
.text:0035F85C 21 10 82 00                                   addu    $v0, $a0, $v0
.text:0035F860 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035F864 00 00 00 00                                   nop
.text:0035F868 10 00 BD 27                                   addiu   $sp, 0x10
.text:0035F86C 08 00 E0 03                                   jr      $ra
.text:0035F870 00 00 00 00                                   nop
.text:0035F870                                # End of function CRunningScript::PushStack(uchar *)
.text:0035F870
.text:0035F874
.text:0035F874                                # =============== S U B R O U T I N E =======================================
.text:0035F874
.text:0035F874
.text:0035F874                                # _DWORD CRunningScript::PopStack(CRunningScript *__hidden this)
.text:0035F874                                               .globl CRunningScript::PopStack(void)  # weak
.text:0035F874                               CRunningScript::PopStack(void):
.text:0035F874
.text:0035F874                               var_10          = -0x10
.text:0035F874
.text:0035F874 F0 FF BD 27                                   addiu   $sp, -0x10
.text:0035F878 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035F87C 00 00 A2 8F                                   lw      $v0, 0x10+var_10($sp)
.text:0035F880 38 00 42 94                                   lhu     $v0, 0x38($v0)
.text:0035F884 FF FF 42 24                                   addiu   $v0, -1
.text:0035F888 FF FF 43 30                                   andi    $v1, $v0, 0xFFFF
.text:0035F88C 00 00 A2 8F                                   lw      $v0, 0x10+var_10($sp)
.text:0035F890 38 00 43 A4                                   sh      $v1, 0x38($v0)
.text:0035F894 00 00 A2 8F                                   lw      $v0, 0x10+var_10($sp)
.text:0035F898 38 00 42 94                                   lhu     $v0, 0x38($v0)
.text:0035F89C 00 00 A3 8F                                   lw      $v1, 0x10+var_10($sp)
.text:0035F8A0 06 00 42 24                                   addiu   $v0, 6
.text:0035F8A4 80 10 02 00                                   sll     $v0, 2
.text:0035F8A8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035F8AC 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035F8B0 10 00 BD 27                                   addiu   $sp, 0x10
.text:0035F8B4 08 00 E0 03                                   jr      $ra
.text:0035F8B8 00 00 00 00                                   nop
.text:0035F8B8                                # End of function CRunningScript::PopStack(void)
.text:0035F8B8
.text:0035F8BC
.text:0035F8BC                                # =============== S U B R O U T I N E =======================================
.text:0035F8BC
.text:0035F8BC
.text:0035F8BC                                # _DWORD __fastcall SkipUnusedParameters(CRunningScript *)
.text:0035F8BC                                               .globl SkipUnusedParameters(CRunningScript *)  # weak
.text:0035F8BC                               SkipUnusedParameters(CRunningScript *):
.text:0035F8BC
.text:0035F8BC                               var_18          = -0x18
.text:0035F8BC                               var_s0          =  0
.text:0035F8BC
.text:0035F8BC E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F8C0 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035F8C4 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035F8C8 07 00 00 10                                   b       loc_35F8E8
.text:0035F8CC 00 00 00 00                                   nop
.text:0035F8D0                                # ---------------------------------------------------------------------------
.text:0035F8D0
.text:0035F8D0                               loc_35F8D0:
.text:0035F8D0 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035F8D8 01 00 05 24                                   li      $a1, 1
.text:0035F8DC 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035F8E0 09 F8 40 00                                   jalr    $v0
.text:0035F8E4 00 00 00 00                                   nop
.text:0035F8E8
.text:0035F8E8                               loc_35F8E8:                              # this
.text:0035F8E8 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035F8EC E1 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035F8F0 00 00 00 00                                   nop
.text:0035F8F4 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F8F8 2B 10 02 00                                   sltu    $v0, $zero, $v0
.text:0035F8FC FF 00 42 30                                   andi    $v0, 0xFF
.text:0035F900 F3 FF 40 14                                   bnez    $v0, loc_35F8D0
.text:0035F904 00 00 00 00                                   nop
.text:0035F908 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)  # this
.text:0035F90C FB 7D 0D 0C                                   jal     CRunningScript::ReadDataByte(void)
.text:0035F910 00 00 00 00                                   nop
.text:0035F914 00 00 00 00                                   nop
.text:0035F918 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035F91C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F920 08 00 E0 03                                   jr      $ra
.text:0035F924 00 00 00 00                                   nop
.text:0035F924                                # End of function SkipUnusedParameters(CRunningScript *)
.text:0035F924
.text:0035F928
.text:0035F928                                # =============== S U B R O U T I N E =======================================
.text:0035F928
.text:0035F928
.text:0035F928                                # _DWORD __fastcall ThreadJump(CRunningScript *, int)
.text:0035F928                                               .globl ThreadJump(CRunningScript *, int)  # weak
.text:0035F928                               ThreadJump(CRunningScript *, int):
.text:0035F928
.text:0035F928                               var_10          = -0x10
.text:0035F928                               var_C           = -0xC
.text:0035F928                               var_s0          =  0
.text:0035F928                               var_s8          =  8
.text:0035F928
.text:0035F928 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F92C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F930 10 00 B0 FF                                   sd      $s0, 0x10+var_s0($sp)
.text:0035F934 00 00 A4 AF                                   sw      $a0, 0x10+var_10($sp)
.text:0035F938 04 00 A5 AF                                   sw      $a1, 0x10+var_C($sp)
.text:0035F93C 00 00 B0 8F                                   lw      $s0, 0x10+var_10($sp)
.text:0035F940 04 00 A2 8F                                   lw      $v0, 0x10+var_C($sp)
.text:0035F944 0A 00 41 04                                   bgez    $v0, loc_35F970
.text:0035F948 00 00 00 00                                   nop
.text:0035F94C 00 00 A4 8F                                   lw      $a0, 0x10+var_10($sp)  # this
.text:0035F950 DA 7D 0D 0C                                   jal     CRunningScript::GetBasePointer(void)
.text:0035F954 00 00 00 00                                   nop
.text:0035F958 25 18 40 00                                   move    $v1, $v0
.text:0035F95C 04 00 A2 8F                                   lw      $v0, 0x10+var_C($sp)
.text:0035F960 23 10 02 00                                   negu    $v0, $v0
.text:0035F964 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035F968 05 00 00 10                                   b       loc_35F980
.text:0035F96C 00 00 00 00                                   nop
.text:0035F970                                # ---------------------------------------------------------------------------
.text:0035F970
.text:0035F970                               loc_35F970:
.text:0035F970 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035F974 A8 01 43 8C                                   lw      $v1, CTheScripts_ScriptSpace
.text:0035F978 04 00 A2 8F                                   lw      $v0, 0x10+var_C($sp)
.text:0035F97C 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035F980
.text:0035F980                               loc_35F980:                              # void *
.text:0035F980 25 28 40 00                                   move    $a1, $v0
.text:0035F984 25 20 00 02                                   move    $a0, $s0         # this
.text:0035F988 E8 7D 0D 0C                                   jal     CRunningScript::SetIp(void *)
.text:0035F98C 00 00 00 00                                   nop
.text:0035F990 00 00 00 00                                   nop
.text:0035F994 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F998 10 00 B0 DF                                   ld      $s0, 0x10+var_s0($sp)
.text:0035F99C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F9A0 08 00 E0 03                                   jr      $ra
.text:0035F9A4 00 00 00 00                                   nop
.text:0035F9A4                                # End of function ThreadJump(CRunningScript *,int)
.text:0035F9A4
.text:0035F9A8
.text:0035F9A8                                # =============== S U B R O U T I N E =======================================
.text:0035F9A8
.text:0035F9A8
.text:0035F9A8                                               .globl operator>>(CRunningScript &, unsigned long &)  # weak
.text:0035F9A8                               operator>>(CRunningScript &, unsigned long &):
.text:0035F9A8
.text:0035F9A8                               var_18          = -0x18
.text:0035F9A8                               var_14          = -0x14
.text:0035F9A8                               var_s0          =  0
.text:0035F9A8
.text:0035F9A8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F9AC 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035F9B0 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035F9B4 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035F9B8 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035F9C0 01 00 05 24                                   li      $a1, 1
.text:0035F9C4 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035F9C8 09 F8 40 00                                   jalr    $v0
.text:0035F9CC 00 00 00 00                                   nop
.text:0035F9D0 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035F9D8 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035F9DC 04 00 A2 8F                                   lw      $v0, 0x18+var_14($sp)
.text:0035F9E0 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035F9E4 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035F9E8 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035F9EC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F9F0 08 00 E0 03                                   jr      $ra
.text:0035F9F4 00 00 00 00                                   nop
.text:0035F9F4                                # End of function operator>>(CRunningScript &,ulong &)
.text:0035F9F4
.text:0035F9F8
.text:0035F9F8                                # =============== S U B R O U T I N E =======================================
.text:0035F9F8
.text:0035F9F8
.text:0035F9F8                                               .globl operator<<(CRunningScript &, unsigned long)  # weak
.text:0035F9F8                               operator<<(CRunningScript &, unsigned long):
.text:0035F9F8
.text:0035F9F8                               var_18          = -0x18
.text:0035F9F8                               var_14          = -0x14
.text:0035F9F8                               var_s0          =  0
.text:0035F9F8
.text:0035F9F8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F9FC 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FA00 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FA04 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FA08 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FA10 04 00 A3 8F                                   lw      $v1, 0x18+var_14($sp)
.text:0035FA14 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FA18 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035FA20 01 00 05 24                                   li      $a1, 1
.text:0035FA24 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FA28 09 F8 40 00                                   jalr    $v0
.text:0035FA2C 00 00 00 00                                   nop
.text:0035FA30 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FA34 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FA38 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FA3C 08 00 E0 03                                   jr      $ra
.text:0035FA40 00 00 00 00                                   nop
.text:0035FA40                                # End of function operator<<(CRunningScript &,ulong)
.text:0035FA40
.text:0035FA44
.text:0035FA44                                # =============== S U B R O U T I N E =======================================
.text:0035FA44
.text:0035FA44
.text:0035FA44                                               .globl operator>>(CRunningScript &, int &)  # weak
.text:0035FA44                               operator>>(CRunningScript &, int &):
.text:0035FA44
.text:0035FA44                               var_18          = -0x18
.text:0035FA44                               var_14          = -0x14
.text:0035FA44                               var_s0          =  0
.text:0035FA44
.text:0035FA44 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FA48 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FA4C 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FA50 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FA54 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035FA5C 01 00 05 24                                   li      $a1, 1
.text:0035FA60 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FA64 09 F8 40 00                                   jalr    $v0
.text:0035FA68 00 00 00 00                                   nop
.text:0035FA6C 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FA74 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035FA78 04 00 A2 8F                                   lw      $v0, 0x18+var_14($sp)
.text:0035FA7C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FA80 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FA84 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FA88 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FA8C 08 00 E0 03                                   jr      $ra
.text:0035FA90 00 00 00 00                                   nop
.text:0035FA90                                # End of function operator>>(CRunningScript &,int &)
.text:0035FA90
.text:0035FA94
.text:0035FA94                                # =============== S U B R O U T I N E =======================================
.text:0035FA94
.text:0035FA94
.text:0035FA94                                               .globl operator<<(CRunningScript &, int)  # weak
.text:0035FA94                               operator<<(CRunningScript &, int):
.text:0035FA94
.text:0035FA94                               var_18          = -0x18
.text:0035FA94                               var_14          = -0x14
.text:0035FA94                               var_s0          =  0
.text:0035FA94
.text:0035FA94 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FA98 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FA9C 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FAA0 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FAA4 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FAAC 04 00 A3 8F                                   lw      $v1, 0x18+var_14($sp)
.text:0035FAB0 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FAB4 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035FABC 01 00 05 24                                   li      $a1, 1
.text:0035FAC0 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FAC4 09 F8 40 00                                   jalr    $v0
.text:0035FAC8 00 00 00 00                                   nop
.text:0035FACC 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FAD0 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FAD4 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FAD8 08 00 E0 03                                   jr      $ra
.text:0035FADC 00 00 00 00                                   nop
.text:0035FADC                                # End of function operator<<(CRunningScript &,int)
.text:0035FADC
.text:0035FAE0
.text:0035FAE0                                # =============== S U B R O U T I N E =======================================
.text:0035FAE0
.text:0035FAE0
.text:0035FAE0                                               .globl operator>>(CRunningScript &, float &)  # weak
.text:0035FAE0                               operator>>(CRunningScript &, float &):
.text:0035FAE0
.text:0035FAE0                               var_18          = -0x18
.text:0035FAE0                               var_14          = -0x14
.text:0035FAE0                               var_s0          =  0
.text:0035FAE0
.text:0035FAE0 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FAE4 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FAE8 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FAEC 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FAF0 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035FAF8 01 00 05 24                                   li      $a1, 1
.text:0035FAFC 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FB00 09 F8 40 00                                   jalr    $v0
.text:0035FB04 00 00 00 00                                   nop
.text:0035FB08 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FB10 00 00 40 C4                                   lwc1    $f0, 0($v0)
.text:0035FB14 04 00 A2 8F                                   lw      $v0, 0x18+var_14($sp)
.text:0035FB18 00 00 40 E4                                   swc1    $f0, 0($v0)
.text:0035FB1C 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FB20 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FB24 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FB28 08 00 E0 03                                   jr      $ra
.text:0035FB2C 00 00 00 00                                   nop
.text:0035FB2C                                # End of function operator>>(CRunningScript &,float &)
.text:0035FB2C
.text:0035FB30
.text:0035FB30                                # =============== S U B R O U T I N E =======================================
.text:0035FB30
.text:0035FB30
.text:0035FB30                                               .globl operator>>(CRunningScript &, char *&)  # weak
.text:0035FB30                               operator>>(CRunningScript &, char *&):
.text:0035FB30
.text:0035FB30                               var_18          = -0x18
.text:0035FB30                               var_14          = -0x14
.text:0035FB30                               var_s0          =  0
.text:0035FB30
.text:0035FB30 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FB34 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FB38 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FB3C 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FB40 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035FB48 01 00 05 24                                   li      $a1, 1
.text:0035FB4C 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FB50 09 F8 40 00                                   jalr    $v0
.text:0035FB54 00 00 00 00                                   nop
.text:0035FB58 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FB60 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035FB64 04 00 A2 8F                                   lw      $v0, 0x18+var_14($sp)
.text:0035FB68 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FB6C 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FB70 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FB74 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FB78 08 00 E0 03                                   jr      $ra
.text:0035FB7C 00 00 00 00                                   nop
.text:0035FB7C                                # End of function operator>>(CRunningScript &,char *&)
.text:0035FB7C
.text:0035FB80
.text:0035FB80                                # =============== S U B R O U T I N E =======================================
.text:0035FB80
.text:0035FB80
.text:0035FB80                                               .globl operator>>(CRunningScript &, void *&)  # weak
.text:0035FB80                               operator>>(CRunningScript &, void *&):
.text:0035FB80
.text:0035FB80                               var_18          = -0x18
.text:0035FB80                               var_14          = -0x14
.text:0035FB80                               var_s0          =  0
.text:0035FB80
.text:0035FB80 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FB84 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FB88 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FB8C 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FB90 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035FB98 01 00 05 24                                   li      $a1, 1
.text:0035FB9C 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FBA0 09 F8 40 00                                   jalr    $v0
.text:0035FBA4 00 00 00 00                                   nop
.text:0035FBA8 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FBB0 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035FBB4 04 00 A2 8F                                   lw      $v0, 0x18+var_14($sp)
.text:0035FBB8 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FBBC 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FBC0 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FBC4 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FBC8 08 00 E0 03                                   jr      $ra
.text:0035FBCC 00 00 00 00                                   nop
.text:0035FBCC                                # End of function operator>>(CRunningScript &,void *&)
.text:0035FBCC
.text:0035FBD0
.text:0035FBD0                                # =============== S U B R O U T I N E =======================================
.text:0035FBD0
.text:0035FBD0
.text:0035FBD0                                               .globl CRunningScript & operator>><unsigned long>(CRunningScript &, unsigned long *&)  # weak
.text:0035FBD0                               CRunningScript & operator>><unsigned long>(CRunningScript &, unsigned long *&):
.text:0035FBD0
.text:0035FBD0                               var_18          = -0x18
.text:0035FBD0                               var_14          = -0x14
.text:0035FBD0                               var_s0          =  0
.text:0035FBD0
.text:0035FBD0 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FBD4 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FBD8 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FBDC 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FBE0 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035FBE8 01 00 05 24                                   li      $a1, 1
.text:0035FBEC 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FBF0 09 F8 40 00                                   jalr    $v0
.text:0035FBF4 00 00 00 00                                   nop
.text:0035FBF8 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FC00 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035FC04 04 00 A2 8F                                   lw      $v0, 0x18+var_14($sp)
.text:0035FC08 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FC0C 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FC10 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FC14 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FC18 08 00 E0 03                                   jr      $ra
.text:0035FC1C 00 00 00 00                                   nop
.text:0035FC1C                                # End of function operator>><ulong>(CRunningScript &,ulong *&)
.text:0035FC1C
.text:0035FC20
.text:0035FC20                                # =============== S U B R O U T I N E =======================================
.text:0035FC20
.text:0035FC20
.text:0035FC20                                               .globl CRunningScript & operator<<<int>(CRunningScript &, int *)  # weak
.text:0035FC20                               CRunningScript & operator<<<int>(CRunningScript &, int *):
.text:0035FC20
.text:0035FC20                               var_18          = -0x18
.text:0035FC20                               var_14          = -0x14
.text:0035FC20                               var_s0          =  0
.text:0035FC20
.text:0035FC20 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FC24 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FC28 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FC2C 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FC30 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FC38 04 00 A3 8F                                   lw      $v1, 0x18+var_14($sp)
.text:0035FC3C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FC40 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035FC48 01 00 05 24                                   li      $a1, 1
.text:0035FC4C 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FC50 09 F8 40 00                                   jalr    $v0
.text:0035FC54 00 00 00 00                                   nop
.text:0035FC58 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FC5C 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FC60 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FC64 08 00 E0 03                                   jr      $ra
.text:0035FC68 00 00 00 00                                   nop
.text:0035FC68                                # End of function operator<<<int>(CRunningScript &,int *)
.text:0035FC68
.text:0035FC6C
.text:0035FC6C                                # =============== S U B R O U T I N E =======================================
.text:0035FC6C
.text:0035FC6C
.text:0035FC6C                                               .globl CRunningScript & operator>><void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035FC6C                               CRunningScript & operator>><void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035FC6C
.text:0035FC6C                               var_18          = -0x18
.text:0035FC6C                               var_14          = -0x14
.text:0035FC6C                               var_s0          =  0
.text:0035FC6C
.text:0035FC6C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FC70 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FC74 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FC78 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FC7C 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035FC84 01 00 05 24                                   li      $a1, 1
.text:0035FC88 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FC8C 09 F8 40 00                                   jalr    $v0
.text:0035FC90 00 00 00 00                                   nop
.text:0035FC94 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FC9C 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035FCA0 25 18 40 00                                   move    $v1, $v0
.text:0035FCA4 04 00 A2 8F                                   lw      $v0, 0x18+var_14($sp)
.text:0035FCA8 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FCAC 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FCB0 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FCB4 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FCB8 08 00 E0 03                                   jr      $ra
.text:0035FCBC 00 00 00 00                                   nop
.text:0035FCBC                                # End of function operator>><void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035FCBC
.text:0035FCC0
.text:0035FCC0                                # =============== S U B R O U T I N E =======================================
.text:0035FCC0
.text:0035FCC0
.text:0035FCC0                                               .globl CRunningScript & operator>><void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035FCC0                               CRunningScript & operator>><void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035FCC0
.text:0035FCC0                               var_18          = -0x18
.text:0035FCC0                               var_14          = -0x14
.text:0035FCC0                               var_s0          =  0
.text:0035FCC0
.text:0035FCC0 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FCC4 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FCC8 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FCCC 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FCD0 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035FCD8 01 00 05 24                                   li      $a1, 1
.text:0035FCDC 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FCE0 09 F8 40 00                                   jalr    $v0
.text:0035FCE4 00 00 00 00                                   nop
.text:0035FCE8 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FCF0 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035FCF4 25 18 40 00                                   move    $v1, $v0
.text:0035FCF8 04 00 A2 8F                                   lw      $v0, 0x18+var_14($sp)
.text:0035FCFC 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FD00 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FD04 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FD08 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FD0C 08 00 E0 03                                   jr      $ra
.text:0035FD10 00 00 00 00                                   nop
.text:0035FD10                                # End of function operator>><void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035FD10
.text:0035FD14
.text:0035FD14                                # =============== S U B R O U T I N E =======================================
.text:0035FD14
.text:0035FD14
.text:0035FD14                                               .globl CRunningScript & operator>><unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035FD14                               CRunningScript & operator>><unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035FD14
.text:0035FD14                               var_18          = -0x18
.text:0035FD14                               var_14          = -0x14
.text:0035FD14                               var_s0          =  0
.text:0035FD14
.text:0035FD14 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FD18 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FD1C 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FD20 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FD24 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035FD2C 01 00 05 24                                   li      $a1, 1
.text:0035FD30 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FD34 09 F8 40 00                                   jalr    $v0
.text:0035FD38 00 00 00 00                                   nop
.text:0035FD3C 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FD44 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035FD48 25 18 40 00                                   move    $v1, $v0
.text:0035FD4C 04 00 A2 8F                                   lw      $v0, 0x18+var_14($sp)
.text:0035FD50 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FD54 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FD58 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FD5C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FD60 08 00 E0 03                                   jr      $ra
.text:0035FD64 00 00 00 00                                   nop
.text:0035FD64                                # End of function operator>><ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035FD64
.text:0035FD68
.text:0035FD68                                # =============== S U B R O U T I N E =======================================
.text:0035FD68
.text:0035FD68
.text:0035FD68                                               .globl CRunningScript & operator>><unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035FD68                               CRunningScript & operator>><unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035FD68
.text:0035FD68                               var_18          = -0x18
.text:0035FD68                               var_14          = -0x14
.text:0035FD68                               var_s0          =  0
.text:0035FD68
.text:0035FD68 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FD6C 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FD70 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FD74 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FD78 36 00 02 3C A0 02 42 8C                       lw      $v0, GetScriptParams
.text:0035FD80 01 00 05 24                                   li      $a1, 1
.text:0035FD84 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FD88 09 F8 40 00                                   jalr    $v0
.text:0035FD8C 00 00 00 00                                   nop
.text:0035FD90 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FD98 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035FD9C 25 18 40 00                                   move    $v1, $v0
.text:0035FDA0 04 00 A2 8F                                   lw      $v0, 0x18+var_14($sp)
.text:0035FDA4 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FDA8 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FDAC 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FDB0 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FDB4 08 00 E0 03                                   jr      $ra
.text:0035FDB8 00 00 00 00                                   nop
.text:0035FDB8                                # End of function operator>><ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035FDB8
.text:0035FDBC
.text:0035FDBC                                # =============== S U B R O U T I N E =======================================
.text:0035FDBC
.text:0035FDBC
.text:0035FDBC                                               .globl CRunningScript & operator<<<unsigned char>(CRunningScript &, unsigned char *)  # weak
.text:0035FDBC                               CRunningScript & operator<<<unsigned char>(CRunningScript &, unsigned char *):
.text:0035FDBC
.text:0035FDBC                               var_18          = -0x18
.text:0035FDBC                               var_14          = -0x14
.text:0035FDBC                               var_s0          =  0
.text:0035FDBC
.text:0035FDBC E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FDC0 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FDC4 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FDC8 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FDCC 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FDD4 04 00 A3 8F                                   lw      $v1, 0x18+var_14($sp)
.text:0035FDD8 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FDDC 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035FDE4 01 00 05 24                                   li      $a1, 1
.text:0035FDE8 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FDEC 09 F8 40 00                                   jalr    $v0
.text:0035FDF0 00 00 00 00                                   nop
.text:0035FDF4 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FDF8 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FDFC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FE00 08 00 E0 03                                   jr      $ra
.text:0035FE04 00 00 00 00                                   nop
.text:0035FE04                                # End of function operator<<<uchar>(CRunningScript &,uchar *)
.text:0035FE04
.text:0035FE08
.text:0035FE08                                # =============== S U B R O U T I N E =======================================
.text:0035FE08
.text:0035FE08
.text:0035FE08                                               .globl CRunningScript & operator<<<SCRIPT_VAR>(CRunningScript &, SCRIPT_VAR *)  # weak
.text:0035FE08                               CRunningScript & operator<<<SCRIPT_VAR>(CRunningScript &, SCRIPT_VAR *):
.text:0035FE08
.text:0035FE08                               var_18          = -0x18
.text:0035FE08                               var_14          = -0x14
.text:0035FE08                               var_s0          =  0
.text:0035FE08
.text:0035FE08 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FE0C 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FE10 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FE14 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FE18 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FE20 04 00 A3 8F                                   lw      $v1, 0x18+var_14($sp)
.text:0035FE24 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FE28 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035FE30 01 00 05 24                                   li      $a1, 1
.text:0035FE34 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FE38 09 F8 40 00                                   jalr    $v0
.text:0035FE3C 00 00 00 00                                   nop
.text:0035FE40 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FE44 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FE48 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FE4C 08 00 E0 03                                   jr      $ra
.text:0035FE50 00 00 00 00                                   nop
.text:0035FE50                                # End of function operator<<<SCRIPT_VAR>(CRunningScript &,SCRIPT_VAR *)
.text:0035FE50
.text:0035FE54
.text:0035FE54                                # =============== S U B R O U T I N E =======================================
.text:0035FE54
.text:0035FE54
.text:0035FE54                                               .globl CRunningScript & operator<<<void>(CRunningScript &, void *)  # weak
.text:0035FE54                               CRunningScript & operator<<<void>(CRunningScript &, void *):
.text:0035FE54
.text:0035FE54                               var_18          = -0x18
.text:0035FE54                               var_14          = -0x14
.text:0035FE54                               var_s0          =  0
.text:0035FE54
.text:0035FE54 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FE58 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FE5C 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FE60 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FE64 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FE6C 04 00 A3 8F                                   lw      $v1, 0x18+var_14($sp)
.text:0035FE70 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FE74 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035FE7C 01 00 05 24                                   li      $a1, 1
.text:0035FE80 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FE84 09 F8 40 00                                   jalr    $v0
.text:0035FE88 00 00 00 00                                   nop
.text:0035FE8C 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FE90 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FE94 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FE98 08 00 E0 03                                   jr      $ra
.text:0035FE9C 00 00 00 00                                   nop
.text:0035FE9C                                # End of function operator<<<void>(CRunningScript &,void *)
.text:0035FE9C
.text:0035FEA0
.text:0035FEA0                                # =============== S U B R O U T I N E =======================================
.text:0035FEA0
.text:0035FEA0
.text:0035FEA0                                               .globl CRunningScript & operator<<<char const>(CRunningScript &, char const *)  # weak
.text:0035FEA0                               CRunningScript & operator<<<char const>(CRunningScript &, char const *):
.text:0035FEA0
.text:0035FEA0                               var_18          = -0x18
.text:0035FEA0                               var_14          = -0x14
.text:0035FEA0                               var_s0          =  0
.text:0035FEA0
.text:0035FEA0 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FEA4 18 00 BF FF                                   sd      $ra, 0x18+var_s0($sp)
.text:0035FEA8 00 00 A4 AF                                   sw      $a0, 0x18+var_18($sp)
.text:0035FEAC 04 00 A5 AF                                   sw      $a1, 0x18+var_14($sp)
.text:0035FEB0 36 00 02 3C 98 02 42 8C                       lw      $v0, opcodeParams
.text:0035FEB8 04 00 A3 8F                                   lw      $v1, 0x18+var_14($sp)
.text:0035FEBC 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FEC0 36 00 02 3C 9C 02 42 8C                       lw      $v0, SetScriptParams
.text:0035FEC8 01 00 05 24                                   li      $a1, 1
.text:0035FECC 00 00 A4 8F                                   lw      $a0, 0x18+var_18($sp)
.text:0035FED0 09 F8 40 00                                   jalr    $v0
.text:0035FED4 00 00 00 00                                   nop
.text:0035FED8 00 00 A2 8F                                   lw      $v0, 0x18+var_18($sp)
.text:0035FEDC 18 00 BF DF                                   ld      $ra, 0x18+var_s0($sp)
.text:0035FEE0 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FEE4 08 00 E0 03                                   jr      $ra
.text:0035FEE8 00 00 00 00                                   nop
.text:0035FEE8                                # End of function operator<<<char const>(CRunningScript &,char const *)
.text:0035FEE8
.text:0035FEE8                                # ---------------------------------------------------------------------------
.text:0035FEEC 00 00 00 00                                   .word 0
.text:0035FEF0 00 00 00 00                                   .word 0
.text:0035FEF4 00 00 00 00                                   .word 0
.text:0035FEF8 55 53 42 44                   dword_35FEF8:   .word 0x44425355
.text:0035FEFC 2E 49 52 58                                   .word 0x5852492E
.text:0035FF00 00 00 00 00                                   .word 0
.text:0035FF04 00 00 00 00                                   .word 0
.text:0035FF08 55 53 42 48                   dword_35FF08:   .word 0x48425355
.text:0035FF0C 44 46 53 44                                   .word 0x44534644
.text:0035FF10 2E 49 52 58                                   .word 0x5852492E
.text:0035FF14 00 00 00 00                                   .word 0
.text:0035FF18 25 64 00 00                   int_fmt:        .word 0x6425
.text:0035FF1C 00 00 00 00                                   .word 0
.text:0035FF20 25 30 38 58                   ptrstr:         .word 0x58383025
.text:0035FF24 00 00 00 00                                   .word 0
.text:0035FF28 25 66 00 00                   fltstr:         .word 0x6625
.text:0035FF2C 00 00 00 00                                   .word 0
.text:0035FF30 28 6E 75 6C                   none:           .word 0x6C756E28
.text:0035FF34 6C 29 00 00                                   .word 0x296C
.text:0035FF38 1C E0 35 00                   jpt_35DE40:     .word 0x35E01C           # jump table for switch statement
.text:0035FF3C 8C DF 35 00                                   .word 0x35DF8C
.text:0035FF40 8C DF 35 00                                   .word 0x35DF8C
.text:0035FF44 8C DF 35 00                                   .word 0x35DF8C
.text:0035FF48 8C DF 35 00                                   .word 0x35DF8C
.text:0035FF4C 8C DF 35 00                                   .word 0x35DF8C
.text:0035FF50 48 DE 35 00                                   .word 0x35DE48
.text:0035FF54 8C DF 35 00                                   .word 0x35DF8C
.text:0035FF58 8C DF 35 00                                   .word 0x35DF8C
.text:0035FF5C D4 DF 35 00                                   .word 0x35DFD4
.text:0035FF60 A8 DF 35 00                                   .word 0x35DFA8
.text:0035FF64 A8 DF 35 00                                   .word 0x35DFA8
.text:0035FF68 1C E0 35 00                                   .word 0x35E01C
.text:0035FF6C 1C E0 35 00                                   .word 0x35E01C
.text:0035FF70 D4 DF 35 00                                   .word 3530708
.text:0035FF74 1C E0 35 00                                   .word 0x35E01C
.text:0035FF78 A8 DF 35 00                                   .word 0x35DFA8
.text:0035FF7C A8 DF 35 00                                   .word 0x35DFA8
.text:0035FF80 8C DE 35 00                   jpt_35DE84:     .word 0x35DE8C           # jump table for switch statement
.text:0035FF84 9C DE 35 00                                   .word 0x35DE9C
.text:0035FF88 AC DE 35 00                                   .word 0x35DEAC
.text:0035FF8C BC DE 35 00                                   .word 0x35DEBC
.text:0035FF90 CC DE 35 00                                   .word 0x35DECC
.text:0035FF94 DC DE 35 00                                   .word 0x35DEDC
.text:0035FF98 EC DE 35 00                                   .word 0x35DEEC
.text:0035FF9C FC DE 35 00                                   .word 0x35DEFC
.text:0035FFA0 0C DF 35 00                                   .word 0x35DF0C
.text:0035FFA4 1C DF 35 00                                   .word 0x35DF1C
.text:0035FFA8 2C DF 35 00                                   .word 0x35DF2C
.text:0035FFAC 3C DF 35 00                                   .word 0x35DF3C
.text:0035FFB0 4C DF 35 00                                   .word 0x35DF4C
.text:0035FFB4 5C DF 35 00                                   .word 0x35DF5C
.text:0035FFB8 6C DF 35 00                                   .word 0x35DF6C
.text:0035FFBC EC E3 35 00                   jpt_35E210:     .word 0x35E3EC           # jump table for switch statement
.text:0035FFC0 5C E3 35 00                                   .word 0x35E35C
.text:0035FFC4 5C E3 35 00                                   .word 0x35E35C
.text:0035FFC8 5C E3 35 00                                   .word 0x35E35C
.text:0035FFCC 5C E3 35 00                                   .word 0x35E35C
.text:0035FFD0 5C E3 35 00                                   .word 0x35E35C
.text:0035FFD4 18 E2 35 00                                   .word 0x35E218
.text:0035FFD8 5C E3 35 00                                   .word 0x35E35C
.text:0035FFDC 5C E3 35 00                                   .word 0x35E35C
.text:0035FFE0 A4 E3 35 00                                   .word 0x35E3A4
.text:0035FFE4 78 E3 35 00                                   .word 0x35E378
.text:0035FFE8 78 E3 35 00                                   .word 0x35E378
.text:0035FFEC EC E3 35 00                                   .word 0x35E3EC
.text:0035FFF0 EC E3 35 00                                   .word 3531756
.text:0035FFF4 A4 E3 35 00                                   .word 0x35E3A4
.text:0035FFF8 EC E3 35 00                                   .word 0x35E3EC
.text:0035FFFC 78 E3 35 00                                   .word 0x35E378
.text:00360000 78 E3 35 00                                   .word 0x35E378
.text:00360004 5C E2 35 00                   jpt_35E254:     .word 0x35E25C           # jump table for switch statement
.text:00360008 6C E2 35 00                                   .word 0x35E26C
.text:0036000C 7C E2 35 00                                   .word 0x35E27C
.text:00360010 8C E2 35 00                                   .word 0x35E28C
.text:00360014 9C E2 35 00                                   .word 0x35E29C
.text:00360018 AC E2 35 00                                   .word 0x35E2AC
.text:0036001C BC E2 35 00                                   .word 0x35E2BC
.text:00360020 CC E2 35 00                                   .word 3531468
.text:00360024 DC E2 35 00                                   .word 0x35E2DC
.text:00360028 EC E2 35 00                                   .word 0x35E2EC
.text:0036002C FC E2 35 00                                   .word 0x35E2FC
.text:00360030 0C E3 35 00                                   .word 0x35E30C
.text:00360034 1C E3 35 00                                   .word 0x35E31C
.text:00360038 2C E3 35 00                                   .word 0x35E32C
.text:0036003C 3C E3 35 00                                   .word 0x35E33C
.text:00360040 B4 E7 35 00                   jpt_35E5D8:     .word 0x35E7B4           # jump table for switch statement
.text:00360044 24 E7 35 00                                   .word 0x35E724
.text:00360048 24 E7 35 00                                   .word 0x35E724
.text:0036004C 24 E7 35 00                                   .word 0x35E724
.text:00360050 24 E7 35 00                                   .word 0x35E724
.text:00360054 24 E7 35 00                                   .word 0x35E724
.text:00360058 E0 E5 35 00                                   .word 0x35E5E0
.text:0036005C 24 E7 35 00                                   .word 0x35E724
.text:00360060 24 E7 35 00                                   .word 0x35E724
.text:00360064 6C E7 35 00                                   .word 0x35E76C
.text:00360068 40 E7 35 00                                   .word 0x35E740
.text:0036006C 40 E7 35 00                                   .word 0x35E740
.text:00360070 B4 E7 35 00                                   .word 0x35E7B4
.text:00360074 B4 E7 35 00                                   .word 0x35E7B4
.text:00360078 6C E7 35 00                                   .word 0x35E76C
.text:0036007C B4 E7 35 00                                   .word 0x35E7B4
.text:00360080 40 E7 35 00                                   .word 0x35E740
.text:00360084 40 E7 35 00                                   .word 0x35E740
.text:00360088 24 E6 35 00                   jpt_35E61C:     .word 0x35E624           # jump table for switch statement
.text:0036008C 34 E6 35 00                                   .word 0x35E634
.text:00360090 44 E6 35 00                                   .word 0x35E644
.text:00360094 54 E6 35 00                                   .word 0x35E654
.text:00360098 64 E6 35 00                                   .word 3532388
.text:0036009C 74 E6 35 00                                   .word 0x35E674
.text:003600A0 84 E6 35 00                                   .word 0x35E684
.text:003600A4 94 E6 35 00                                   .word 0x35E694
.text:003600A8 A4 E6 35 00                                   .word 0x35E6A4
.text:003600AC B4 E6 35 00                                   .word 0x35E6B4
.text:003600B0 C4 E6 35 00                                   .word 0x35E6C4
.text:003600B4 D4 E6 35 00                                   .word 0x35E6D4
.text:003600B8 E4 E6 35 00                                   .word 0x35E6E4
.text:003600BC F4 E6 35 00                                   .word 0x35E6F4
.text:003600C0 04 E7 35 00                                   .word 0x35E704
.text:003600C4 98 EB 35 00                   jpt_35E9BC:     .word 0x35EB98           # jump table for switch statement
.text:003600C8 08 EB 35 00                                   .word 0x35EB08
.text:003600CC 08 EB 35 00                                   .word 0x35EB08
.text:003600D0 08 EB 35 00                                   .word 0x35EB08
.text:003600D4 08 EB 35 00                                   .word 0x35EB08
.text:003600D8 08 EB 35 00                                   .word 0x35EB08
.text:003600DC C4 E9 35 00                                   .word 0x35E9C4
.text:003600E0 08 EB 35 00                                   .word 0x35EB08
.text:003600E4 08 EB 35 00                                   .word 0x35EB08
.text:003600E8 50 EB 35 00                                   .word 0x35EB50
.text:003600EC 24 EB 35 00                                   .word 0x35EB24
.text:003600F0 24 EB 35 00                                   .word 0x35EB24
.text:003600F4 98 EB 35 00                                   .word 0x35EB98
.text:003600F8 98 EB 35 00                                   .word 0x35EB98
.text:003600FC 50 EB 35 00                                   .word 0x35EB50
.text:00360100 98 EB 35 00                                   .word 0x35EB98
.text:00360104 24 EB 35 00                                   .word 0x35EB24
.text:00360108 24 EB 35 00                                   .word 0x35EB24
.text:0036010C 08 EA 35 00                   jpt_35EA00:     .word 0x35EA08           # jump table for switch statement
.text:00360110 18 EA 35 00                                   .word 0x35EA18
.text:00360114 28 EA 35 00                                   .word 0x35EA28
.text:00360118 38 EA 35 00                                   .word 0x35EA38
.text:0036011C 48 EA 35 00                                   .word 0x35EA48
.text:00360120 58 EA 35 00                                   .word 0x35EA58
.text:00360124 68 EA 35 00                                   .word 0x35EA68
.text:00360128 78 EA 35 00                                   .word 0x35EA78
.text:0036012C 88 EA 35 00                                   .word 0x35EA88
.text:00360130 98 EA 35 00                                   .word 0x35EA98
.text:00360134 A8 EA 35 00                                   .word 0x35EAA8
.text:00360138 B8 EA 35 00                                   .word 0x35EAB8
.text:0036013C C8 EA 35 00                                   .word 0x35EAC8
.text:00360140 D8 EA 35 00                                   .word 0x35EAD8
.text:00360144 E8 EA 35 00                                   .word 0x35EAE8
.text:00360148                                               .globl FlushCache
.text:00360148 20 BA 53 00                   FlushCache:     .word 0x53BA20
.text:0036014C                                               .globl rw_open
.text:0036014C 10 32 23 00                   rw_open:        .word 0x233210
.text:00360150                                               .globl rw_read
.text:00360150 50 32 23 00                   rw_read:        .word 0x233250
.text:00360154                                               .globl rw_seek
.text:00360154 B0 32 23 00                   rw_seek:        .word 0x2332B0
.text:00360158                                               .globl rw_close
.text:00360158 70 33 23 00                   rw_close:       .word 0x233370
.text:0036015C                                               .globl RwOsGetFileInterface
.text:0036015C B8 32 33 00                   RwOsGetFileInterface:.word 0x3332B8
.text:00360160                                               .globl printf
.text:00360160 D0 F7 54 00                   printf:         .word 0x54F7D0
.text:00360164                                               .globl malloc
.text:00360164 10 70 33 00                   malloc:         .word 0x337010
.text:00360168                                               .globl free
.text:00360168 38 D8 54 00                   free:           .word 0x54D838
.text:0036016C                                               .globl memset
.text:0036016C 68 E5 54 00                   memset:         .word 0x54E568
.text:00360170                                               .globl memcpy
.text:00360170 B0 E3 54 00                   memcpy:         .word 0x54E3B0
.text:00360174                                               .globl memcmp
.text:00360174 18 E3 54 00                   memcmp:         .word 0x54E318
.text:00360178                                               .globl strlen
.text:00360178 B8 17 55 00                   strlen:         .word 0x5517B8
.text:0036017C                                               .globl strcmp
.text:0036017C 58 15 55 00                   strcmp:         .word 0x551558
.text:00360180                                               .globl strcpy
.text:00360180 A0 16 55 00                   strcpy:         .word 0x5516A0
.text:00360184                                               .globl strcat
.text:00360184 98 12 55 00                   strcat:         .word 0x551298
.text:00360188                                               .globl strncpy
.text:00360188 80 1D 55 00                   strncpy:        .word 0x551D80
.text:0036018C                                               .globl sprintf
.text:0036018C 10 0F 55 00                   sprintf:        .word 0x550F10
.text:00360190                                               .globl floor
.text:00360190 48 AF 53 00                   floor:          .word 0x53AF48
.text:00360194                                               .globl pow
.text:00360194 68 74 53 00                   pow:            .word 0x537468
.text:00360198                                               .globl __extendsfdf2
.text:00360198 40 11 53 00                   __extendsfdf2:  .word 0x531140
.text:0036019C                                               .globl sceSifLoadModule
.text:0036019C A0 49 54 00                   sceSifLoadModule:.word 0x5449A0
.text:003601A0                                               .globl loadIOPModules2
.text:003601A0 60 5D 24 00                   loadIOPModules2:.word 0x245D60
.text:003601A4                                               .globl CTimer_m_snTimeInMilliseconds
.text:003601A4 14 BA 66 00                   CTimer_m_snTimeInMilliseconds:.word 0x66BA14
.text:003601A8                                               .globl CTheScripts_ScriptSpace
.text:003601A8 F0 1F 6B 00                   CTheScripts_ScriptSpace:.word 0x6B1FF0
.text:003601AC                                               .globl CTheScripts_FailCurrentMission
.text:003601AC 64 B5 66 00                   CTheScripts_FailCurrentMission:.word 0x66B564
.text:003601B0                                               .globl _StyledText_2
.text:003601B0 10 29 7C 00                   _StyledText_2:  .word 0x7C2910
.text:003601B4                                               .globl CCutsceneMgr_IsCutsceneSkipButtonBeingPressed
.text:003601B4 60 48 30 00                   CCutsceneMgr_IsCutsceneSkipButtonBeingPressed:.word 0x304860
.text:003601B8                                               .globl CRunningScript_DoDeatharrestCheck
.text:003601B8 F0 A7 30 00                   CRunningScript_DoDeatharrestCheck:.word 0x30A7F0
.text:003601BC                                               .globl CTheScripts_ReinitialiseSwitchStatementData
.text:003601BC F0 08 50 00                   CTheScripts_ReinitialiseSwitchStatementData:.word 0x5008F0
.text:003601C0                                               .globl opcodeHandlerTable
.text:003601C0 C0 91 5F 00                   opcodeHandlerTable:.word 0x5F91C0
.text:003601C4                                               .globl SetScriptCondResult
.text:003601C4 F0 77 30 00                   SetScriptCondResult:.word 0x3077F0
.text:003601C8                                               .globl PrintHelp
.text:003601C8 70 91 2A 00                   PrintHelp:      .word 0x2A9170
.text:003601CC                                               .globl PrintBig
.text:003601CC D0 BC 18 00                   PrintBig:       .word 0x18BCD0
.text:003601D0                                               .globl Print
.text:003601D0 70 B5 18 00                   Print:          .word 0x18B570
.text:003601D4                                               .globl PrintNow
.text:003601D4 B0 B8 18 00                   PrintNow:       .word 0x18B8B0
.text:003601D8                                               .globl pedPool
.text:003601D8 18 B9 66 00                   pedPool:        .word 0x66B918
.text:003601DC                                               .globl vehPool
.text:003601DC 1C B9 66 00                   vehPool:        .word 0x66B91C
.text:003601E0                                               .globl objPool
.text:003601E0 24 B9 66 00                   objPool:        .word 0x66B924
.text:003601E4                                               .globl GetPedStruct
.text:003601E4 B0 FB 1F 00                   GetPedStruct:   .word 0x1FFBB0
.text:003601E8                                               .globl GetVehStruct
.text:003601E8 70 FB 1F 00                   GetVehStruct:   .word 0x1FFB70
.text:003601EC                                               .globl GetObjStruct
.text:003601EC 30 FB 1F 00                   GetObjStruct:   .word 0x1FFB30
.text:003601F0                                               .globl GetPedHandle
.text:003601F0 20 FA 19 00                   GetPedHandle:   .word 0x19FA20
.text:003601F4                                               .globl GetVehHandle
.text:003601F4 20 EF 17 00                   GetVehHandle:   .word 0x17EF20
.text:003601F8                                               .globl GetObjHandle
.text:003601F8 C0 2C 13 00                   GetObjHandle:   .word 0x132CC0
.text:003601FC                                               .globl CText_Get
.text:003601FC 90 ED 18 00                   CText_Get:      .word 0x18ED90
.text:00360200                                               .globl gameTexts
.text:00360200 90 F2 69 00                   gameTexts:      .word 0x69F290
.text:00360204                                               .globl cdrom0
.text:00360204 E8 A3 5F 00                   cdrom0:         .word 0x5FA3E8
.text:00360208                                               .globl system_folder
.text:00360208 90 61 66 00                   system_folder:  .word 0x666190
.text:0036020C                                               .globl CanTLoadModule
.text:0036020C 60 A4 5F 00                   CanTLoadModule: .word 0x5FA460
.text:00360210                                               .globl Loading_s
.text:00360210 48 A4 5F 00                   Loading_s:      .word 0x5FA448
.text:00360214 00 00 00 00                                   .align 3
.text:00360218                                               .globl message_buf
.text:00360218 00 00 00 00                   message_buf:    .word 0
.text:0036021C 00 00 00 00                                   .word 0
.text:00360220 00 00 00 00                                   .word 0
.text:00360224 00 00 00 00                                   .word 0
.text:00360228 00 00 00 00                                   .word 0
.text:0036022C 00 00 00 00                                   .word 0
.text:00360230 00 00 00 00                                   .word 0
.text:00360234 00 00 00 00                                   .word 0
.text:00360238 00 00 00 00                                   .word 0
.text:0036023C 00 00 00 00                                   .word 0
.text:00360240 00 00 00 00                                   .word 0
.text:00360244 00 00 00 00                                   .word 0
.text:00360248 00 00 00 00                                   .word 0
.text:0036024C 00 00 00 00                                   .word 0
.text:00360250 00 00 00 00                                   .word 0
.text:00360254 00 00 00 00                                   .word 0
.text:00360258 00 00 00 00                                   .word 0
.text:0036025C 00 00 00 00                                   .word 0
.text:00360260 00 00 00 00                                   .word 0
.text:00360264 00 00 00 00                                   .word 0
.text:00360268 00 00 00 00                                   .word 0
.text:0036026C 00 00 00 00                                   .word 0
.text:00360270 00 00 00 00                                   .word 0
.text:00360274 00 00 00 00                                   .word 0
.text:00360278 00 00 00 00                                   .word 0
.text:0036027C 00 00 00 00                                   .word 0
.text:00360280 00 00 00 00                                   .word 0
.text:00360284 00 00 00 00                                   .word 0
.text:00360288 00 00 00 00                                   .word 0
.text:0036028C 00 00 00 00                                   .word 0
.text:00360290 00 00 00 00                                   .word 0
.text:00360294 00 00 00 00                                   .word 0
.text:00360298                                               .globl opcodeParams
.text:00360298 B0 DF 6F 00                   opcodeParams:   .word 0x6FDFB0
.text:0036029C                                               .globl SetScriptParams
.text:0036029C 20 7D 1F 00                   SetScriptParams:.word 2063648
.text:003602A0                                               .globl GetScriptParams
.text:003602A0 D0 77 1F 00                   GetScriptParams:.word 0x1F77D0
.text:003602A4                                               .globl GetScriptStringParam
.text:003602A4 00 72 1F 00                   GetScriptStringParam:.word 0x1F7200
.text:003602A8                                               .globl GetScriptParamPointer
.text:003602A8 00 83 1F 00                   GetScriptParamPointer:.word 0x1F8300
.text:003602AC                                               .globl usbd
.text:003602AC F8 FE 35 00                   usbd:           .word dword_35FEF8
.text:003602B0                                               .globl usbhdfsd
.text:003602B0 08 FF 35 00                   usbhdfsd:       .word dword_35FF08
.text:003602B4 00 00 00 00                                   .align 3
.text:003602B8                                               .globl customOpcodeHandlers
.text:003602B8 50 D4 35 00                   customOpcodeHandlers:.word opcode_0A8C(CRunningScript *)
.text:003602BC 30 D5 35 00                                   .word opcode_0A8D(CRunningScript *)
.text:003602C0 00 D6 35 00                                   .word opcode_0A8E(CRunningScript *)
.text:003602C4 7C D6 35 00                                   .word opcode_0A8F(CRunningScript *)
.text:003602C8 F8 D6 35 00                                   .word opcode_0A90(CRunningScript *)
.text:003602CC 74 D7 35 00                                   .word opcode_0A91(CRunningScript *)
.text:003602D0 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:003602D4 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:003602D8 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:003602DC 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:003602E0 FC D7 35 00                                   .word opcode_0A96(CRunningScript *)
.text:003602E4 70 D8 35 00                                   .word opcode_0A97(CRunningScript *)
.text:003602E8 E4 D8 35 00                                   .word opcode_0A98(CRunningScript *)
.text:003602EC 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:003602F0 58 D9 35 00                                   .word opcode_0A9A(CRunningScript *)
.text:003602F4 34 DA 35 00                                   .word opcode_0A9B(CRunningScript *)
.text:003602F8 54 DB 35 00                                   .word opcode_0A9C(CRunningScript *)
.text:003602FC B0 DB 35 00                                   .word opcode_0A9D(CRunningScript *)
.text:00360300 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360304 38 DC 35 00                                   .word opcode_0A9F(CRunningScript *)
.text:00360308 80 DC 35 00                                   .word opcode_0AA0(CRunningScript *)
.text:0036030C 0C DD 35 00                                   .word opcode_0AA1(CRunningScript *)
.text:00360310 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360314 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360318 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036031C 74 DD 35 00                                   .word opcode_0AA5(CRunningScript *)
.text:00360320 30 E1 35 00                                   .word opcode_0AA6(CRunningScript *)
.text:00360324 0C E5 35 00                                   .word opcode_0AA7(CRunningScript *)
.text:00360328 DC E8 35 00                                   .word opcode_0AA8(CRunningScript *)
.text:0036032C                                # ---------------------------------------------------------------------------
.text:0036032C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360330 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360334 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360338 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:0036033C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360340 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360344 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360348 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:0036034C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360350 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360354 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360358 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:0036035C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360360 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360364 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360368 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:0036036C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360370 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360374 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360378 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:0036037C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360380 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360384 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360388 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:0036038C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360390 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360394 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360398 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:0036039C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:003603A0 C0 EC 35 00                                   sll     $sp, $s5, 19
.text:003603A4 4C ED 35 00                                   syscall 0xD7B5
.text:003603A8 A0 ED 35 00                                   add     $sp, $at, $s5
.text:003603AC 24 EE 35 00                                   and     $sp, $at, $s5
.text:003603B0 6C EE 35 00                                   dadd    $sp, $at, $s5
.text:003603B4 C8 EE 35 00                                   jr.hb   $at
.text:003603B8 7C EF 35 00                                   dsll32  $sp, $s5, 29
.text:003603B8                                # ---------------------------------------------------------------------------
.text:003603BC 0C F0 35 00                                   .word opcode_0ACD(CRunningScript *)
.text:003603C0 9C F0 35 00                                   .word opcode_0ACE(CRunningScript *)
.text:003603C4 1C F1 35 00                                   .word opcode_0ACF(CRunningScript *)
.text:003603C8                                # ---------------------------------------------------------------------------
.text:003603C8 F8 F1 35 00                                   dsll    $fp, $s5, 7
.text:003603CC B0 F2 35 00                                   tge     $at, $s5  #0x3CA
.text:003603D0 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:003603D4 68 F3 35 00                                   mfsa    $fp
.text:003603D8 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:003603DC 48 F4 35 00                                   jr.hb   $at
.text:003603E0 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:003603E4                                # ---------------------------------------------------------------------------
.text:003603E4 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:003603E8 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:003603EC 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:003603F0 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:003603F4 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:003603F8 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:003603FC 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360400 F4 F4 35 00                                   teq     $at, $s5  #0x3D3
.text:00360404 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360408 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:0036040C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360410 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360414 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360418 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:0036041C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360420 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360424 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360428 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:0036042C 38 D4 35 00                                   dsll    $k0, $s5, 16
.text:00360430 18 F6 35 00                                   mult    $fp, $at, $s5
.text:00360434 88 F6 35 00                                   jr.hb   $at
.text:00360438 F8 F6 35 00                                   dsll    $fp, $s5, 27
.text:00360438                                # ---------------------------------------------------------------------------
.text:0036043C 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360440 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360444 38 D4 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360448 00 00 00 00                   readString(CRunningScript *, char *, unsigned char)::result:.word 0
.text:0036044C 00 00 00 00                                   .word 0
.text:00360450 00 00 00 00                                   .word 0
.text:00360454 00 00 00 00                                   .word 0
.text:00360458 00 00 00 00                                   .word 0
.text:0036045C 00 00 00 00                                   .word 0
.text:00360460 00 00 00 00                                   .word 0
.text:00360464 00 00 00 00                                   .word 0
.text:00360468 00 00 00 00                                   .word 0
.text:0036046C 00 00 00 00                                   .word 0
.text:00360470 00 00 00 00                                   .word 0
.text:00360474 00 00 00 00                                   .word 0
.text:00360478 00 00 00 00                                   .word 0
.text:0036047C 00 00 00 00                                   .word 0
.text:00360480 00 00 00 00                                   .word 0
.text:00360484 00 00 00 00                                   .word 0
.text:00360488 00 00 00 00                                   .word 0
.text:0036048C 00 00 00 00                                   .word 0
.text:00360490 00 00 00 00                                   .word 0
.text:00360494 00 00 00 00                                   .word 0
.text:00360498 00 00 00 00                                   .word 0
.text:0036049C 00 00 00 00                                   .word 0
.text:003604A0 00 00 00 00                                   .word 0
.text:003604A4 00 00 00 00                                   .word 0
.text:003604A8 00 00 00 00                                   .word 0
.text:003604AC 00 00 00 00                                   .word 0
.text:003604B0 00 00 00 00                                   .word 0
.text:003604B4 00 00 00 00                                   .word 0
.text:003604B8 00 00 00 00                                   .word 0
.text:003604BC 00 00 00 00                                   .word 0
.text:003604C0 00 00 00 00                                   .word 0
.text:003604C4 00 00 00 00                                   .word 0
.text:003604C8 00 00 00 00                   textParams:     .word 0
.text:003604CC 00 00 00 00                                   .word 0
.text:003604D0 00 00 00 00                                   .word 0
.text:003604D4 00 00 00 00                                   .word 0
.text:003604D8 00 00 00 00                                   .word 0
.text:003604DC 00 00 00 00                                   .word 0
.text:003604E0 00 00 00 00                                   .word 0
.text:003604E4 00 00 00 00                                   .word 0
.text:003604E8 00 00 00 00                                   .word 0
.text:003604EC 00 00 00 00                                   .word 0
.text:003604F0 00 00 00 00                                   .word 0
.text:003604F4 00 00 00 00                                   .word 0
.text:003604F8 00 00 00 00                                   .word 0
.text:003604FC 00 00 00 00                                   .word 0
.text:00360500 00 00 00 00                                   .word 0
.text:00360504 00 00 00 00                                   .word 0
.text:00360508 00 00 00 00                                   .word 0
.text:0036050C 00 00 00 00                                   .word 0
.text:00360510 00 00 00 00                                   .word 0
.text:00360514 00 00 00 00                                   .word 0
.text:00360518 00 00 00 00                                   .word 0
.text:0036051C 00 00 00 00                                   .word 0
.text:00360520 00 00 00 00                                   .word 0
.text:00360524 00 00 00 00                                   .word 0
.text:00360528 00 00 00 00                                   .word 0
.text:0036052C 00 00 00 00                                   .word 0
.text:00360530 00 00 00 00                                   .word 0
.text:00360534 00 00 00 00                                   .word 0
.text:00360538 00 00 00 00                                   .word 0
.text:0036053C 00 00 00 00                                   .word 0
.text:00360540 00 00 00 00                                   .word 0
.text:00360544 00 00 00 00                                   .word 0
.text:00360548 00 00 00 00                                   .word 0
.text:0036054C 00 00 00 00                                   .word 0
.text:00360550 00 00 00 00                                   .word 0
.text:00360554 00 00 00 00                                   .word 0
.text:00360558 00 00 00 00                                   .word 0
.text:0036055C 00 00 00 00                                   .word 0
.text:00360560 00 00 00 00                                   .word 0
.text:00360564 00 00 00 00                                   .word 0
.text:00360568 00 00 00 00                                   .word 0
.text:0036056C 00 00 00 00                                   .word 0
.text:00360570 00 00 00 00                                   .word 0
.text:00360574 00 00 00 00                                   .word 0
.text:00360578 00 00 00 00                                   .word 0
.text:0036057C 00 00 00 00                                   .word 0
.text:00360580 00 00 00 00                                   .word 0
.text:00360584 00 00 00 00                                   .word 0
.text:00360588 00 00 00 00                                   .word 0
.text:0036058C 00 00 00 00                                   .word 0
.text:00360590 00 00 00 00                                   .word 0
.text:00360594 00 00 00 00                                   .word 0
.text:00360598 00 00 00 00                                   .word 0
.text:0036059C 00 00 00 00                                   .word 0
.text:003605A0 00 00 00 00                                   .word 0
.text:003605A4 00 00 00 00                                   .word 0
.text:003605A8 00 00 00 00                                   .word 0
.text:003605AC 00 00 00 00                                   .word 0
.text:003605B0 00 00 00 00                                   .word 0
.text:003605B4 00 00 00 00                                   .word 0
.text:003605B8 00 00 00 00                                   .word 0
.text:003605BC 00 00 00 00                                   .word 0
.text:003605C0 00 00 00 00                                   .word 0
.text:003605C4 00 00 00 00                                   .word 0
.text:003605C8 00 00 00 00                   currTextParam:  .word 0
.text:003605CC 00 00 00 00                                   .align 4
.text:003605D0 00 00 00 00                   arguments:      .word 0
.text:003605D4 00 00 00 00                   dword_3605D4:   .word 0
.text:003605D8 00 00 00 00                   dword_3605D8:   .word 0
.text:003605DC 00 00 00 00                   dword_3605DC:   .word 0
.text:003605E0 00 00 00 00                   dword_3605E0:   .word 0
.text:003605E4 00 00 00 00                   dword_3605E4:   .word 0
.text:003605E8 00 00 00 00                   dword_3605E8:   .word 0
.text:003605EC 00 00 00 00                   dword_3605EC:   .word 0
.text:003605F0 00 00 00 00                   dword_3605F0:   .word 0
.text:003605F4 00 00 00 00                   dword_3605F4:   .word 0
.text:003605F8 00 00 00 00                   dword_3605F8:   .word 0
.text:003605FC 00 00 00 00                   dword_3605FC:   .word 0
.text:00360600 00 00 00 00                   dword_360600:   .word 0
.text:00360604 00 00 00 00                   dword_360604:   .word 0
.text:00360608 00 00 00 00                   dword_360608:   .word 0
.text:00360608
.text:00360608                                                # end _Z17LoadUSBIOPModulesv