.text:0035C7E8                                # ===========================================================================
.text:0035C7E8
.text:0035C7E8                                # Segment type: Pure code
.text:0035C7E8                                               .text
.text:0035C7E8
.text:0035C7E8                                # =============== S U B R O U T I N E =======================================
.text:0035C7E8
.text:0035C7E8                                # Attributes: bp-based frame fpd=0x20
.text:0035C7E8
.text:0035C7E8                                # _DWORD __fastcall readString(CRunningScript *, char *, unsigned __int8)
.text:0035C7E8                                               .globl readString(CRunningScript *, char *, unsigned char)
.text:0035C7E8                               readString(CRunningScript *, char *, unsigned char):
.text:0035C7E8
.text:0035C7E8                               var_20          = -0x20
.text:0035C7E8                               var_10          = -0x10
.text:0035C7E8                               var_C           = -0xC
.text:0035C7E8                               var_8           = -8
.text:0035C7E8                               var_s0          =  0
.text:0035C7E8                               var_s8          =  8
.text:0035C7E8
.text:0035C7E8                                # __unwind {
.text:0035C7E8 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035C7EC 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035C7F0 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035C7F4 25 F0 A0 03                                   move    $fp, $sp
.text:0035C7F8 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035C7FC 14 00 C5 AF                                   sw      $a1, 0x20+var_C($fp)
.text:0035C800 25 10 C0 00                                   move    $v0, $a2
.text:0035C804 18 00 C2 A3                                   sb      $v0, 0x20+var_8($fp)
.text:0035C808 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)  # this
.text:0035C80C 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035C810 00 00 00 00                                   nop
.text:0035C814 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035C818 00 00 C2 A3                                   sb      $v0, 0x20+var_20($fp)
.text:0035C81C 00 00 C2 93                                   lbu     $v0, 0x20+var_20($fp)
.text:0035C820 04 00 40 14                                   bnez    $v0, loc_35C834
.text:0035C824 00 00 00 00                                   nop
.text:0035C828 25 10 00 00                                   move    $v0, $zero
.text:0035C82C 5D 00 00 10                                   b       loc_35C9A4
.text:0035C830 00 00 00 00                                   nop
.text:0035C834                                # ---------------------------------------------------------------------------
.text:0035C834
.text:0035C834                               loc_35C834:
.text:0035C834 00 00 C2 93                                   lbu     $v0, 0x20+var_20($fp)
.text:0035C838 2A 00 40 10                                   beqz    $v0, loc_35C8E4
.text:0035C83C 00 00 00 00                                   nop
.text:0035C840 00 00 C2 93                                   lbu     $v0, 0x20+var_20($fp)
.text:0035C844 09 00 42 2C                                   sltiu   $v0, 9
.text:0035C848 26 00 40 10                                   beqz    $v0, loc_35C8E4
.text:0035C84C 00 00 00 00                                   nop
.text:0035C850 01 00 05 24                                   li      $a1, 1
.text:0035C854 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035C858 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035C85C 00 00 00 00                                   nop
.text:0035C860 14 00 C2 8F                                   lw      $v0, 0x20+var_C($fp)
.text:0035C864 1B 00 40 10                                   beqz    $v0, loc_35C8D4
.text:0035C868 00 00 00 00                                   nop
.text:0035C86C 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C870 81 00 42 2C                                   sltiu   $v0, 0x81
.text:0035C874 07 00 40 10                                   beqz    $v0, loc_35C894
.text:0035C878 00 00 00 00                                   nop
.text:0035C87C 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C880 04 00 40 10                                   beqz    $v0, loc_35C894
.text:0035C884 00 00 00 00                                   nop
.text:0035C888 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C88C 02 00 00 10                                   b       loc_35C898
.text:0035C890 00 00 00 00                                   nop
.text:0035C894                                # ---------------------------------------------------------------------------
.text:0035C894
.text:0035C894                               loc_35C894:
.text:0035C894 80 00 02 24                                   li      $v0, 0x80
.text:0035C898
.text:0035C898                               loc_35C898:
.text:0035C898 18 00 C2 A3                                   sb      $v0, 0x20+var_8($fp)
.text:0035C89C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035C8A0 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035C8A4 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C8A8 FF FF 42 24                                   addiu   $v0, -1
.text:0035C8AC 25 30 40 00                                   move    $a2, $v0         # unsigned int
.text:0035C8B0 25 28 60 00                                   move    $a1, $v1         # char *
.text:0035C8B4 14 00 C4 8F                                   lw      $a0, 0x20+var_C($fp)  # char *
.text:0035C8B8 60 47 15 0C                                   jal     strncpy(char *,char const*,uint)
.text:0035C8BC 00 00 00 00                                   nop
.text:0035C8C0 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C8C4 FF FF 42 24                                   addiu   $v0, -1
.text:0035C8C8 14 00 C3 8F                                   lw      $v1, 0x20+var_C($fp)
.text:0035C8CC 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035C8D0 00 00 40 A0                                   sb      $zero, 0($v0)
.text:0035C8D4
.text:0035C8D4                               loc_35C8D4:
.text:0035C8D4 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035C8DC 31 00 00 10                                   b       loc_35C9A4
.text:0035C8E0 00 00 00 00                                   nop
.text:0035C8E4                                # ---------------------------------------------------------------------------
.text:0035C8E4
.text:0035C8E4                               loc_35C8E4:
.text:0035C8E4 14 00 C2 8F                                   lw      $v0, 0x20+var_C($fp)
.text:0035C8E8 13 00 40 14                                   bnez    $v0, loc_35C938
.text:0035C8EC 00 00 00 00                                   nop
.text:0035C8F0 36 00 02 3C C4 FF 42 8C                       lw      $v0, memset
.text:0035C8F8 80 00 06 24                                   li      $a2, 0x80
.text:0035C8FC 25 28 00 00                                   move    $a1, $zero
.text:0035C900 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035C904 18 02 64 24                                   addiu   $a0, $v1, (readString(CRunningScript *,char *,uchar)::result - 0x360000)
.text:0035C908 09 F8 40 00                                   jalr    $v0 ; sub_54E568
.text:0035C90C 00 00 00 00                                   nop
.text:0035C910 80 00 06 24                                   li      $a2, 0x80
.text:0035C914 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035C918 18 02 45 24                                   addiu   $a1, $v0, (readString(CRunningScript *,char *,uchar)::result - 0x360000)
.text:0035C91C 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035C920 80 DC 07 0C                                   jal     GetScriptStringParam(CRunningScript *,char *,uchar)
.text:0035C924 00 00 00 00                                   nop
.text:0035C928 36 00 02 3C 18 02 42 24                       li      $v0, readString(CRunningScript *,char *,uchar)::result
.text:0035C930 1C 00 00 10                                   b       loc_35C9A4
.text:0035C934 00 00 00 00                                   nop
.text:0035C938                                # ---------------------------------------------------------------------------
.text:0035C938
.text:0035C938                               loc_35C938:
.text:0035C938 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C93C 81 00 42 2C                                   sltiu   $v0, 0x81
.text:0035C940 07 00 40 10                                   beqz    $v0, loc_35C960
.text:0035C944 00 00 00 00                                   nop
.text:0035C948 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C94C 04 00 40 10                                   beqz    $v0, loc_35C960
.text:0035C950 00 00 00 00                                   nop
.text:0035C954 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C958 02 00 00 10                                   b       loc_35C964
.text:0035C95C 00 00 00 00                                   nop
.text:0035C960                                # ---------------------------------------------------------------------------
.text:0035C960
.text:0035C960                               loc_35C960:
.text:0035C960 80 00 02 24                                   li      $v0, 0x80
.text:0035C964
.text:0035C964                               loc_35C964:
.text:0035C964 18 00 C2 A3                                   sb      $v0, 0x20+var_8($fp)
.text:0035C968 36 00 02 3C C4 FF 42 8C                       lw      $v0, memset
.text:0035C970 18 00 C3 93                                   lbu     $v1, 0x20+var_8($fp)
.text:0035C974 25 30 60 00                                   move    $a2, $v1
.text:0035C978 25 28 00 00                                   move    $a1, $zero
.text:0035C97C 14 00 C4 8F                                   lw      $a0, 0x20+var_C($fp)
.text:0035C980 09 F8 40 00                                   jalr    $v0 ; sub_54E568
.text:0035C984 00 00 00 00                                   nop
.text:0035C988 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C98C 25 30 40 00                                   move    $a2, $v0
.text:0035C990 14 00 C5 8F                                   lw      $a1, 0x20+var_C($fp)
.text:0035C994 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035C998 80 DC 07 0C                                   jal     GetScriptStringParam(CRunningScript *,char *,uchar)
.text:0035C99C 00 00 00 00                                   nop
.text:0035C9A0 14 00 C2 8F                                   lw      $v0, 0x20+var_C($fp)
.text:0035C9A4
.text:0035C9A4                               loc_35C9A4:
.text:0035C9A4 25 E8 C0 03                                   move    $sp, $fp
.text:0035C9A8 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035C9AC 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035C9B0 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035C9B4 08 00 E0 03                                   jr      $ra
.text:0035C9B8 00 00 00 00                                   nop
.text:0035C9B8                                # } // starts at 35C7E8
.text:0035C9B8                                # End of function readString(CRunningScript *,char *,uchar)
.text:0035C9B8
.text:0035C9BC
.text:0035C9BC                                # =============== S U B R O U T I N E =======================================
.text:0035C9BC
.text:0035C9BC                                # Attributes: bp-based frame fpd=0x170
.text:0035C9BC
.text:0035C9BC                                # _DWORD __fastcall format(CRunningScript *, char *, unsigned int, const char *)
.text:0035C9BC                                               .globl format(CRunningScript *, char *, unsigned int, char const*)
.text:0035C9BC                               format(CRunningScript *, char *, unsigned int, char const*):
.text:0035C9BC
.text:0035C9BC                               var_170         = -0x170
.text:0035C9BC                               var_16C         = -0x16C
.text:0035C9BC                               var_168         = -0x168
.text:0035C9BC                               var_164         = -0x164
.text:0035C9BC                               var_160         = -0x160
.text:0035C9BC                               var_15C         = -0x15C
.text:0035C9BC                               var_158         = -0x158
.text:0035C9BC                               var_154         = -0x154
.text:0035C9BC                               var_150         = -0x150
.text:0035C9BC                               var_50          = -0x50
.text:0035C9BC                               var_10          = -0x10
.text:0035C9BC                               var_C           = -0xC
.text:0035C9BC                               var_8           = -8
.text:0035C9BC                               var_4           = -4
.text:0035C9BC                               var_s0          =  0
.text:0035C9BC                               var_s8          =  8
.text:0035C9BC
.text:0035C9BC                                # __unwind {
.text:0035C9BC 80 FE BD 27                                   addiu   $sp, -0x180
.text:0035C9C0 78 01 BF FF                                   sd      $ra, 0x170+var_s8($sp)
.text:0035C9C4 70 01 BE FF                                   sd      $fp, 0x170+var_s0($sp)
.text:0035C9C8 25 F0 A0 03                                   move    $fp, $sp
.text:0035C9CC 60 01 C4 AF                                   sw      $a0, 0x170+var_10($fp)
.text:0035C9D0 64 01 C5 AF                                   sw      $a1, 0x170+var_C($fp)
.text:0035C9D4 68 01 C6 AF                                   sw      $a2, 0x170+var_8($fp)
.text:0035C9D8 6C 01 C7 AF                                   sw      $a3, 0x170+var_4($fp)
.text:0035C9DC 00 00 C0 AF                                   sw      $zero, 0x170+var_170($fp)
.text:0035C9E0 6C 01 C2 8F                                   lw      $v0, 0x170+var_4($fp)
.text:0035C9E4 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035C9E8 CF 01 00 10                                   b       loc_35D128
.text:0035C9EC 00 00 00 00                                   nop
.text:0035C9F0                                # ---------------------------------------------------------------------------
.text:0035C9F0
.text:0035C9F0                               loc_35C9F0:
.text:0035C9F0 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035C9F4 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035C9F8 00 00 C3 AF                                   sw      $v1, 0x170+var_170($fp)
.text:0035C9FC 68 01 C3 8F                                   lw      $v1, 0x170+var_8($fp)
.text:0035CA00 2B 10 43 00                                   sltu    $v0, $v1
.text:0035CA04 01 00 42 38                                   xori    $v0, 1
.text:0035CA08 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CA0C 04 00 40 10                                   beqz    $v0, loc_35CA20
.text:0035CA10 00 00 00 00                                   nop
.text:0035CA14 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035CA18 D4 01 00 10                                   b       loc_35D16C
.text:0035CA1C 00 00 00 00                                   nop
.text:0035CA20                                # ---------------------------------------------------------------------------
.text:0035CA20
.text:0035CA20                               loc_35CA20:
.text:0035CA20 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CA24 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CA28 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CA2C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CA30 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035CA34 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CA38 64 01 C4 AF                                   sw      $a0, 0x170+var_C($fp)
.text:0035CA3C 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CA40
.text:0035CA40                               loc_35CA40:
.text:0035CA40 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CA44 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CA48 06 00 40 10                                   beqz    $v0, loc_35CA64
.text:0035CA4C 00 00 00 00                                   nop
.text:0035CA50 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CA54 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CA58 25 00 02 24                                   li      $v0, 0x25  # '%'
.text:0035CA5C E4 FF 62 14                                   bne     $v1, $v0, loc_35C9F0
.text:0035CA60 00 00 00 00                                   nop
.text:0035CA64
.text:0035CA64                               loc_35CA64:
.text:0035CA64 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CA68 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CA6C 25 00 02 24                                   li      $v0, 0x25  # '%'
.text:0035CA70 AD 01 62 14                                   bne     $v1, $v0, loc_35D128
.text:0035CA74 00 00 00 00                                   nop
.text:0035CA78 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CA7C 01 00 42 24                                   addiu   $v0, 1
.text:0035CA80 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CA84 25 00 02 24                                   li      $v0, 0x25  # '%'
.text:0035CA88 17 00 62 14                                   bne     $v1, $v0, loc_35CAE8
.text:0035CA8C 00 00 00 00                                   nop
.text:0035CA90 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035CA94 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CA98 00 00 C3 AF                                   sw      $v1, 0x170+var_170($fp)
.text:0035CA9C 68 01 C3 8F                                   lw      $v1, 0x170+var_8($fp)
.text:0035CAA0 2B 10 43 00                                   sltu    $v0, $v1
.text:0035CAA4 01 00 42 38                                   xori    $v0, 1
.text:0035CAA8 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CAAC 04 00 40 10                                   beqz    $v0, loc_35CAC0
.text:0035CAB0 00 00 00 00                                   nop
.text:0035CAB4 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035CAB8 AC 01 00 10                                   b       loc_35D16C
.text:0035CABC 00 00 00 00                                   nop
.text:0035CAC0                                # ---------------------------------------------------------------------------
.text:0035CAC0
.text:0035CAC0                               loc_35CAC0:
.text:0035CAC0 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035CAC4 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CAC8 64 01 C3 AF                                   sw      $v1, 0x170+var_C($fp)
.text:0035CACC 25 00 03 24                                   li      $v1, 0x25  # '%'
.text:0035CAD0 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CAD4 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CAD8 02 00 42 24                                   addiu   $v0, 2
.text:0035CADC 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035CAE0 91 01 00 10                                   b       loc_35D128
.text:0035CAE4 00 00 00 00                                   nop
.text:0035CAE8                                # ---------------------------------------------------------------------------
.text:0035CAE8
.text:0035CAE8                               loc_35CAE8:
.text:0035CAE8 20 01 C2 27                                   addiu   $v0, $fp, 0x170+var_50
.text:0035CAEC 08 00 C2 AF                                   sw      $v0, 0x170+var_168($fp)
.text:0035CAF0 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CAF4 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CAF8 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CAFC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CB00 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CB04 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CB08 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CB0C 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CB10 2D 00 00 10                                   b       loc_35CBC8
.text:0035CB14 00 00 00 00                                   nop
.text:0035CB18                                # ---------------------------------------------------------------------------
.text:0035CB18
.text:0035CB18                               loc_35CB18:
.text:0035CB18 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CB1C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CB20 2A 00 02 24                                   li      $v0, 0x2A  # '*'
.text:0035CB24 1F 00 62 14                                   bne     $v1, $v0, loc_35CBA4
.text:0035CB28 00 00 00 00                                   nop
.text:0035CB2C 20 00 C2 27                                   addiu   $v0, $fp, 0x170+var_150
.text:0035CB30 0C 00 C2 AF                                   sw      $v0, 0x170+var_164($fp)
.text:0035CB34 01 00 05 24                                   li      $a1, 1
.text:0035CB38 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035CB3C F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035CB40 00 00 00 00                                   nop
.text:0035CB44 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035CB4C 25 30 40 00                                   move    $a2, $v0
.text:0035CB50 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035CB54 78 FD 45 24                                   addiu   $a1, $v0, (int_fmt - 0x360000)  # char *
.text:0035CB58 0C 00 C4 8F                                   lw      $a0, 0x170+var_164($fp)  # char *
.text:0035CB5C C4 43 15 0C                                   jal     sprintf(char *,char const*,...)
.text:0035CB60 00 00 00 00                                   nop
.text:0035CB64 09 00 00 10                                   b       loc_35CB8C
.text:0035CB68 00 00 00 00                                   nop
.text:0035CB6C                                # ---------------------------------------------------------------------------
.text:0035CB6C
.text:0035CB6C                               loc_35CB6C:
.text:0035CB6C 0C 00 C2 8F                                   lw      $v0, 0x170+var_164($fp)
.text:0035CB70 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CB74 0C 00 C3 AF                                   sw      $v1, 0x170+var_164($fp)
.text:0035CB78 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CB7C 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CB80 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CB84 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CB88 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CB8C
.text:0035CB8C                               loc_35CB8C:
.text:0035CB8C 0C 00 C2 8F                                   lw      $v0, 0x170+var_164($fp)
.text:0035CB90 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CB94 F5 FF 40 14                                   bnez    $v0, loc_35CB6C
.text:0035CB98 00 00 00 00                                   nop
.text:0035CB9C 07 00 00 10                                   b       loc_35CBBC
.text:0035CBA0 00 00 00 00                                   nop
.text:0035CBA4                                # ---------------------------------------------------------------------------
.text:0035CBA4
.text:0035CBA4                               loc_35CBA4:
.text:0035CBA4 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CBA8 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CBAC 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CBB0 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CBB4 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CBB8 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CBBC
.text:0035CBBC                               loc_35CBBC:
.text:0035CBBC 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CBC0 01 00 42 24                                   addiu   $v0, 1
.text:0035CBC4 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035CBC8
.text:0035CBC8                               loc_35CBC8:
.text:0035CBC8 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CBCC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CBD0 30 00 02 24                                   li      $v0, 0x30  # '0'
.text:0035CBD4 D0 FF 62 10                                   beq     $v1, $v0, loc_35CB18
.text:0035CBD8 00 00 00 00                                   nop
.text:0035CBDC 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CBE0 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CBE4 2B 00 02 24                                   li      $v0, 0x2B  # '+'
.text:0035CBE8 CB FF 62 10                                   beq     $v1, $v0, loc_35CB18
.text:0035CBEC 00 00 00 00                                   nop
.text:0035CBF0 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CBF4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CBF8 2D 00 02 24                                   li      $v0, 0x2D  # '-'
.text:0035CBFC C6 FF 62 10                                   beq     $v1, $v0, loc_35CB18
.text:0035CC00 00 00 00 00                                   nop
.text:0035CC04 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC08 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC0C 20 00 02 24                                   li      $v0, 0x20  # ' '
.text:0035CC10 C1 FF 62 10                                   beq     $v1, $v0, loc_35CB18
.text:0035CC14 00 00 00 00                                   nop
.text:0035CC18 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC1C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC20 2A 00 02 24                                   li      $v0, 0x2A  # '*'
.text:0035CC24 BC FF 62 10                                   beq     $v1, $v0, loc_35CB18
.text:0035CC28 00 00 00 00                                   nop
.text:0035CC2C 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC30 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC34 23 00 02 24                                   li      $v0, 0x23  # '#'
.text:0035CC38 B7 FF 62 10                                   beq     $v1, $v0, loc_35CB18
.text:0035CC3C 00 00 00 00                                   nop
.text:0035CC40 09 00 00 10                                   b       loc_35CC68
.text:0035CC44 00 00 00 00                                   nop
.text:0035CC48                                # ---------------------------------------------------------------------------
.text:0035CC48
.text:0035CC48                               loc_35CC48:
.text:0035CC48 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC4C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CC50 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CC54 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC58 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CC5C 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CC60 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CC64 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CC68
.text:0035CC68                               loc_35CC68:
.text:0035CC68 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC6C 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CC70 D0 FF 42 24                                   addiu   $v0, -0x30
.text:0035CC74 0A 00 42 2C                                   sltiu   $v0, 0xA
.text:0035CC78 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CC7C F2 FF 40 14                                   bnez    $v0, loc_35CC48
.text:0035CC80 00 00 00 00                                   nop
.text:0035CC84 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC88 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC8C 2E 00 02 24                                   li      $v0, 0x2E  # '.'
.text:0035CC90 3B 00 62 14                                   bne     $v1, $v0, loc_35CD80
.text:0035CC94 00 00 00 00                                   nop
.text:0035CC98 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC9C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CCA0 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CCA4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CCA8 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CCAC 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CCB0 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CCB4 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CCB8 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CCBC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CCC0 2A 00 02 24                                   li      $v0, 0x2A  # '*'
.text:0035CCC4 27 00 62 14                                   bne     $v1, $v0, loc_35CD64
.text:0035CCC8 00 00 00 00                                   nop
.text:0035CCCC 20 00 C2 27                                   addiu   $v0, $fp, 0x170+var_150
.text:0035CCD0 10 00 C2 AF                                   sw      $v0, 0x170+var_160($fp)
.text:0035CCD4 01 00 05 24                                   li      $a1, 1
.text:0035CCD8 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035CCDC F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035CCE0 00 00 00 00                                   nop
.text:0035CCE4 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035CCEC 25 30 40 00                                   move    $a2, $v0
.text:0035CCF0 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035CCF4 78 FD 45 24                                   addiu   $a1, $v0, (int_fmt - 0x360000)  # char *
.text:0035CCF8 10 00 C4 8F                                   lw      $a0, 0x170+var_160($fp)  # char *
.text:0035CCFC C4 43 15 0C                                   jal     sprintf(char *,char const*,...)
.text:0035CD00 00 00 00 00                                   nop
.text:0035CD04 09 00 00 10                                   b       loc_35CD2C
.text:0035CD08 00 00 00 00                                   nop
.text:0035CD0C                                # ---------------------------------------------------------------------------
.text:0035CD0C
.text:0035CD0C                               loc_35CD0C:
.text:0035CD0C 10 00 C2 8F                                   lw      $v0, 0x170+var_160($fp)
.text:0035CD10 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CD14 10 00 C3 AF                                   sw      $v1, 0x170+var_160($fp)
.text:0035CD18 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CD1C 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CD20 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CD24 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CD28 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CD2C
.text:0035CD2C                               loc_35CD2C:
.text:0035CD2C 10 00 C2 8F                                   lw      $v0, 0x170+var_160($fp)
.text:0035CD30 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CD34 F5 FF 40 14                                   bnez    $v0, loc_35CD0C
.text:0035CD38 00 00 00 00                                   nop
.text:0035CD3C 10 00 00 10                                   b       loc_35CD80
.text:0035CD40 00 00 00 00                                   nop
.text:0035CD44                                # ---------------------------------------------------------------------------
.text:0035CD44
.text:0035CD44                               loc_35CD44:
.text:0035CD44 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CD48 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CD4C 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CD50 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CD54 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CD58 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CD5C 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CD60 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CD64
.text:0035CD64                               loc_35CD64:
.text:0035CD64 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CD68 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CD6C D0 FF 42 24                                   addiu   $v0, -0x30
.text:0035CD70 0A 00 42 2C                                   sltiu   $v0, 0xA
.text:0035CD74 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CD78 F2 FF 40 14                                   bnez    $v0, loc_35CD44
.text:0035CD7C 00 00 00 00                                   nop
.text:0035CD80
.text:0035CD80                               loc_35CD80:
.text:0035CD80 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CD84 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CD88 68 00 02 24                                   li      $v0, 0x68  # 'h'
.text:0035CD8C 06 00 62 10                                   beq     $v1, $v0, loc_35CDA8
.text:0035CD90 00 00 00 00                                   nop
.text:0035CD94 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CD98 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CD9C 6C 00 02 24                                   li      $v0, 0x6C  # 'l'
.text:0035CDA0 09 00 62 14                                   bne     $v1, $v0, loc_35CDC8
.text:0035CDA4 00 00 00 00                                   nop
.text:0035CDA8
.text:0035CDA8                               loc_35CDA8:
.text:0035CDA8 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CDAC 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CDB0 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CDB4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CDB8 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CDBC 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CDC0 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CDC4 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CDC8
.text:0035CDC8                               loc_35CDC8:
.text:0035CDC8 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CDCC 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CDD0 63 00 03 24                                   li      $v1, 0x63  # 'c'
.text:0035CDD4 32 00 43 10                                   beq     $v0, $v1, loc_35CEA0
.text:0035CDD8 00 00 00 00                                   nop
.text:0035CDDC 73 00 03 24                                   li      $v1, 0x73  # 's'
.text:0035CDE0 4C 00 43 14                                   bne     $v0, $v1, loc_35CF14
.text:0035CDE4 00 00 00 00                                   nop
.text:0035CDE8 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035CDEC 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035CDF0 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)  # CRunningScript *
.text:0035CDF4 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035CDF8 00 00 00 00                                   nop
.text:0035CDFC 1C 00 C2 AF                                   sw      $v0, 0x170+var_154($fp)
.text:0035CE00 1C 00 C2 8F                                   lw      $v0, 0x170+var_154($fp)
.text:0035CE04 04 00 40 10                                   beqz    $v0, loc_35CE18
.text:0035CE08 00 00 00 00                                   nop
.text:0035CE0C 1C 00 C2 8F                                   lw      $v0, 0x170+var_154($fp)
.text:0035CE10 03 00 00 10                                   b       loc_35CE20
.text:0035CE14 00 00 00 00                                   nop
.text:0035CE18                                # ---------------------------------------------------------------------------
.text:0035CE18
.text:0035CE18                               loc_35CE18:
.text:0035CE18 36 00 02 3C 90 FD 42 24                       li      $v0, none
.text:0035CE20
.text:0035CE20                               loc_35CE20:
.text:0035CE20 14 00 C2 AF                                   sw      $v0, 0x170+var_15C($fp)
.text:0035CE24 15 00 00 10                                   b       loc_35CE7C
.text:0035CE28 00 00 00 00                                   nop
.text:0035CE2C                                # ---------------------------------------------------------------------------
.text:0035CE2C
.text:0035CE2C                               loc_35CE2C:
.text:0035CE2C 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035CE30 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CE34 00 00 C3 AF                                   sw      $v1, 0x170+var_170($fp)
.text:0035CE38 68 01 C3 8F                                   lw      $v1, 0x170+var_8($fp)
.text:0035CE3C 2B 10 43 00                                   sltu    $v0, $v1
.text:0035CE40 01 00 42 38                                   xori    $v0, 1
.text:0035CE44 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CE48 04 00 40 10                                   beqz    $v0, loc_35CE5C
.text:0035CE4C 00 00 00 00                                   nop
.text:0035CE50 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035CE54 C5 00 00 10                                   b       loc_35D16C
.text:0035CE58 00 00 00 00                                   nop
.text:0035CE5C                                # ---------------------------------------------------------------------------
.text:0035CE5C
.text:0035CE5C                               loc_35CE5C:
.text:0035CE5C 14 00 C2 8F                                   lw      $v0, 0x170+var_15C($fp)
.text:0035CE60 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CE64 14 00 C3 AF                                   sw      $v1, 0x170+var_15C($fp)
.text:0035CE68 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CE6C 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035CE70 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CE74 64 01 C4 AF                                   sw      $a0, 0x170+var_C($fp)
.text:0035CE78 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CE7C
.text:0035CE7C                               loc_35CE7C:
.text:0035CE7C 14 00 C2 8F                                   lw      $v0, 0x170+var_15C($fp)
.text:0035CE80 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CE84 E9 FF 40 14                                   bnez    $v0, loc_35CE2C
.text:0035CE88 00 00 00 00                                   nop
.text:0035CE8C 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CE90 01 00 42 24                                   addiu   $v0, 1
.text:0035CE94 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035CE98 A3 00 00 10                                   b       loc_35D128
.text:0035CE9C 00 00 00 00                                   nop
.text:0035CEA0                                # ---------------------------------------------------------------------------
.text:0035CEA0
.text:0035CEA0                               loc_35CEA0:
.text:0035CEA0 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035CEA4 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CEA8 00 00 C3 AF                                   sw      $v1, 0x170+var_170($fp)
.text:0035CEAC 68 01 C3 8F                                   lw      $v1, 0x170+var_8($fp)
.text:0035CEB0 2B 10 43 00                                   sltu    $v0, $v1
.text:0035CEB4 01 00 42 38                                   xori    $v0, 1
.text:0035CEB8 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CEBC 04 00 40 10                                   beqz    $v0, loc_35CED0
.text:0035CEC0 00 00 00 00                                   nop
.text:0035CEC4 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035CEC8 A8 00 00 10                                   b       loc_35D16C
.text:0035CECC 00 00 00 00                                   nop
.text:0035CED0                                # ---------------------------------------------------------------------------
.text:0035CED0
.text:0035CED0                               loc_35CED0:
.text:0035CED0 01 00 05 24                                   li      $a1, 1
.text:0035CED4 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035CED8 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035CEDC 00 00 00 00                                   nop
.text:0035CEE0 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035CEE8 00 1E 02 00                                   sll     $v1, $v0, 24
.text:0035CEEC 03 1E 03 00                                   sra     $v1, 24
.text:0035CEF0 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035CEF4 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CEF8 64 01 C4 AF                                   sw      $a0, 0x170+var_C($fp)
.text:0035CEFC 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CF00 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CF04 01 00 42 24                                   addiu   $v0, 1
.text:0035CF08 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035CF0C 86 00 00 10                                   b       loc_35D128
.text:0035CF10 00 00 00 00                                   nop
.text:0035CF14                                # ---------------------------------------------------------------------------
.text:0035CF14
.text:0035CF14                               loc_35CF14:
.text:0035CF14 20 00 C2 27                                   addiu   $v0, $fp, 0x170+var_150
.text:0035CF18 18 00 C2 AF                                   sw      $v0, 0x170+var_158($fp)
.text:0035CF1C 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CF20 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CF24 70 00 02 24                                   li      $v0, 0x70  # 'p'
.text:0035CF28 06 00 62 10                                   beq     $v1, $v0, loc_35CF44
.text:0035CF2C 00 00 00 00                                   nop
.text:0035CF30 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CF34 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CF38 50 00 02 24                                   li      $v0, 0x50  # 'P'
.text:0035CF3C 0F 00 62 14                                   bne     $v1, $v0, loc_35CF7C
.text:0035CF40 00 00 00 00                                   nop
.text:0035CF44
.text:0035CF44                               loc_35CF44:
.text:0035CF44 01 00 05 24                                   li      $a1, 1
.text:0035CF48 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035CF4C F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035CF50 00 00 00 00                                   nop
.text:0035CF54 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035CF5C 25 30 40 00                                   move    $a2, $v0
.text:0035CF60 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035CF64 80 FD 45 24                                   addiu   $a1, $v0, (ptrstr - 0x360000)
.text:0035CF68 18 00 C4 8F                                   lw      $a0, 0x170+var_158($fp)  # char *
.text:0035CF6C C4 43 15 0C                                   jal     sprintf(char *,char const*,...)
.text:0035CF70 00 00 00 00                                   nop
.text:0035CF74 4E 00 00 10                                   b       loc_35D0B0
.text:0035CF78 00 00 00 00                                   nop
.text:0035CF7C                                # ---------------------------------------------------------------------------
.text:0035CF7C
.text:0035CF7C                               loc_35CF7C:
.text:0035CF7C 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CF80 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CF84 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CF88 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CF8C 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CF90 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CF94 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CF98 00 00 40 A0                                   sb      $zero, 0($v0)
.text:0035CF9C 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CFA0 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFA4 61 00 02 24                                   li      $v0, 0x61  # 'a'
.text:0035CFA8 24 00 62 10                                   beq     $v1, $v0, loc_35D03C
.text:0035CFAC 00 00 00 00                                   nop
.text:0035CFB0 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CFB4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFB8 41 00 02 24                                   li      $v0, 0x41  # 'A'
.text:0035CFBC 1F 00 62 10                                   beq     $v1, $v0, loc_35D03C
.text:0035CFC0 00 00 00 00                                   nop
.text:0035CFC4 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CFC8 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFCC 65 00 02 24                                   li      $v0, 0x65  # 'e'
.text:0035CFD0 1A 00 62 10                                   beq     $v1, $v0, loc_35D03C
.text:0035CFD4 00 00 00 00                                   nop
.text:0035CFD8 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CFDC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFE0 45 00 02 24                                   li      $v0, 0x45  # 'E'
.text:0035CFE4 15 00 62 10                                   beq     $v1, $v0, loc_35D03C
.text:0035CFE8 00 00 00 00                                   nop
.text:0035CFEC 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CFF0 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFF4 66 00 02 24                                   li      $v0, 0x66  # 'f'
.text:0035CFF8 10 00 62 10                                   beq     $v1, $v0, loc_35D03C
.text:0035CFFC 00 00 00 00                                   nop
.text:0035D000 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035D004 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D008 46 00 02 24                                   li      $v0, 0x46  # 'F'
.text:0035D00C 0B 00 62 10                                   beq     $v1, $v0, loc_35D03C
.text:0035D010 00 00 00 00                                   nop
.text:0035D014 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035D018 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D01C 67 00 02 24                                   li      $v0, 0x67  # 'g'
.text:0035D020 06 00 62 10                                   beq     $v1, $v0, loc_35D03C
.text:0035D024 00 00 00 00                                   nop
.text:0035D028 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035D02C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D030 47 00 02 24                                   li      $v0, 0x47  # 'G'
.text:0035D034 12 00 62 14                                   bne     $v1, $v0, loc_35D080
.text:0035D038 00 00 00 00                                   nop
.text:0035D03C
.text:0035D03C                               loc_35D03C:
.text:0035D03C 01 00 05 24                                   li      $a1, 1
.text:0035D040 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035D044 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D048 00 00 00 00                                   nop
.text:0035D04C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D050 B0 DF 40 C4                                   lwc1    $f0, opcodeParams
.text:0035D054 06 03 00 46                                   mov.s   $f12, $f0        # float
.text:0035D058 50 C4 14 0C                                   jal     __extendsfdf2(float)
.text:0035D05C 00 00 00 00                                   nop
.text:0035D060 25 30 40 00                                   move    $a2, $v0
.text:0035D064 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035D068 88 FD 45 24                                   addiu   $a1, $v0, (fltstr - 0x360000)  # char *
.text:0035D06C 18 00 C4 8F                                   lw      $a0, 0x170+var_158($fp)  # char *
.text:0035D070 C4 43 15 0C                                   jal     sprintf(char *,char const*,...)
.text:0035D074 00 00 00 00                                   nop
.text:0035D078 0D 00 00 10                                   b       loc_35D0B0
.text:0035D07C 00 00 00 00                                   nop
.text:0035D080                                # ---------------------------------------------------------------------------
.text:0035D080
.text:0035D080                               loc_35D080:
.text:0035D080 01 00 05 24                                   li      $a1, 1
.text:0035D084 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035D088 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D08C 00 00 00 00                                   nop
.text:0035D090 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035D098 20 01 C3 27                                   addiu   $v1, $fp, 0x170+var_50
.text:0035D09C 25 30 40 00                                   move    $a2, $v0
.text:0035D0A0 25 28 60 00                                   move    $a1, $v1         # char *
.text:0035D0A4 18 00 C4 8F                                   lw      $a0, 0x170+var_158($fp)  # char *
.text:0035D0A8 C4 43 15 0C                                   jal     sprintf(char *,char const*,...)
.text:0035D0AC 00 00 00 00                                   nop
.text:0035D0B0
.text:0035D0B0                               loc_35D0B0:
.text:0035D0B0 15 00 00 10                                   b       loc_35D108
.text:0035D0B4 00 00 00 00                                   nop
.text:0035D0B8                                # ---------------------------------------------------------------------------
.text:0035D0B8
.text:0035D0B8                               loc_35D0B8:
.text:0035D0B8 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035D0BC 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D0C0 00 00 C3 AF                                   sw      $v1, 0x170+var_170($fp)
.text:0035D0C4 68 01 C3 8F                                   lw      $v1, 0x170+var_8($fp)
.text:0035D0C8 2B 10 43 00                                   sltu    $v0, $v1
.text:0035D0CC 01 00 42 38                                   xori    $v0, 1
.text:0035D0D0 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035D0D4 04 00 40 10                                   beqz    $v0, loc_35D0E8
.text:0035D0D8 00 00 00 00                                   nop
.text:0035D0DC FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035D0E0 22 00 00 10                                   b       loc_35D16C
.text:0035D0E4 00 00 00 00                                   nop
.text:0035D0E8                                # ---------------------------------------------------------------------------
.text:0035D0E8
.text:0035D0E8                               loc_35D0E8:
.text:0035D0E8 18 00 C2 8F                                   lw      $v0, 0x170+var_158($fp)
.text:0035D0EC 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D0F0 18 00 C3 AF                                   sw      $v1, 0x170+var_158($fp)
.text:0035D0F4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D0F8 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035D0FC 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035D100 64 01 C4 AF                                   sw      $a0, 0x170+var_C($fp)
.text:0035D104 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035D108
.text:0035D108                               loc_35D108:
.text:0035D108 18 00 C2 8F                                   lw      $v0, 0x170+var_158($fp)
.text:0035D10C 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035D110 E9 FF 40 14                                   bnez    $v0, loc_35D0B8
.text:0035D114 00 00 00 00                                   nop
.text:0035D118 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035D11C 01 00 42 24                                   addiu   $v0, 1
.text:0035D120 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035D124 00 00 00 00                                   nop
.text:0035D128
.text:0035D128                               loc_35D128:
.text:0035D128 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035D12C 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035D130 43 FE 40 14                                   bnez    $v0, loc_35CA40
.text:0035D134 00 00 00 00                                   nop
.text:0035D138 00 00 C3 8F                                   lw      $v1, 0x170+var_170($fp)
.text:0035D13C 68 01 C2 8F                                   lw      $v0, 0x170+var_8($fp)
.text:0035D140 2B 10 62 00                                   sltu    $v0, $v1, $v0
.text:0035D144 04 00 40 14                                   bnez    $v0, loc_35D158
.text:0035D148 00 00 00 00                                   nop
.text:0035D14C FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035D150 06 00 00 10                                   b       loc_35D16C
.text:0035D154 00 00 00 00                                   nop
.text:0035D158                                # ---------------------------------------------------------------------------
.text:0035D158
.text:0035D158                               loc_35D158:
.text:0035D158 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035D15C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D160 64 01 C3 AF                                   sw      $v1, 0x170+var_C($fp)
.text:0035D164 00 00 40 A0                                   sb      $zero, 0($v0)
.text:0035D168 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035D16C
.text:0035D16C                               loc_35D16C:
.text:0035D16C 25 E8 C0 03                                   move    $sp, $fp
.text:0035D170 78 01 BF DF                                   ld      $ra, 0x170+var_s8($sp)
.text:0035D174 70 01 BE DF                                   ld      $fp, 0x170+var_s0($sp)
.text:0035D178 80 01 BD 27                                   addiu   $sp, 0x180
.text:0035D17C 08 00 E0 03                                   jr      $ra
.text:0035D180 00 00 00 00                                   nop
.text:0035D180                                # } // starts at 35C9BC
.text:0035D180                                # End of function format(CRunningScript *,char *,uint,char const*)
.text:0035D180
.text:0035D184
.text:0035D184                                # =============== S U B R O U T I N E =======================================
.text:0035D184
.text:0035D184                                # Attributes: bp-based frame fpd=0x10
.text:0035D184
.text:0035D184                                               .globl customOpcodeHandler(CRunningScript *, unsigned short)
.text:0035D184                               customOpcodeHandler(CRunningScript *, unsigned short):
.text:0035D184
.text:0035D184                               var_10          = -0x10
.text:0035D184                               var_C           = -0xC
.text:0035D184                               var_s0          =  0
.text:0035D184                               var_s8          =  8
.text:0035D184
.text:0035D184                                # __unwind {
.text:0035D184 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D188 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D18C 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D190 25 F0 A0 03                                   move    $fp, $sp
.text:0035D194 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D198 25 10 A0 00                                   move    $v0, $a1
.text:0035D19C 04 00 C2 A7                                   sh      $v0, 0x10+var_C($fp)
.text:0035D1A0 04 00 C2 97                                   lhu     $v0, 0x10+var_C($fp)
.text:0035D1A4 74 F5 43 24                                   addiu   $v1, $v0, -0xA8C
.text:0035D1A8 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035D1AC 80 18 03 00                                   sll     $v1, 2
.text:0035D1B0 08 00 42 24                                   li      $v0, customOpcodeHandlers
.text:0035D1B4 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035D1B8 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035D1BC 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D1C0 09 F8 40 00                                   jalr    $v0
.text:0035D1C4 00 00 00 00                                   nop
.text:0035D1C8 25 E8 C0 03                                   move    $sp, $fp
.text:0035D1CC 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D1D0 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D1D4 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D1D8 08 00 E0 03                                   jr      $ra
.text:0035D1DC 00 00 00 00                                   nop
.text:0035D1DC                                # } // starts at 35D184
.text:0035D1DC                                # End of function customOpcodeHandler(CRunningScript *,ushort)
.text:0035D1DC
.text:0035D1E0
.text:0035D1E0                                # =============== S U B R O U T I N E =======================================
.text:0035D1E0
.text:0035D1E0                                # Attributes: bp-based frame fpd=0x18
.text:0035D1E0
.text:0035D1E0                                               .globl opcode_defa(CRunningScript *)
.text:0035D1E0                               opcode_defa(CRunningScript *):
.text:0035D1E0
.text:0035D1E0                               var_18          = -0x18
.text:0035D1E0                               var_s0          =  0
.text:0035D1E0
.text:0035D1E0                                # __unwind {
.text:0035D1E0 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D1E4 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035D1E8 25 F0 A0 03                                   move    $fp, $sp
.text:0035D1EC 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035D1F0 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035D1F4 25 E8 C0 03                                   move    $sp, $fp
.text:0035D1F8 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035D1FC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D200 08 00 E0 03                                   jr      $ra
.text:0035D204 00 00 00 00                                   nop
.text:0035D204                                # } // starts at 35D1E0
.text:0035D204                                # End of function opcode_defa(CRunningScript *)
.text:0035D204
.text:0035D208
.text:0035D208                                # =============== S U B R O U T I N E =======================================
.text:0035D208
.text:0035D208                                # Attributes: bp-based frame fpd=0x20
.text:0035D208
.text:0035D208                                               .globl opcode_0A8C(CRunningScript *)
.text:0035D208                               opcode_0A8C(CRunningScript *):
.text:0035D208
.text:0035D208                               var_20          = -0x20
.text:0035D208                               var_1C          = -0x1C
.text:0035D208                               var_10          = -0x10
.text:0035D208                               var_s0          =  0
.text:0035D208                               var_s8          =  8
.text:0035D208
.text:0035D208                                # __unwind {
.text:0035D208 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D20C 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035D210 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035D214 25 F0 A0 03                                   move    $fp, $sp
.text:0035D218 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035D21C 03 00 05 24                                   li      $a1, 3
.text:0035D220 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035D224 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D228 00 00 00 00                                   nop
.text:0035D22C 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035D234 00 00 C2 AF                                   sw      $v0, 0x20+var_20($fp)
.text:0035D238 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D240 04 00 42 8C                                   lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
.text:0035D244 04 00 C2 AF                                   sw      $v0, 0x20+var_1C($fp)
.text:0035D248 04 00 C3 8F                                   lw      $v1, 0x20+var_1C($fp)
.text:0035D24C 02 00 02 24                                   li      $v0, 2
.text:0035D250 0D 00 62 10                                   beq     $v1, $v0, loc_35D288
.text:0035D254 00 00 00 00                                   nop
.text:0035D258 04 00 C3 8F                                   lw      $v1, 0x20+var_1C($fp)
.text:0035D25C 04 00 02 24                                   li      $v0, 4
.text:0035D260 11 00 62 10                                   beq     $v1, $v0, loc_35D2A8
.text:0035D264 00 00 00 00                                   nop
.text:0035D268 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D270 08 00 42 90                                   lbu     $v0, (dword_6FDFB8 - 0x6FDFB0)($v0)
.text:0035D274 25 18 40 00                                   move    $v1, $v0
.text:0035D278 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D27C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D280 0F 00 00 10                                   b       loc_35D2C0
.text:0035D284 00 00 00 00                                   nop
.text:0035D288                                # ---------------------------------------------------------------------------
.text:0035D288
.text:0035D288                               loc_35D288:
.text:0035D288 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D290 08 00 42 84                                   lh      $v0, (dword_6FDFB8 - 0x6FDFB0)($v0)
.text:0035D294 25 18 40 00                                   move    $v1, $v0
.text:0035D298 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D29C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D2A0 07 00 00 10                                   b       loc_35D2C0
.text:0035D2A4 00 00 00 00                                   nop
.text:0035D2A8                                # ---------------------------------------------------------------------------
.text:0035D2A8
.text:0035D2A8                               loc_35D2A8:
.text:0035D2A8 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D2B0 08 00 43 8C                                   lw      $v1, (dword_6FDFB8 - 0x6FDFB0)($v0)
.text:0035D2B4 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D2B8 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D2BC 00 00 00 00                                   nop
.text:0035D2C0
.text:0035D2C0                               loc_35D2C0:
.text:0035D2C0 25 10 00 00                                   move    $v0, $zero
.text:0035D2C4 25 E8 C0 03                                   move    $sp, $fp
.text:0035D2C8 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035D2CC 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035D2D0 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D2D4 08 00 E0 03                                   jr      $ra
.text:0035D2D8 00 00 00 00                                   nop
.text:0035D2D8                                # } // starts at 35D208
.text:0035D2D8                                # End of function opcode_0A8C(CRunningScript *)
.text:0035D2D8
.text:0035D2DC
.text:0035D2DC                                # =============== S U B R O U T I N E =======================================
.text:0035D2DC
.text:0035D2DC                                # Attributes: bp-based frame fpd=0x20
.text:0035D2DC
.text:0035D2DC                                # _DWORD __fastcall opcode_0A8D(CRunningScript *)
.text:0035D2DC                                               .globl opcode_0A8D(CRunningScript *)
.text:0035D2DC                               opcode_0A8D(CRunningScript *):
.text:0035D2DC
.text:0035D2DC                               var_20          = -0x20
.text:0035D2DC                               var_1C          = -0x1C
.text:0035D2DC                               var_10          = -0x10
.text:0035D2DC                               var_s0          =  0
.text:0035D2DC                               var_s8          =  8
.text:0035D2DC
.text:0035D2DC                                # __unwind {
.text:0035D2DC D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D2E0 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035D2E4 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035D2E8 25 F0 A0 03                                   move    $fp, $sp
.text:0035D2EC 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035D2F0 25 28 C0 03                                   move    $a1, $fp
.text:0035D2F4 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035D2F8 8D 7E 0D 0C                                   jal     operator>><ulong>(CRunningScript &,ulong *&)
.text:0035D2FC 00 00 00 00                                   nop
.text:0035D300 04 00 C3 27                                   addiu   $v1, $fp, 0x20+var_1C
.text:0035D304 25 28 60 00                                   move    $a1, $v1
.text:0035D308 25 20 40 00                                   move    $a0, $v0
.text:0035D30C FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D310 00 00 00 00                                   nop
.text:0035D314 04 00 C2 8F                                   lw      $v0, 0x20+var_1C($fp)
.text:0035D318 02 00 03 24                                   li      $v1, 2
.text:0035D31C 0A 00 43 10                                   beq     $v0, $v1, loc_35D348
.text:0035D320 00 00 00 00                                   nop
.text:0035D324 04 00 03 24                                   li      $v1, 4
.text:0035D328 0F 00 43 10                                   beq     $v0, $v1, loc_35D368
.text:0035D32C 00 00 00 00                                   nop
.text:0035D330 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D334 00 00 43 90                                   lbu     $v1, 0($v0)
.text:0035D338 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D33C B0 DF 43 A0                                   sb      $v1, opcodeParams
.text:0035D340 0E 00 00 10                                   b       loc_35D37C
.text:0035D344 00 00 00 00                                   nop
.text:0035D348                                # ---------------------------------------------------------------------------
.text:0035D348
.text:0035D348                               loc_35D348:
.text:0035D348 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D34C 00 00 42 94                                   lhu     $v0, 0($v0)
.text:0035D350 00 1C 02 00                                   sll     $v1, $v0, 16
.text:0035D354 03 1C 03 00                                   sra     $v1, 16
.text:0035D358 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D35C B0 DF 43 A4                                   sh      $v1, opcodeParams
.text:0035D360 06 00 00 10                                   b       loc_35D37C
.text:0035D364 00 00 00 00                                   nop
.text:0035D368                                # ---------------------------------------------------------------------------
.text:0035D368
.text:0035D368                               loc_35D368:
.text:0035D368 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D36C 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035D370 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D374 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D378 00 00 00 00                                   nop
.text:0035D37C
.text:0035D37C                               loc_35D37C:
.text:0035D37C 01 00 05 24                                   li      $a1, 1
.text:0035D380 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035D384 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D388 00 00 00 00                                   nop
.text:0035D38C 25 10 00 00                                   move    $v0, $zero
.text:0035D390 25 E8 C0 03                                   move    $sp, $fp
.text:0035D394 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035D398 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035D39C 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D3A0 08 00 E0 03                                   jr      $ra
.text:0035D3A4 00 00 00 00                                   nop
.text:0035D3A4                                # } // starts at 35D2DC
.text:0035D3A4                                # End of function opcode_0A8D(CRunningScript *)
.text:0035D3A4
.text:0035D3A8
.text:0035D3A8                                # =============== S U B R O U T I N E =======================================
.text:0035D3A8
.text:0035D3A8                                # Attributes: bp-based frame fpd=0x10
.text:0035D3A8
.text:0035D3A8                                               .globl opcode_0A8E(CRunningScript *)
.text:0035D3A8                               opcode_0A8E(CRunningScript *):
.text:0035D3A8
.text:0035D3A8                               var_10          = -0x10
.text:0035D3A8                               var_s0          =  0
.text:0035D3A8                               var_s8          =  8
.text:0035D3A8
.text:0035D3A8                                # __unwind {
.text:0035D3A8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D3AC 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D3B0 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D3B4 25 F0 A0 03                                   move    $fp, $sp
.text:0035D3B8 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D3BC 02 00 05 24                                   li      $a1, 2
.text:0035D3C0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D3C4 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D3C8 00 00 00 00                                   nop
.text:0035D3CC 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D3D0 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035D3D4 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D3DC 04 00 42 8C                                   lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
.text:0035D3E0 21 18 62 00                                   addu    $v1, $v0
.text:0035D3E4 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D3E8 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D3EC 01 00 05 24                                   li      $a1, 1
.text:0035D3F0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D3F4 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D3F8 00 00 00 00                                   nop
.text:0035D3FC 25 10 00 00                                   move    $v0, $zero
.text:0035D400 25 E8 C0 03                                   move    $sp, $fp
.text:0035D404 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D408 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D40C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D410 08 00 E0 03                                   jr      $ra
.text:0035D414 00 00 00 00                                   nop
.text:0035D414                                # } // starts at 35D3A8
.text:0035D414                                # End of function opcode_0A8E(CRunningScript *)
.text:0035D414
.text:0035D418
.text:0035D418                                # =============== S U B R O U T I N E =======================================
.text:0035D418
.text:0035D418                                # Attributes: bp-based frame fpd=0x10
.text:0035D418
.text:0035D418                                               .globl opcode_0A8F(CRunningScript *)
.text:0035D418                               opcode_0A8F(CRunningScript *):
.text:0035D418
.text:0035D418                               var_10          = -0x10
.text:0035D418                               var_s0          =  0
.text:0035D418                               var_s8          =  8
.text:0035D418
.text:0035D418                                # __unwind {
.text:0035D418 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D41C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D420 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D424 25 F0 A0 03                                   move    $fp, $sp
.text:0035D428 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D42C 02 00 05 24                                   li      $a1, 2
.text:0035D430 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D434 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D438 00 00 00 00                                   nop
.text:0035D43C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D440 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035D444 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D44C 04 00 42 8C                                   lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
.text:0035D450 23 18 62 00                                   subu    $v1, $v0
.text:0035D454 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D458 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D45C 01 00 05 24                                   li      $a1, 1
.text:0035D460 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D464 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D468 00 00 00 00                                   nop
.text:0035D46C 25 10 00 00                                   move    $v0, $zero
.text:0035D470 25 E8 C0 03                                   move    $sp, $fp
.text:0035D474 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D478 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D47C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D480 08 00 E0 03                                   jr      $ra
.text:0035D484 00 00 00 00                                   nop
.text:0035D484                                # } // starts at 35D418
.text:0035D484                                # End of function opcode_0A8F(CRunningScript *)
.text:0035D484
.text:0035D488
.text:0035D488                                # =============== S U B R O U T I N E =======================================
.text:0035D488
.text:0035D488                                # Attributes: bp-based frame fpd=0x10
.text:0035D488
.text:0035D488                                               .globl opcode_0A90(CRunningScript *)
.text:0035D488                               opcode_0A90(CRunningScript *):
.text:0035D488
.text:0035D488                               var_10          = -0x10
.text:0035D488                               var_s0          =  0
.text:0035D488                               var_s8          =  8
.text:0035D488
.text:0035D488                                # __unwind {
.text:0035D488 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D48C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D490 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D494 25 F0 A0 03                                   move    $fp, $sp
.text:0035D498 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D49C 02 00 05 24                                   li      $a1, 2
.text:0035D4A0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D4A4 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D4A8 00 00 00 00                                   nop
.text:0035D4AC 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D4B0 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035D4B4 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D4BC 04 00 42 8C                                   lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
.text:0035D4C0 18 18 62 00                                   mult    $v1, $v0
.text:0035D4C4 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D4C8 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D4CC 01 00 05 24                                   li      $a1, 1
.text:0035D4D0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D4D4 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D4D8 00 00 00 00                                   nop
.text:0035D4DC 25 10 00 00                                   move    $v0, $zero
.text:0035D4E0 25 E8 C0 03                                   move    $sp, $fp
.text:0035D4E4 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D4E8 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D4EC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D4F0 08 00 E0 03                                   jr      $ra
.text:0035D4F4 00 00 00 00                                   nop
.text:0035D4F4                                # } // starts at 35D488
.text:0035D4F4                                # End of function opcode_0A90(CRunningScript *)
.text:0035D4F4
.text:0035D4F8
.text:0035D4F8                                # =============== S U B R O U T I N E =======================================
.text:0035D4F8
.text:0035D4F8                                # Attributes: bp-based frame fpd=0x10
.text:0035D4F8
.text:0035D4F8                                               .globl opcode_0A91(CRunningScript *)
.text:0035D4F8                               opcode_0A91(CRunningScript *):
.text:0035D4F8
.text:0035D4F8                               var_10          = -0x10
.text:0035D4F8                               var_s0          =  0
.text:0035D4F8                               var_s8          =  8
.text:0035D4F8
.text:0035D4F8                                # __unwind {
.text:0035D4F8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D4FC 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D500 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D504 25 F0 A0 03                                   move    $fp, $sp
.text:0035D508 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D50C 02 00 05 24                                   li      $a1, 2
.text:0035D510 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D514 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D518 00 00 00 00                                   nop
.text:0035D51C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D520 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035D524 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D52C 04 00 42 8C                                   lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
.text:0035D530 1A 00 62 00                                   div     $v1, $v0
.text:0035D534 F4 01 40 00                                   teq     $v0, $zero  #7
.text:0035D538 10 10 00 00                                   mfhi    $v0
.text:0035D53C 12 18 00 00                                   mflo    $v1
.text:0035D540 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D544 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D548 01 00 05 24                                   li      $a1, 1
.text:0035D54C 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D550 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D554 00 00 00 00                                   nop
.text:0035D558 25 10 00 00                                   move    $v0, $zero
.text:0035D55C 25 E8 C0 03                                   move    $sp, $fp
.text:0035D560 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D564 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D568 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D56C 08 00 E0 03                                   jr      $ra
.text:0035D570 00 00 00 00                                   nop
.text:0035D570                                # } // starts at 35D4F8
.text:0035D570                                # End of function opcode_0A91(CRunningScript *)
.text:0035D570
.text:0035D574
.text:0035D574                                # =============== S U B R O U T I N E =======================================
.text:0035D574
.text:0035D574                                # Attributes: bp-based frame fpd=0x28
.text:0035D574
.text:0035D574                                # _DWORD __fastcall opcode_0A96(CRunningScript *)
.text:0035D574                                               .globl opcode_0A96(CRunningScript *)
.text:0035D574                               opcode_0A96(CRunningScript *):
.text:0035D574
.text:0035D574                               var_28          = -0x28
.text:0035D574                               var_18          = -0x18
.text:0035D574                               var_s0          =  0
.text:0035D574                               var_s8          =  8
.text:0035D574                               var_s10         =  0x10
.text:0035D574
.text:0035D574                                # __unwind {
.text:0035D574 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035D578 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035D57C 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035D580 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035D584 25 F0 A0 03                                   move    $fp, $sp
.text:0035D588 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035D58C 25 28 C0 03                                   move    $a1, $fp
.text:0035D590 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035D594 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D598 00 00 00 00                                   nop
.text:0035D59C 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035D5A0 67 00 02 3C 18 B9 42 8C                       lw      $v0, pedPool
.text:0035D5A8 00 00 C3 8F                                   lw      $v1, 0x28+var_28($fp)
.text:0035D5AC 25 28 60 00                                   move    $a1, $v1         # int
.text:0035D5B0 25 20 40 00                                   move    $a0, $v0         # unsigned int *
.text:0035D5B4 EC FE 07 0C                                   jal     GetPedStruct(ulong *,int)
.text:0035D5B8 00 00 00 00                                   nop
.text:0035D5BC 25 28 40 00                                   move    $a1, $v0
.text:0035D5C0 25 20 00 02                                   move    $a0, $s0
.text:0035D5C4 3A 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035D5C8 00 00 00 00                                   nop
.text:0035D5CC 25 10 00 00                                   move    $v0, $zero
.text:0035D5D0 25 E8 C0 03                                   move    $sp, $fp
.text:0035D5D4 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035D5D8 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035D5DC 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035D5E0 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035D5E4 08 00 E0 03                                   jr      $ra
.text:0035D5E8 00 00 00 00                                   nop
.text:0035D5E8                                # } // starts at 35D574
.text:0035D5E8                                # End of function opcode_0A96(CRunningScript *)
.text:0035D5E8
.text:0035D5EC
.text:0035D5EC                                # =============== S U B R O U T I N E =======================================
.text:0035D5EC
.text:0035D5EC                                # Attributes: bp-based frame fpd=0x28
.text:0035D5EC
.text:0035D5EC                                # _DWORD __fastcall opcode_0A97(CRunningScript *)
.text:0035D5EC                                               .globl opcode_0A97(CRunningScript *)
.text:0035D5EC                               opcode_0A97(CRunningScript *):
.text:0035D5EC
.text:0035D5EC                               var_28          = -0x28
.text:0035D5EC                               var_18          = -0x18
.text:0035D5EC                               var_s0          =  0
.text:0035D5EC                               var_s8          =  8
.text:0035D5EC                               var_s10         =  0x10
.text:0035D5EC
.text:0035D5EC                                # __unwind {
.text:0035D5EC C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035D5F0 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035D5F4 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035D5F8 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035D5FC 25 F0 A0 03                                   move    $fp, $sp
.text:0035D600 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035D604 25 28 C0 03                                   move    $a1, $fp
.text:0035D608 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035D60C FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D610 00 00 00 00                                   nop
.text:0035D614 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035D618 67 00 02 3C 1C B9 42 8C                       lw      $v0, vehPool
.text:0035D620 00 00 C3 8F                                   lw      $v1, 0x28+var_28($fp)
.text:0035D624 25 28 60 00                                   move    $a1, $v1         # int
.text:0035D628 25 20 40 00                                   move    $a0, $v0         # unsigned int *
.text:0035D62C DC FE 07 0C                                   jal     GetVehStruct(ulong *,int)
.text:0035D630 00 00 00 00                                   nop
.text:0035D634 25 28 40 00                                   move    $a1, $v0
.text:0035D638 25 20 00 02                                   move    $a0, $s0
.text:0035D63C 3A 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035D640 00 00 00 00                                   nop
.text:0035D644 25 10 00 00                                   move    $v0, $zero
.text:0035D648 25 E8 C0 03                                   move    $sp, $fp
.text:0035D64C 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035D650 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035D654 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035D658 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035D65C 08 00 E0 03                                   jr      $ra
.text:0035D660 00 00 00 00                                   nop
.text:0035D660                                # } // starts at 35D5EC
.text:0035D660                                # End of function opcode_0A97(CRunningScript *)
.text:0035D660
.text:0035D664
.text:0035D664                                # =============== S U B R O U T I N E =======================================
.text:0035D664
.text:0035D664                                # Attributes: bp-based frame fpd=0x28
.text:0035D664
.text:0035D664                                # _DWORD __fastcall opcode_0A98(CRunningScript *)
.text:0035D664                                               .globl opcode_0A98(CRunningScript *)
.text:0035D664                               opcode_0A98(CRunningScript *):
.text:0035D664
.text:0035D664                               var_28          = -0x28
.text:0035D664                               var_18          = -0x18
.text:0035D664                               var_s0          =  0
.text:0035D664                               var_s8          =  8
.text:0035D664                               var_s10         =  0x10
.text:0035D664
.text:0035D664                                # __unwind {
.text:0035D664 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035D668 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035D66C 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035D670 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035D674 25 F0 A0 03                                   move    $fp, $sp
.text:0035D678 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035D67C 25 28 C0 03                                   move    $a1, $fp
.text:0035D680 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035D684 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D688 00 00 00 00                                   nop
.text:0035D68C 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035D690 67 00 02 3C 24 B9 42 8C                       lw      $v0, objPool
.text:0035D698 00 00 C3 8F                                   lw      $v1, 0x28+var_28($fp)
.text:0035D69C 25 28 60 00                                   move    $a1, $v1         # int
.text:0035D6A0 25 20 40 00                                   move    $a0, $v0         # unsigned int *
.text:0035D6A4 CC FE 07 0C                                   jal     GetObjStruct(ulong *,int)
.text:0035D6A8 00 00 00 00                                   nop
.text:0035D6AC 25 28 40 00                                   move    $a1, $v0
.text:0035D6B0 25 20 00 02                                   move    $a0, $s0
.text:0035D6B4 3A 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035D6B8 00 00 00 00                                   nop
.text:0035D6BC 25 10 00 00                                   move    $v0, $zero
.text:0035D6C0 25 E8 C0 03                                   move    $sp, $fp
.text:0035D6C4 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035D6C8 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035D6CC 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035D6D0 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035D6D4 08 00 E0 03                                   jr      $ra
.text:0035D6D8 00 00 00 00                                   nop
.text:0035D6D8                                # } // starts at 35D664
.text:0035D6D8                                # End of function opcode_0A98(CRunningScript *)
.text:0035D6D8
.text:0035D6DC
.text:0035D6DC                                # =============== S U B R O U T I N E =======================================
.text:0035D6DC
.text:0035D6DC                                # Attributes: bp-based frame fpd=0x30
.text:0035D6DC
.text:0035D6DC                                # _DWORD __fastcall opcode_0A9A(CRunningScript *)
.text:0035D6DC                                               .globl opcode_0A9A(CRunningScript *)
.text:0035D6DC                               opcode_0A9A(CRunningScript *):
.text:0035D6DC
.text:0035D6DC                               var_30          = -0x30
.text:0035D6DC                               var_2C          = -0x2C
.text:0035D6DC                               var_28          = -0x28
.text:0035D6DC                               var_10          = -0x10
.text:0035D6DC                               var_s0          =  0
.text:0035D6DC                               var_s8          =  8
.text:0035D6DC
.text:0035D6DC                                # __unwind {
.text:0035D6DC C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035D6E0 38 00 BF FF                                   sd      $ra, 0x30+var_s8($sp)
.text:0035D6E4 30 00 BE FF                                   sd      $fp, 0x30+var_s0($sp)
.text:0035D6E8 25 F0 A0 03                                   move    $fp, $sp
.text:0035D6EC 20 00 C4 AF                                   sw      $a0, 0x30+var_10($fp)
.text:0035D6F0 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035D6F4 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035D6F8 20 00 C4 8F                                   lw      $a0, 0x30+var_10($fp)  # CRunningScript *
.text:0035D6FC FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035D700 00 00 00 00                                   nop
.text:0035D704 00 00 C2 AF                                   sw      $v0, 0x30+var_30($fp)
.text:0035D708 08 00 C2 27                                   addiu   $v0, $fp, 0x30+var_28
.text:0035D70C 10 00 06 24                                   li      $a2, 0x10
.text:0035D710 25 28 40 00                                   move    $a1, $v0
.text:0035D714 20 00 C4 8F                                   lw      $a0, 0x30+var_10($fp)
.text:0035D718 80 DC 07 0C                                   jal     GetScriptStringParam(CRunningScript *,char *,uchar)
.text:0035D71C 00 00 00 00                                   nop
.text:0035D720 36 00 02 3C A8 FF 42 8C                       lw      $v0, _fdata
.text:0035D728 08 00 C3 27                                   addiu   $v1, $fp, 0x30+var_28
.text:0035D72C 25 28 60 00                                   move    $a1, $v1
.text:0035D730 00 00 C4 8F                                   lw      $a0, 0x30+var_30($fp)
.text:0035D734 09 F8 40 00                                   jalr    $v0 ; sub_233210
.text:0035D738 00 00 00 00                                   nop
.text:0035D73C 04 00 C2 AF                                   sw      $v0, 0x30+var_2C($fp)
.text:0035D740 04 00 C2 8F                                   lw      $v0, 0x30+var_2C($fp)
.text:0035D744 0D 00 40 10                                   beqz    $v0, loc_35D77C
.text:0035D748 00 00 00 00                                   nop
.text:0035D74C 04 00 C5 8F                                   lw      $a1, 0x30+var_2C($fp)
.text:0035D750 20 00 C4 8F                                   lw      $a0, 0x30+var_10($fp)
.text:0035D754 A2 7E 0D 0C                                   jal     operator<<<int>(CRunningScript &,int *)
.text:0035D758 00 00 00 00                                   nop
.text:0035D75C 36 00 02 3C E0 FF 42 8C                       lw      $v0, SetScriptCondResult
.text:0035D764 01 00 05 24                                   li      $a1, 1
.text:0035D768 20 00 C4 8F                                   lw      $a0, 0x30+var_10($fp)
.text:0035D76C 09 F8 40 00                                   jalr    $v0 ; sub_3077F0
.text:0035D770 00 00 00 00                                   nop
.text:0035D774 0B 00 00 10                                   b       loc_35D7A4
.text:0035D778 00 00 00 00                                   nop
.text:0035D77C                                # ---------------------------------------------------------------------------
.text:0035D77C
.text:0035D77C                               loc_35D77C:
.text:0035D77C 25 28 00 00                                   move    $a1, $zero
.text:0035D780 20 00 C4 8F                                   lw      $a0, 0x30+var_10($fp)
.text:0035D784 3A 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035D788 00 00 00 00                                   nop
.text:0035D78C 36 00 02 3C E0 FF 42 8C                       lw      $v0, SetScriptCondResult
.text:0035D794 25 28 00 00                                   move    $a1, $zero
.text:0035D798 20 00 C4 8F                                   lw      $a0, 0x30+var_10($fp)
.text:0035D79C 09 F8 40 00                                   jalr    $v0 ; sub_3077F0
.text:0035D7A0 00 00 00 00                                   nop
.text:0035D7A4
.text:0035D7A4                               loc_35D7A4:
.text:0035D7A4 25 10 00 00                                   move    $v0, $zero
.text:0035D7A8 25 E8 C0 03                                   move    $sp, $fp
.text:0035D7AC 38 00 BF DF                                   ld      $ra, 0x30+var_s8($sp)
.text:0035D7B0 30 00 BE DF                                   ld      $fp, 0x30+var_s0($sp)
.text:0035D7B4 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035D7B8 08 00 E0 03                                   jr      $ra
.text:0035D7BC 00 00 00 00                                   nop
.text:0035D7BC                                # } // starts at 35D6DC
.text:0035D7BC                                # End of function opcode_0A9A(CRunningScript *)
.text:0035D7BC
.text:0035D7C0
.text:0035D7C0                                # =============== S U B R O U T I N E =======================================
.text:0035D7C0
.text:0035D7C0                                # Attributes: bp-based frame fpd=0x20
.text:0035D7C0
.text:0035D7C0                                # _DWORD __fastcall opcode_0A9B(CRunningScript *)
.text:0035D7C0                                               .globl opcode_0A9B(CRunningScript *)
.text:0035D7C0                               opcode_0A9B(CRunningScript *):
.text:0035D7C0
.text:0035D7C0                               var_20          = -0x20
.text:0035D7C0                               var_10          = -0x10
.text:0035D7C0                               var_s0          =  0
.text:0035D7C0                               var_s8          =  8
.text:0035D7C0
.text:0035D7C0                                # __unwind {
.text:0035D7C0 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D7C4 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035D7C8 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035D7CC 25 F0 A0 03                                   move    $fp, $sp
.text:0035D7D0 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035D7D4 25 28 C0 03                                   move    $a1, $fp
.text:0035D7D8 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035D7DC FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D7E0 00 00 00 00                                   nop
.text:0035D7E4 36 00 02 3C B4 FF 42 8C                       lw      $v0, rw_close
.text:0035D7EC 00 00 C3 8F                                   lw      $v1, 0x20+var_20($fp)
.text:0035D7F0 25 20 60 00                                   move    $a0, $v1
.text:0035D7F4 09 F8 40 00                                   jalr    $v0 ; loc_233370
.text:0035D7F8 00 00 00 00                                   nop
.text:0035D7FC 25 10 00 00                                   move    $v0, $zero
.text:0035D800 25 E8 C0 03                                   move    $sp, $fp
.text:0035D804 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035D808 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035D80C 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D810 08 00 E0 03                                   jr      $ra
.text:0035D814 00 00 00 00                                   nop
.text:0035D814                                # } // starts at 35D7C0
.text:0035D814                                # End of function opcode_0A9B(CRunningScript *)
.text:0035D814
.text:0035D818
.text:0035D818                                # =============== S U B R O U T I N E =======================================
.text:0035D818
.text:0035D818                                # Attributes: bp-based frame fpd=0x10
.text:0035D818
.text:0035D818                                # _DWORD __fastcall opcode_0A9C(CRunningScript *)
.text:0035D818                                               .globl opcode_0A9C(CRunningScript *)
.text:0035D818                               opcode_0A9C(CRunningScript *):
.text:0035D818
.text:0035D818                               var_10          = -0x10
.text:0035D818                               var_s0          =  0
.text:0035D818                               var_s8          =  8
.text:0035D818
.text:0035D818                                # __unwind {
.text:0035D818 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D81C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D820 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D824 25 F0 A0 03                                   move    $fp, $sp
.text:0035D828 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D82C 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)  # CRunningScript *
.text:0035D830 BB 7D 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035D834 00 00 00 00                                   nop
.text:0035D838 25 10 00 00                                   move    $v0, $zero
.text:0035D83C 25 E8 C0 03                                   move    $sp, $fp
.text:0035D840 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D844 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D848 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D84C 08 00 E0 03                                   jr      $ra
.text:0035D850 00 00 00 00                                   nop
.text:0035D850                                # } // starts at 35D818
.text:0035D850                                # End of function opcode_0A9C(CRunningScript *)
.text:0035D850
.text:0035D854
.text:0035D854                                # =============== S U B R O U T I N E =======================================
.text:0035D854
.text:0035D854                                # Attributes: bp-based frame fpd=0x20
.text:0035D854
.text:0035D854                                # _DWORD __fastcall opcode_0A9D(CRunningScript *)
.text:0035D854                                               .globl opcode_0A9D(CRunningScript *)
.text:0035D854                               opcode_0A9D(CRunningScript *):
.text:0035D854
.text:0035D854                               var_20          = -0x20
.text:0035D854                               var_1C          = -0x1C
.text:0035D854                               var_18          = -0x18
.text:0035D854                               var_10          = -0x10
.text:0035D854                               var_s0          =  0
.text:0035D854                               var_s8          =  8
.text:0035D854
.text:0035D854                                # __unwind {
.text:0035D854 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D858 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035D85C 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035D860 25 F0 A0 03                                   move    $fp, $sp
.text:0035D864 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035D868 04 00 C2 27                                   addiu   $v0, $fp, 0x20+var_1C
.text:0035D86C 25 28 40 00                                   move    $a1, $v0
.text:0035D870 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035D874 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D878 00 00 00 00                                   nop
.text:0035D87C 08 00 C3 27                                   addiu   $v1, $fp, 0x20+var_18
.text:0035D880 25 28 60 00                                   move    $a1, $v1
.text:0035D884 25 20 40 00                                   move    $a0, $v0
.text:0035D888 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D88C 00 00 00 00                                   nop
.text:0035D890 01 00 05 24                                   li      $a1, 1
.text:0035D894 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035D898 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035D89C 00 00 00 00                                   nop
.text:0035D8A0 00 00 C2 AF                                   sw      $v0, 0x20+var_20($fp)
.text:0035D8A4 36 00 02 3C AC FF 42 8C                       lw      $v0, rw_read
.text:0035D8AC 04 00 C3 8F                                   lw      $v1, 0x20+var_1C($fp)
.text:0035D8B0 25 20 60 00                                   move    $a0, $v1
.text:0035D8B4 08 00 C3 8F                                   lw      $v1, 0x20+var_18($fp)
.text:0035D8B8 25 30 60 00                                   move    $a2, $v1
.text:0035D8BC 00 00 C5 8F                                   lw      $a1, 0x20+var_20($fp)
.text:0035D8C0 09 F8 40 00                                   jalr    $v0 ; loc_233250
.text:0035D8C4 00 00 00 00                                   nop
.text:0035D8C8 25 10 00 00                                   move    $v0, $zero
.text:0035D8CC 25 E8 C0 03                                   move    $sp, $fp
.text:0035D8D0 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035D8D4 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035D8D8 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D8DC 08 00 E0 03                                   jr      $ra
.text:0035D8E0 00 00 00 00                                   nop
.text:0035D8E0                                # } // starts at 35D854
.text:0035D8E0                                # End of function opcode_0A9D(CRunningScript *)
.text:0035D8E0
.text:0035D8E4
.text:0035D8E4                                # =============== S U B R O U T I N E =======================================
.text:0035D8E4
.text:0035D8E4                                # Attributes: bp-based frame fpd=0x10
.text:0035D8E4
.text:0035D8E4                                               .globl opcode_0A9F(CRunningScript *)
.text:0035D8E4                               opcode_0A9F(CRunningScript *):
.text:0035D8E4
.text:0035D8E4                               var_10          = -0x10
.text:0035D8E4                               var_s0          =  0
.text:0035D8E4                               var_s8          =  8
.text:0035D8E4
.text:0035D8E4                                # __unwind {
.text:0035D8E4 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D8E8 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D8EC 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D8F0 25 F0 A0 03                                   move    $fp, $sp
.text:0035D8F4 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D8F8 00 00 C3 8F                                   lw      $v1, 0x10+var_10($fp)
.text:0035D8FC 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D900 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D904 01 00 05 24                                   li      $a1, 1
.text:0035D908 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D90C 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D910 00 00 00 00                                   nop
.text:0035D914 25 10 00 00                                   move    $v0, $zero
.text:0035D918 25 E8 C0 03                                   move    $sp, $fp
.text:0035D91C 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D920 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D924 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D928 08 00 E0 03                                   jr      $ra
.text:0035D92C 00 00 00 00                                   nop
.text:0035D92C                                # } // starts at 35D8E4
.text:0035D92C                                # End of function opcode_0A9F(CRunningScript *)
.text:0035D92C
.text:0035D930
.text:0035D930                                # =============== S U B R O U T I N E =======================================
.text:0035D930
.text:0035D930                                # Attributes: bp-based frame fpd=0x28
.text:0035D930
.text:0035D930                                # _DWORD __fastcall opcode_0AA0(CRunningScript *)
.text:0035D930                                               .globl opcode_0AA0(CRunningScript *)
.text:0035D930                               opcode_0AA0(CRunningScript *):
.text:0035D930
.text:0035D930                               var_28          = -0x28
.text:0035D930                               var_18          = -0x18
.text:0035D930                               var_s0          =  0
.text:0035D930                               var_s8          =  8
.text:0035D930                               var_s10         =  0x10
.text:0035D930
.text:0035D930                                # __unwind {
.text:0035D930 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035D934 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035D938 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035D93C 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035D940 25 F0 A0 03                                   move    $fp, $sp
.text:0035D944 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035D948 25 28 C0 03                                   move    $a1, $fp
.text:0035D94C 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035D950 25 7E 0D 0C                                   jal     operator>>(CRunningScript &,int &)
.text:0035D954 00 00 00 00                                   nop
.text:0035D958 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)  # this
.text:0035D95C 6E 7D 0D 0C                                   jal     CRunningScript::GetConditionResult(void)
.text:0035D960 00 00 00 00                                   nop
.text:0035D964 04 00 40 10                                   beqz    $v0, loc_35D978
.text:0035D968 00 00 00 00                                   nop
.text:0035D96C 25 10 00 00                                   move    $v0, $zero
.text:0035D970 0F 00 00 10                                   b       loc_35D9B0
.text:0035D974 00 00 00 00                                   nop
.text:0035D978                                # ---------------------------------------------------------------------------
.text:0035D978
.text:0035D978                               loc_35D978:
.text:0035D978 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035D97C 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)  # this
.text:0035D980 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035D984 00 00 00 00                                   nop
.text:0035D988 25 28 40 00                                   move    $a1, $v0         # unsigned __int8 *
.text:0035D98C 25 20 00 02                                   move    $a0, $s0         # this
.text:0035D990 8E 7D 0D 0C                                   jal     CRunningScript::PushStack(uchar *)
.text:0035D994 00 00 00 00                                   nop
.text:0035D998 00 00 C2 8F                                   lw      $v0, 0x28+var_28($fp)
.text:0035D99C 25 28 40 00                                   move    $a1, $v0         # int
.text:0035D9A0 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)  # CRunningScript *
.text:0035D9A4 D8 7D 0D 0C                                   jal     ThreadJump(CRunningScript *,int)
.text:0035D9A8 00 00 00 00                                   nop
.text:0035D9AC 25 10 00 00                                   move    $v0, $zero
.text:0035D9B0
.text:0035D9B0                               loc_35D9B0:
.text:0035D9B0 25 E8 C0 03                                   move    $sp, $fp
.text:0035D9B4 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035D9B8 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035D9BC 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035D9C0 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035D9C4 08 00 E0 03                                   jr      $ra
.text:0035D9C8 00 00 00 00                                   nop
.text:0035D9C8                                # } // starts at 35D930
.text:0035D9C8                                # End of function opcode_0AA0(CRunningScript *)
.text:0035D9C8
.text:0035D9CC
.text:0035D9CC                                # =============== S U B R O U T I N E =======================================
.text:0035D9CC
.text:0035D9CC                                # Attributes: bp-based frame fpd=0x18
.text:0035D9CC
.text:0035D9CC                                # _DWORD __fastcall opcode_0AA1(CRunningScript *)
.text:0035D9CC                                               .globl opcode_0AA1(CRunningScript *)
.text:0035D9CC                               opcode_0AA1(CRunningScript *):
.text:0035D9CC
.text:0035D9CC                               var_18          = -0x18
.text:0035D9CC                               var_s0          =  0
.text:0035D9CC                               var_s8          =  8
.text:0035D9CC                               var_s10         =  0x10
.text:0035D9CC
.text:0035D9CC                                # __unwind {
.text:0035D9CC D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D9D0 28 00 BF FF                                   sd      $ra, 0x18+var_s10($sp)
.text:0035D9D4 20 00 BE FF                                   sd      $fp, 0x18+var_s8($sp)
.text:0035D9D8 18 00 B0 FF                                   sd      $s0, 0x18+var_s0($sp)
.text:0035D9DC 25 F0 A0 03                                   move    $fp, $sp
.text:0035D9E0 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035D9E4 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)  # this
.text:0035D9E8 6E 7D 0D 0C                                   jal     CRunningScript::GetConditionResult(void)
.text:0035D9EC 00 00 00 00                                   nop
.text:0035D9F0 04 00 40 10                                   beqz    $v0, loc_35DA04
.text:0035D9F4 00 00 00 00                                   nop
.text:0035D9F8 25 10 00 00                                   move    $v0, $zero
.text:0035D9FC 0A 00 00 10                                   b       loc_35DA28
.text:0035DA00 00 00 00 00                                   nop
.text:0035DA04                                # ---------------------------------------------------------------------------
.text:0035DA04
.text:0035DA04                               loc_35DA04:
.text:0035DA04 00 00 D0 8F                                   lw      $s0, 0x18+var_18($fp)
.text:0035DA08 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)  # this
.text:0035DA0C A5 7D 0D 0C                                   jal     CRunningScript::PopStack(void)
.text:0035DA10 00 00 00 00                                   nop
.text:0035DA14 25 28 40 00                                   move    $a1, $v0         # void *
.text:0035DA18 25 20 00 02                                   move    $a0, $s0         # this
.text:0035DA1C 60 7D 0D 0C                                   jal     CRunningScript::SetIp(void *)
.text:0035DA20 00 00 00 00                                   nop
.text:0035DA24 25 10 00 00                                   move    $v0, $zero
.text:0035DA28
.text:0035DA28                               loc_35DA28:
.text:0035DA28 25 E8 C0 03                                   move    $sp, $fp
.text:0035DA2C 28 00 BF DF                                   ld      $ra, 0x18+var_s10($sp)
.text:0035DA30 20 00 BE DF                                   ld      $fp, 0x18+var_s8($sp)
.text:0035DA34 18 00 B0 DF                                   ld      $s0, 0x18+var_s0($sp)
.text:0035DA38 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035DA3C 08 00 E0 03                                   jr      $ra
.text:0035DA40 00 00 00 00                                   nop
.text:0035DA40                                # } // starts at 35D9CC
.text:0035DA40                                # End of function opcode_0AA1(CRunningScript *)
.text:0035DA40
.text:0035DA44
.text:0035DA44                                # =============== S U B R O U T I N E =======================================
.text:0035DA44
.text:0035DA44                                # Attributes: bp-based frame fpd=0x70
.text:0035DA44
.text:0035DA44                                # _DWORD __fastcall opcode_0AA5(CRunningScript *)
.text:0035DA44                                               .globl opcode_0AA5(CRunningScript *)
.text:0035DA44                               opcode_0AA5(CRunningScript *):
.text:0035DA44
.text:0035DA44                               var_70          = -0x70
.text:0035DA44                               var_68          = -0x68
.text:0035DA44                               var_60          = -0x60
.text:0035DA44                               var_58          = -0x58
.text:0035DA44                               var_50          = -0x50
.text:0035DA44                               var_48          = -0x48
.text:0035DA44                               var_40          = -0x40
.text:0035DA44                               var_30          = -0x30
.text:0035DA44                               var_2C          = -0x2C
.text:0035DA44                               var_28          = -0x28
.text:0035DA44                               var_24          = -0x24
.text:0035DA44                               var_20          = -0x20
.text:0035DA44                               var_1C          = -0x1C
.text:0035DA44                               var_10          = -0x10
.text:0035DA44                               var_s0          =  0
.text:0035DA44                               var_s8          =  8
.text:0035DA44
.text:0035DA44                                # __unwind {
.text:0035DA44 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035DA48 78 00 BF FF                                   sd      $ra, 0x70+var_s8($sp)
.text:0035DA4C 70 00 BE FF                                   sd      $fp, 0x70+var_s0($sp)
.text:0035DA50 25 F0 A0 03                                   move    $fp, $sp
.text:0035DA54 60 00 C4 AF                                   sw      $a0, 0x70+var_10($fp)
.text:0035DA58 4C 00 C2 27                                   addiu   $v0, $fp, 0x70+var_24
.text:0035DA5C 25 28 40 00                                   move    $a1, $v0
.text:0035DA60 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DA64 B6 7E 0D 0C                                   jal     operator>><void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035DA68 00 00 00 00                                   nop
.text:0035DA6C 50 00 C3 27                                   addiu   $v1, $fp, 0x70+var_20
.text:0035DA70 25 28 60 00                                   move    $a1, $v1
.text:0035DA74 25 20 40 00                                   move    $a0, $v0
.text:0035DA78 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DA7C 00 00 00 00                                   nop
.text:0035DA80 54 00 C3 27                                   addiu   $v1, $fp, 0x70+var_1C
.text:0035DA84 25 28 60 00                                   move    $a1, $v1
.text:0035DA88 25 20 40 00                                   move    $a0, $v0
.text:0035DA8C FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DA90 00 00 00 00                                   nop
.text:0035DA94 50 00 C2 8F                                   lw      $v0, 0x70+var_20($fp)
.text:0035DA98 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035DA9C 03 00 40 14                                   bnez    $v0, loc_35DAAC
.text:0035DAA0 00 00 00 00                                   nop
.text:0035DAA4 0F 00 02 24                                   li      $v0, 0xF
.text:0035DAA8 50 00 C2 AF                                   sw      $v0, 0x70+var_20($fp)
.text:0035DAAC
.text:0035DAAC                               loc_35DAAC:
.text:0035DAAC 54 00 C2 8F                                   lw      $v0, 0x70+var_1C($fp)
.text:0035DAB0 80 10 02 00                                   sll     $v0, 2
.text:0035DAB4 54 00 C2 AF                                   sw      $v0, 0x70+var_1C($fp)
.text:0035DAB8 50 00 C2 8F                                   lw      $v0, 0x70+var_20($fp)
.text:0035DABC 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DAC0 36 00 02 3C 98 03 42 24                       li      $v0, arguments
.text:0035DAC8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DACC 48 00 C2 AF                                   sw      $v0, 0x70+var_28($fp)
.text:0035DAD0 40 00 C0 AF                                   sw      $zero, 0x70+var_30($fp)
.text:0035DAD4 36 00 02 3C 98 03 42 24                       li      $v0, arguments
.text:0035DADC 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035DAE0 83 00 00 10                                   b       loc_35DCF0
.text:0035DAE4 00 00 00 00                                   nop
.text:0035DAE8                                # ---------------------------------------------------------------------------
.text:0035DAE8
.text:0035DAE8                               loc_35DAE8:                              # this
.text:0035DAE8 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DAEC 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035DAF0 00 00 00 00                                   nop
.text:0035DAF4 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035DAF8 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035DAFC 79 00 60 10                                   beqz    $v1, def_35DB18  # jumptable 0035DB18 default case, cases 0,12,13,15
.text:0035DB00 00 00 00 00                                   nop
.text:0035DB04 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DB08 36 00 02 3C 98 FD 42 24                       li      $v0, jpt_35DB18
.text:0035DB10 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DB14 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035DB18 08 00 40 00                                   jr      $v0              # switch jump
.text:0035DB1C 00 00 00 00                                   nop
.text:0035DB20                                # ---------------------------------------------------------------------------
.text:0035DB20
.text:0035DB20                               loc_35DB20:                              # jumptable 0035DB18 case 6
.text:0035DB20 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DB24 25 28 40 00                                   move    $a1, $v0
.text:0035DB28 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DB2C 4E 7E 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035DB30 00 00 00 00                                   nop
.text:0035DB34 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035DB38 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035DB3C 44 00 40 10                                   beqz    $v0, def_35DB5C  # jumptable 0035DB5C default case
.text:0035DB40 00 00 00 00                                   nop
.text:0035DB44 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035DB48 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DB4C 36 00 02 3C E0 FD 42 24                       li      $v0, jpt_35DB5C
.text:0035DB54 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DB58 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035DB5C 08 00 40 00                                   jr      $v0              # switch jump
.text:0035DB60 00 00 00 00                                   nop
.text:0035DB64                                # ---------------------------------------------------------------------------
.text:0035DB64
.text:0035DB64                               loc_35DB64:                              # jumptable 0035DB5C case 0
.text:0035DB64 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DB68 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035DB6C 38 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DB70 00 00 00 00                                   nop
.text:0035DB74                                # ---------------------------------------------------------------------------
.text:0035DB74
.text:0035DB74                               loc_35DB74:                              # jumptable 0035DB5C case 1
.text:0035DB74 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DB78 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035DB7C 34 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DB80 00 00 00 00                                   nop
.text:0035DB84                                # ---------------------------------------------------------------------------
.text:0035DB84
.text:0035DB84                               loc_35DB84:                              # jumptable 0035DB5C case 2
.text:0035DB84 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DB88 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035DB8C 30 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DB90 00 00 00 00                                   nop
.text:0035DB94                                # ---------------------------------------------------------------------------
.text:0035DB94
.text:0035DB94                               loc_35DB94:                              # jumptable 0035DB5C case 3
.text:0035DB94 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DB98 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035DB9C 2C 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DBA0 00 00 00 00                                   nop
.text:0035DBA4                                # ---------------------------------------------------------------------------
.text:0035DBA4
.text:0035DBA4                               loc_35DBA4:                              # jumptable 0035DB5C case 4
.text:0035DBA4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DBA8 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035DBAC 28 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DBB0 00 00 00 00                                   nop
.text:0035DBB4                                # ---------------------------------------------------------------------------
.text:0035DBB4
.text:0035DBB4                               loc_35DBB4:                              # jumptable 0035DB5C case 5
.text:0035DBB4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DBB8 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035DBBC 24 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DBC0 00 00 00 00                                   nop
.text:0035DBC4                                # ---------------------------------------------------------------------------
.text:0035DBC4
.text:0035DBC4                               loc_35DBC4:                              # jumptable 0035DB5C case 6
.text:0035DBC4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DBC8 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035DBCC 20 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DBD0 00 00 00 00                                   nop
.text:0035DBD4                                # ---------------------------------------------------------------------------
.text:0035DBD4
.text:0035DBD4                               loc_35DBD4:                              # jumptable 0035DB5C case 7
.text:0035DBD4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DBD8 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035DBDC 1C 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DBE0 00 00 00 00                                   nop
.text:0035DBE4                                # ---------------------------------------------------------------------------
.text:0035DBE4
.text:0035DBE4                               loc_35DBE4:                              # jumptable 0035DB5C case 8
.text:0035DBE4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DBE8 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035DBEC 18 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DBF0 00 00 00 00                                   nop
.text:0035DBF4                                # ---------------------------------------------------------------------------
.text:0035DBF4
.text:0035DBF4                               loc_35DBF4:                              # jumptable 0035DB5C case 9
.text:0035DBF4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DBF8 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035DBFC 14 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DC00 00 00 00 00                                   nop
.text:0035DC04                                # ---------------------------------------------------------------------------
.text:0035DC04
.text:0035DC04                               loc_35DC04:                              # jumptable 0035DB5C case 10
.text:0035DC04 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DC08 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035DC0C 10 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DC10 00 00 00 00                                   nop
.text:0035DC14                                # ---------------------------------------------------------------------------
.text:0035DC14
.text:0035DC14                               loc_35DC14:                              # jumptable 0035DB5C case 11
.text:0035DC14 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DC18 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035DC1C 0C 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DC20 00 00 00 00                                   nop
.text:0035DC24                                # ---------------------------------------------------------------------------
.text:0035DC24
.text:0035DC24                               loc_35DC24:                              # jumptable 0035DB5C case 12
.text:0035DC24 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DC28 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035DC2C 08 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DC30 00 00 00 00                                   nop
.text:0035DC34                                # ---------------------------------------------------------------------------
.text:0035DC34
.text:0035DC34                               loc_35DC34:                              # jumptable 0035DB5C case 13
.text:0035DC34 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DC38 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035DC3C 04 00 00 10                                   b       def_35DB5C       # jumptable 0035DB5C default case
.text:0035DC40 00 00 00 00                                   nop
.text:0035DC44                                # ---------------------------------------------------------------------------
.text:0035DC44
.text:0035DC44                               loc_35DC44:                              # jumptable 0035DB5C case 14
.text:0035DC44 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DC48 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035DC4C 00 00 00 00                                   nop
.text:0035DC50
.text:0035DC50                               def_35DB5C:                              # jumptable 0035DB5C default case
.text:0035DC50 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035DC54 01 00 42 24                                   addiu   $v0, 1
.text:0035DC58 40 00 C2 AF                                   sw      $v0, 0x70+var_30($fp)
.text:0035DC5C 21 00 00 10                                   b       def_35DB18       # jumptable 0035DB18 default case, cases 0,12,13,15
.text:0035DC60 00 00 00 00                                   nop
.text:0035DC64                                # ---------------------------------------------------------------------------
.text:0035DC64
.text:0035DC64                               loc_35DC64:                              # jumptable 0035DB18 cases 1-5,7,8
.text:0035DC64 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DC68 25 28 40 00                                   move    $a1, $v0
.text:0035DC6C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DC70 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DC74 00 00 00 00                                   nop
.text:0035DC78 1A 00 00 10                                   b       def_35DB18       # jumptable 0035DB18 default case, cases 0,12,13,15
.text:0035DC7C 00 00 00 00                                   nop
.text:0035DC80                                # ---------------------------------------------------------------------------
.text:0035DC80
.text:0035DC80                               loc_35DC80:                              # jumptable 0035DB18 cases 10,11,16,17
.text:0035DC80 01 00 05 24                                   li      $a1, 1
.text:0035DC84 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DC88 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035DC8C 00 00 00 00                                   nop
.text:0035DC90 25 18 40 00                                   move    $v1, $v0
.text:0035DC94 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DC98 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035DC9C 11 00 00 10                                   b       def_35DB18       # jumptable 0035DB18 default case, cases 0,12,13,15
.text:0035DCA0 00 00 00 00                                   nop
.text:0035DCA4                                # ---------------------------------------------------------------------------
.text:0035DCA4
.text:0035DCA4                               loc_35DCA4:                              # jumptable 0035DB18 cases 9,14
.text:0035DCA4 98 80 82 93                                   lbu     $v0, currTextParam
.text:0035DCA8 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035DCAC FF 00 63 30                                   andi    $v1, 0xFF
.text:0035DCB0 98 80 83 A3                                   sb      $v1, currTextParam
.text:0035DCB4 C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035DCB8 36 00 02 3C 98 02 42 24                       li      $v0, textParams
.text:0035DCC0 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DCC4 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035DCC8 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035DCCC 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035DCD0 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035DCD4 00 00 00 00                                   nop
.text:0035DCD8 25 18 40 00                                   move    $v1, $v0
.text:0035DCDC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DCE0 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035DCE4
.text:0035DCE4                               def_35DB18:                              # jumptable 0035DB18 default case, cases 0,12,13,15
.text:0035DCE4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DCE8 04 00 42 24                                   addiu   $v0, 4
.text:0035DCEC 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035DCF0
.text:0035DCF0                               loc_35DCF0:
.text:0035DCF0 44 00 C3 8F                                   lw      $v1, 0x70+var_2C($fp)
.text:0035DCF4 48 00 C2 8F                                   lw      $v0, 0x70+var_28($fp)
.text:0035DCF8 7B FF 62 14                                   bne     $v1, $v0, loc_35DAE8
.text:0035DCFC 00 00 00 00                                   nop
.text:0035DD00 4C 00 C2 8F                                   lw      $v0, 0x70+var_24($fp)
.text:0035DD04 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DD08 98 03 6A 24                                   addiu   $a6, $v1, (arguments - 0x360000)
.text:0035DD0C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DD10 98 03 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035DD14 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DD18 98 03 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035DD1C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DD20 98 03 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035DD24 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DD28 98 03 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035DD2C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DD30 98 03 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035DD34 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DD38 98 03 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035DD3C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DD40 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035DD48 38 00 6B 8D                                   lw      $a7, (dword_3603D0 - 0x360398)($a7)
.text:0035DD4C 30 00 AB AF                                   sw      $a7, 0x70+var_40($sp)
.text:0035DD50 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035DD58 34 00 6B 8D                                   lw      $a7, (dword_3603CC - 0x360398)($a7)
.text:0035DD5C 28 00 AB AF                                   sw      $a7, 0x70+var_48($sp)
.text:0035DD60 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035DD68 30 00 6B 8D                                   lw      $a7, (dword_3603C8 - 0x360398)($a7)
.text:0035DD6C 20 00 AB AF                                   sw      $a7, 0x70+var_50($sp)
.text:0035DD70 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035DD78 2C 00 6B 8D                                   lw      $a7, (dword_3603C4 - 0x360398)($a7)
.text:0035DD7C 18 00 AB AF                                   sw      $a7, 0x70+var_58($sp)
.text:0035DD80 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035DD88 28 00 6B 8D                                   lw      $a7, (dword_3603C0 - 0x360398)($a7)
.text:0035DD8C 10 00 AB AF                                   sw      $a7, 0x70+var_60($sp)
.text:0035DD90 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035DD98 24 00 6B 8D                                   lw      $a7, (dword_3603BC - 0x360398)($a7)
.text:0035DD9C 08 00 AB AF                                   sw      $a7, 0x70+var_68($sp)
.text:0035DDA0 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035DDA8 20 00 6B 8D                                   lw      $a7, (dword_3603B8 - 0x360398)($a7)
.text:0035DDAC 00 00 AB AF                                   sw      $a7, 0x70+var_70($sp)
.text:0035DDB0 1C 00 4B 8D                                   lw      $a7, (dword_3603B4 - 0x360398)($a6)
.text:0035DDB4 18 00 2A 8D                                   lw      $a6, (dword_3603B0 - 0x360398)($a5)
.text:0035DDB8 14 00 09 8D                                   lw      $a5, (dword_3603AC - 0x360398)($a4)
.text:0035DDBC 10 00 E8 8C                                   lw      $a4, (dword_3603A8 - 0x360398)($a3)
.text:0035DDC0 0C 00 C7 8C                                   lw      $a3, (dword_3603A4 - 0x360398)($a2)
.text:0035DDC4 08 00 A6 8C                                   lw      $a2, (dword_3603A0 - 0x360398)($a1)
.text:0035DDC8 04 00 85 8C                                   lw      $a1, (dword_36039C - 0x360398)($a0)
.text:0035DDCC 98 03 64 8C                                   lw      $a0, (arguments - 0x360000)($v1)
.text:0035DDD0 09 F8 40 00                                   jalr    $v0
.text:0035DDD4 00 00 00 00                                   nop
.text:0035DDD8 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035DDDC BB 7D 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035DDE0 00 00 00 00                                   nop
.text:0035DDE4 25 10 00 00                                   move    $v0, $zero
.text:0035DDE8 25 E8 C0 03                                   move    $sp, $fp
.text:0035DDEC 78 00 BF DF                                   ld      $ra, 0x70+var_s8($sp)
.text:0035DDF0 70 00 BE DF                                   ld      $fp, 0x70+var_s0($sp)
.text:0035DDF4 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035DDF8 08 00 E0 03                                   jr      $ra
.text:0035DDFC 00 00 00 00                                   nop
.text:0035DDFC                                # } // starts at 35DA44
.text:0035DDFC                                # End of function opcode_0AA5(CRunningScript *)
.text:0035DDFC
.text:0035DE00
.text:0035DE00                                # =============== S U B R O U T I N E =======================================
.text:0035DE00
.text:0035DE00                                # Attributes: bp-based frame fpd=0x70
.text:0035DE00
.text:0035DE00                                # _DWORD __fastcall opcode_0AA6(CRunningScript *)
.text:0035DE00                                               .globl opcode_0AA6(CRunningScript *)
.text:0035DE00                               opcode_0AA6(CRunningScript *):
.text:0035DE00
.text:0035DE00                               var_70          = -0x70
.text:0035DE00                               var_68          = -0x68
.text:0035DE00                               var_60          = -0x60
.text:0035DE00                               var_58          = -0x58
.text:0035DE00                               var_50          = -0x50
.text:0035DE00                               var_48          = -0x48
.text:0035DE00                               var_40          = -0x40
.text:0035DE00                               var_38          = -0x38
.text:0035DE00                               var_30          = -0x30
.text:0035DE00                               var_2C          = -0x2C
.text:0035DE00                               var_28          = -0x28
.text:0035DE00                               var_24          = -0x24
.text:0035DE00                               var_20          = -0x20
.text:0035DE00                               var_1C          = -0x1C
.text:0035DE00                               var_18          = -0x18
.text:0035DE00                               var_10          = -0x10
.text:0035DE00                               var_s0          =  0
.text:0035DE00                               var_s8          =  8
.text:0035DE00
.text:0035DE00                                # __unwind {
.text:0035DE00 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035DE04 78 00 BF FF                                   sd      $ra, 0x70+var_s8($sp)
.text:0035DE08 70 00 BE FF                                   sd      $fp, 0x70+var_s0($sp)
.text:0035DE0C 25 F0 A0 03                                   move    $fp, $sp
.text:0035DE10 60 00 C4 AF                                   sw      $a0, 0x70+var_10($fp)
.text:0035DE14 4C 00 C2 27                                   addiu   $v0, $fp, 0x70+var_24
.text:0035DE18 25 28 40 00                                   move    $a1, $v0
.text:0035DE1C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DE20 CC 7E 0D 0C                                   jal     operator>><void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035DE24 00 00 00 00                                   nop
.text:0035DE28 50 00 C3 27                                   addiu   $v1, $fp, 0x70+var_20
.text:0035DE2C 25 28 60 00                                   move    $a1, $v1
.text:0035DE30 25 20 40 00                                   move    $a0, $v0
.text:0035DE34 78 7E 0D 0C                                   jal     operator>>(CRunningScript &,void *&)
.text:0035DE38 00 00 00 00                                   nop
.text:0035DE3C 54 00 C3 27                                   addiu   $v1, $fp, 0x70+var_1C
.text:0035DE40 25 28 60 00                                   move    $a1, $v1
.text:0035DE44 25 20 40 00                                   move    $a0, $v0
.text:0035DE48 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DE4C 00 00 00 00                                   nop
.text:0035DE50 58 00 C3 27                                   addiu   $v1, $fp, 0x70+var_18
.text:0035DE54 25 28 60 00                                   move    $a1, $v1
.text:0035DE58 25 20 40 00                                   move    $a0, $v0
.text:0035DE5C FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DE60 00 00 00 00                                   nop
.text:0035DE64 54 00 C2 8F                                   lw      $v0, 0x70+var_1C($fp)
.text:0035DE68 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035DE6C 03 00 40 14                                   bnez    $v0, loc_35DE7C
.text:0035DE70 00 00 00 00                                   nop
.text:0035DE74 0F 00 02 24                                   li      $v0, 0xF
.text:0035DE78 54 00 C2 AF                                   sw      $v0, 0x70+var_1C($fp)
.text:0035DE7C
.text:0035DE7C                               loc_35DE7C:
.text:0035DE7C 58 00 C2 8F                                   lw      $v0, 0x70+var_18($fp)
.text:0035DE80 80 10 02 00                                   sll     $v0, 2
.text:0035DE84 58 00 C2 AF                                   sw      $v0, 0x70+var_18($fp)
.text:0035DE88 54 00 C2 8F                                   lw      $v0, 0x70+var_1C($fp)
.text:0035DE8C 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DE90 36 00 02 3C 98 03 42 24                       li      $v0, arguments
.text:0035DE98 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DE9C 48 00 C2 AF                                   sw      $v0, 0x70+var_28($fp)
.text:0035DEA0 40 00 C0 AF                                   sw      $zero, 0x70+var_30($fp)
.text:0035DEA4 36 00 02 3C 98 03 42 24                       li      $v0, arguments
.text:0035DEAC 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035DEB0 83 00 00 10                                   b       loc_35E0C0
.text:0035DEB4 00 00 00 00                                   nop
.text:0035DEB8                                # ---------------------------------------------------------------------------
.text:0035DEB8
.text:0035DEB8                               loc_35DEB8:                              # this
.text:0035DEB8 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DEBC 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035DEC0 00 00 00 00                                   nop
.text:0035DEC4 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035DEC8 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035DECC 79 00 60 10                                   beqz    $v1, def_35DEE8  # jumptable 0035DEE8 default case, cases 0,12,13,15
.text:0035DED0 00 00 00 00                                   nop
.text:0035DED4 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DED8 36 00 02 3C 1C FE 42 24                       li      $v0, jpt_35DEE8
.text:0035DEE0 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DEE4 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035DEE8 08 00 40 00                                   jr      $v0              # switch jump
.text:0035DEEC 00 00 00 00                                   nop
.text:0035DEF0                                # ---------------------------------------------------------------------------
.text:0035DEF0
.text:0035DEF0                               loc_35DEF0:                              # jumptable 0035DEE8 case 6
.text:0035DEF0 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DEF4 25 28 40 00                                   move    $a1, $v0
.text:0035DEF8 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DEFC 4E 7E 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035DF00 00 00 00 00                                   nop
.text:0035DF04 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035DF08 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035DF0C 44 00 40 10                                   beqz    $v0, def_35DF2C  # jumptable 0035DF2C default case
.text:0035DF10 00 00 00 00                                   nop
.text:0035DF14 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035DF18 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DF1C 36 00 02 3C 64 FE 42 24                       li      $v0, jpt_35DF2C
.text:0035DF24 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DF28 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035DF2C 08 00 40 00                                   jr      $v0              # switch jump
.text:0035DF30 00 00 00 00                                   nop
.text:0035DF34                                # ---------------------------------------------------------------------------
.text:0035DF34
.text:0035DF34                               loc_35DF34:                              # jumptable 0035DF2C case 0
.text:0035DF34 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DF38 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035DF3C 38 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DF40 00 00 00 00                                   nop
.text:0035DF44                                # ---------------------------------------------------------------------------
.text:0035DF44
.text:0035DF44                               loc_35DF44:                              # jumptable 0035DF2C case 1
.text:0035DF44 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DF48 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035DF4C 34 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DF50 00 00 00 00                                   nop
.text:0035DF54                                # ---------------------------------------------------------------------------
.text:0035DF54
.text:0035DF54                               loc_35DF54:                              # jumptable 0035DF2C case 2
.text:0035DF54 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DF58 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035DF5C 30 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DF60 00 00 00 00                                   nop
.text:0035DF64                                # ---------------------------------------------------------------------------
.text:0035DF64
.text:0035DF64                               loc_35DF64:                              # jumptable 0035DF2C case 3
.text:0035DF64 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DF68 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035DF6C 2C 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DF70 00 00 00 00                                   nop
.text:0035DF74                                # ---------------------------------------------------------------------------
.text:0035DF74
.text:0035DF74                               loc_35DF74:                              # jumptable 0035DF2C case 4
.text:0035DF74 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DF78 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035DF7C 28 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DF80 00 00 00 00                                   nop
.text:0035DF84                                # ---------------------------------------------------------------------------
.text:0035DF84
.text:0035DF84                               loc_35DF84:                              # jumptable 0035DF2C case 5
.text:0035DF84 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DF88 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035DF8C 24 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DF90 00 00 00 00                                   nop
.text:0035DF94                                # ---------------------------------------------------------------------------
.text:0035DF94
.text:0035DF94                               loc_35DF94:                              # jumptable 0035DF2C case 6
.text:0035DF94 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DF98 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035DF9C 20 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DFA0 00 00 00 00                                   nop
.text:0035DFA4                                # ---------------------------------------------------------------------------
.text:0035DFA4
.text:0035DFA4                               loc_35DFA4:                              # jumptable 0035DF2C case 7
.text:0035DFA4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DFA8 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035DFAC 1C 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DFB0 00 00 00 00                                   nop
.text:0035DFB4                                # ---------------------------------------------------------------------------
.text:0035DFB4
.text:0035DFB4                               loc_35DFB4:                              # jumptable 0035DF2C case 8
.text:0035DFB4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DFB8 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035DFBC 18 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DFC0 00 00 00 00                                   nop
.text:0035DFC4                                # ---------------------------------------------------------------------------
.text:0035DFC4
.text:0035DFC4                               loc_35DFC4:                              # jumptable 0035DF2C case 9
.text:0035DFC4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DFC8 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035DFCC 14 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DFD0 00 00 00 00                                   nop
.text:0035DFD4                                # ---------------------------------------------------------------------------
.text:0035DFD4
.text:0035DFD4                               loc_35DFD4:                              # jumptable 0035DF2C case 10
.text:0035DFD4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DFD8 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035DFDC 10 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DFE0 00 00 00 00                                   nop
.text:0035DFE4                                # ---------------------------------------------------------------------------
.text:0035DFE4
.text:0035DFE4                               loc_35DFE4:                              # jumptable 0035DF2C case 11
.text:0035DFE4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DFE8 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035DFEC 0C 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035DFF0 00 00 00 00                                   nop
.text:0035DFF4                                # ---------------------------------------------------------------------------
.text:0035DFF4
.text:0035DFF4                               loc_35DFF4:                              # jumptable 0035DF2C case 12
.text:0035DFF4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DFF8 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035DFFC 08 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035E000 00 00 00 00                                   nop
.text:0035E004                                # ---------------------------------------------------------------------------
.text:0035E004
.text:0035E004                               loc_35E004:                              # jumptable 0035DF2C case 13
.text:0035E004 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E008 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035E00C 04 00 00 10                                   b       def_35DF2C       # jumptable 0035DF2C default case
.text:0035E010 00 00 00 00                                   nop
.text:0035E014                                # ---------------------------------------------------------------------------
.text:0035E014
.text:0035E014                               loc_35E014:                              # jumptable 0035DF2C case 14
.text:0035E014 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E018 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035E01C 00 00 00 00                                   nop
.text:0035E020
.text:0035E020                               def_35DF2C:                              # jumptable 0035DF2C default case
.text:0035E020 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E024 01 00 42 24                                   addiu   $v0, 1
.text:0035E028 40 00 C2 AF                                   sw      $v0, 0x70+var_30($fp)
.text:0035E02C 21 00 00 10                                   b       def_35DEE8       # jumptable 0035DEE8 default case, cases 0,12,13,15
.text:0035E030 00 00 00 00                                   nop
.text:0035E034                                # ---------------------------------------------------------------------------
.text:0035E034
.text:0035E034                               loc_35E034:                              # jumptable 0035DEE8 cases 1-5,7,8
.text:0035E034 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E038 25 28 40 00                                   move    $a1, $v0
.text:0035E03C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E040 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E044 00 00 00 00                                   nop
.text:0035E048 1A 00 00 10                                   b       def_35DEE8       # jumptable 0035DEE8 default case, cases 0,12,13,15
.text:0035E04C 00 00 00 00                                   nop
.text:0035E050                                # ---------------------------------------------------------------------------
.text:0035E050
.text:0035E050                               loc_35E050:                              # jumptable 0035DEE8 cases 10,11,16,17
.text:0035E050 01 00 05 24                                   li      $a1, 1
.text:0035E054 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E058 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035E05C 00 00 00 00                                   nop
.text:0035E060 25 18 40 00                                   move    $v1, $v0
.text:0035E064 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E068 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E06C 11 00 00 10                                   b       def_35DEE8       # jumptable 0035DEE8 default case, cases 0,12,13,15
.text:0035E070 00 00 00 00                                   nop
.text:0035E074                                # ---------------------------------------------------------------------------
.text:0035E074
.text:0035E074                               loc_35E074:                              # jumptable 0035DEE8 cases 9,14
.text:0035E074 98 80 82 93                                   lbu     $v0, currTextParam
.text:0035E078 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035E07C FF 00 63 30                                   andi    $v1, 0xFF
.text:0035E080 98 80 83 A3                                   sb      $v1, currTextParam
.text:0035E084 C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035E088 36 00 02 3C 98 02 42 24                       li      $v0, textParams
.text:0035E090 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E094 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035E098 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035E09C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035E0A0 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E0A4 00 00 00 00                                   nop
.text:0035E0A8 25 18 40 00                                   move    $v1, $v0
.text:0035E0AC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E0B0 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E0B4
.text:0035E0B4                               def_35DEE8:                              # jumptable 0035DEE8 default case, cases 0,12,13,15
.text:0035E0B4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E0B8 04 00 42 24                                   addiu   $v0, 4
.text:0035E0BC 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035E0C0
.text:0035E0C0                               loc_35E0C0:
.text:0035E0C0 44 00 C3 8F                                   lw      $v1, 0x70+var_2C($fp)
.text:0035E0C4 48 00 C2 8F                                   lw      $v0, 0x70+var_28($fp)
.text:0035E0C8 7B FF 62 14                                   bne     $v1, $v0, loc_35DEB8
.text:0035E0CC 00 00 00 00                                   nop
.text:0035E0D0 4C 00 C2 8F                                   lw      $v0, 0x70+var_24($fp)
.text:0035E0D4 50 00 CC 8F                                   lw      $t4, 0x70+var_20($fp)
.text:0035E0D8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E0DC 98 03 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035E0E0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E0E4 98 03 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035E0E8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E0EC 98 03 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035E0F0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E0F4 98 03 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035E0F8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E0FC 98 03 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035E100 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E104 98 03 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035E108 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E10C 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E114 38 00 4A 8D                                   lw      $a6, (dword_3603D0 - 0x360398)($a6)
.text:0035E118 38 00 AA AF                                   sw      $a6, 0x70+var_38($sp)
.text:0035E11C 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E124 34 00 4A 8D                                   lw      $a6, (dword_3603CC - 0x360398)($a6)
.text:0035E128 30 00 AA AF                                   sw      $a6, 0x70+var_40($sp)
.text:0035E12C 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E134 30 00 4A 8D                                   lw      $a6, (dword_3603C8 - 0x360398)($a6)
.text:0035E138 28 00 AA AF                                   sw      $a6, 0x70+var_48($sp)
.text:0035E13C 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E144 2C 00 4A 8D                                   lw      $a6, (dword_3603C4 - 0x360398)($a6)
.text:0035E148 20 00 AA AF                                   sw      $a6, 0x70+var_50($sp)
.text:0035E14C 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E154 28 00 4A 8D                                   lw      $a6, (dword_3603C0 - 0x360398)($a6)
.text:0035E158 18 00 AA AF                                   sw      $a6, 0x70+var_58($sp)
.text:0035E15C 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E164 24 00 4A 8D                                   lw      $a6, (dword_3603BC - 0x360398)($a6)
.text:0035E168 10 00 AA AF                                   sw      $a6, 0x70+var_60($sp)
.text:0035E16C 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E174 20 00 4A 8D                                   lw      $a6, (dword_3603B8 - 0x360398)($a6)
.text:0035E178 08 00 AA AF                                   sw      $a6, 0x70+var_68($sp)
.text:0035E17C 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E184 1C 00 4A 8D                                   lw      $a6, (dword_3603B4 - 0x360398)($a6)
.text:0035E188 00 00 AA AF                                   sw      $a6, 0x70+var_70($sp)
.text:0035E18C 18 00 2B 8D                                   lw      $a7, (dword_3603B0 - 0x360398)($a5)
.text:0035E190 14 00 0A 8D                                   lw      $a6, (dword_3603AC - 0x360398)($a4)
.text:0035E194 10 00 E9 8C                                   lw      $a5, (dword_3603A8 - 0x360398)($a3)
.text:0035E198 0C 00 C8 8C                                   lw      $a4, (dword_3603A4 - 0x360398)($a2)
.text:0035E19C 08 00 A7 8C                                   lw      $a3, (dword_3603A0 - 0x360398)($a1)
.text:0035E1A0 04 00 86 8C                                   lw      $a2, (dword_36039C - 0x360398)($a0)
.text:0035E1A4 98 03 65 8C                                   lw      $a1, (arguments - 0x360000)($v1)
.text:0035E1A8 25 20 80 01                                   move    $a0, $t4
.text:0035E1AC 09 F8 40 00                                   jalr    $v0
.text:0035E1B0 00 00 00 00                                   nop
.text:0035E1B4 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035E1B8 BB 7D 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035E1BC 00 00 00 00                                   nop
.text:0035E1C0 25 10 00 00                                   move    $v0, $zero
.text:0035E1C4 25 E8 C0 03                                   move    $sp, $fp
.text:0035E1C8 78 00 BF DF                                   ld      $ra, 0x70+var_s8($sp)
.text:0035E1CC 70 00 BE DF                                   ld      $fp, 0x70+var_s0($sp)
.text:0035E1D0 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035E1D4 08 00 E0 03                                   jr      $ra
.text:0035E1D8 00 00 00 00                                   nop
.text:0035E1D8                                # } // starts at 35DE00
.text:0035E1D8                                # End of function opcode_0AA6(CRunningScript *)
.text:0035E1D8
.text:0035E1DC
.text:0035E1DC                                # =============== S U B R O U T I N E =======================================
.text:0035E1DC
.text:0035E1DC                                # Attributes: bp-based frame fpd=0x70
.text:0035E1DC
.text:0035E1DC                                # _DWORD __fastcall opcode_0AA7(CRunningScript *)
.text:0035E1DC                                               .globl opcode_0AA7(CRunningScript *)
.text:0035E1DC                               opcode_0AA7(CRunningScript *):
.text:0035E1DC
.text:0035E1DC                               var_70          = -0x70
.text:0035E1DC                               var_68          = -0x68
.text:0035E1DC                               var_60          = -0x60
.text:0035E1DC                               var_58          = -0x58
.text:0035E1DC                               var_50          = -0x50
.text:0035E1DC                               var_48          = -0x48
.text:0035E1DC                               var_40          = -0x40
.text:0035E1DC                               var_30          = -0x30
.text:0035E1DC                               var_2C          = -0x2C
.text:0035E1DC                               var_28          = -0x28
.text:0035E1DC                               var_24          = -0x24
.text:0035E1DC                               var_20          = -0x20
.text:0035E1DC                               var_1C          = -0x1C
.text:0035E1DC                               var_18          = -0x18
.text:0035E1DC                               var_10          = -0x10
.text:0035E1DC                               var_s0          =  0
.text:0035E1DC                               var_s8          =  8
.text:0035E1DC
.text:0035E1DC                                # __unwind {
.text:0035E1DC 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035E1E0 78 00 BF FF                                   sd      $ra, 0x70+var_s8($sp)
.text:0035E1E4 70 00 BE FF                                   sd      $fp, 0x70+var_s0($sp)
.text:0035E1E8 25 F0 A0 03                                   move    $fp, $sp
.text:0035E1EC 60 00 C4 AF                                   sw      $a0, 0x70+var_10($fp)
.text:0035E1F0 50 00 C2 27                                   addiu   $v0, $fp, 0x70+var_20
.text:0035E1F4 25 28 40 00                                   move    $a1, $v0
.text:0035E1F8 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E1FC E2 7E 0D 0C                                   jal     operator>><ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035E200 00 00 00 00                                   nop
.text:0035E204 54 00 C3 27                                   addiu   $v1, $fp, 0x70+var_1C
.text:0035E208 25 28 60 00                                   move    $a1, $v1
.text:0035E20C 25 20 40 00                                   move    $a0, $v0
.text:0035E210 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E214 00 00 00 00                                   nop
.text:0035E218 58 00 C3 27                                   addiu   $v1, $fp, 0x70+var_18
.text:0035E21C 25 28 60 00                                   move    $a1, $v1
.text:0035E220 25 20 40 00                                   move    $a0, $v0
.text:0035E224 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E228 00 00 00 00                                   nop
.text:0035E22C 54 00 C2 8F                                   lw      $v0, 0x70+var_1C($fp)
.text:0035E230 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035E234 03 00 40 14                                   bnez    $v0, loc_35E244
.text:0035E238 00 00 00 00                                   nop
.text:0035E23C 0F 00 02 24                                   li      $v0, 0xF
.text:0035E240 54 00 C2 AF                                   sw      $v0, 0x70+var_1C($fp)
.text:0035E244
.text:0035E244                               loc_35E244:
.text:0035E244 58 00 C2 8F                                   lw      $v0, 0x70+var_18($fp)
.text:0035E248 80 10 02 00                                   sll     $v0, 2
.text:0035E24C 58 00 C2 AF                                   sw      $v0, 0x70+var_18($fp)
.text:0035E250 54 00 C2 8F                                   lw      $v0, 0x70+var_1C($fp)
.text:0035E254 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E258 36 00 02 3C 98 03 42 24                       li      $v0, arguments
.text:0035E260 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E264 48 00 C2 AF                                   sw      $v0, 0x70+var_28($fp)
.text:0035E268 40 00 C0 AF                                   sw      $zero, 0x70+var_30($fp)
.text:0035E26C 36 00 02 3C 98 03 42 24                       li      $v0, arguments
.text:0035E274 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035E278 83 00 00 10                                   b       loc_35E488
.text:0035E27C 00 00 00 00                                   nop
.text:0035E280                                # ---------------------------------------------------------------------------
.text:0035E280
.text:0035E280                               loc_35E280:                              # this
.text:0035E280 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E284 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035E288 00 00 00 00                                   nop
.text:0035E28C 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035E290 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035E294 79 00 60 10                                   beqz    $v1, def_35E2B0  # jumptable 0035E2B0 default case, cases 0,12,13,15
.text:0035E298 00 00 00 00                                   nop
.text:0035E29C 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E2A0 36 00 02 3C A0 FE 42 24                       li      $v0, jpt_35E2B0
.text:0035E2A8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E2AC 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E2B0 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E2B4 00 00 00 00                                   nop
.text:0035E2B8                                # ---------------------------------------------------------------------------
.text:0035E2B8
.text:0035E2B8                               loc_35E2B8:                              # jumptable 0035E2B0 case 6
.text:0035E2B8 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E2BC 25 28 40 00                                   move    $a1, $v0
.text:0035E2C0 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E2C4 4E 7E 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035E2C8 00 00 00 00                                   nop
.text:0035E2CC 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E2D0 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035E2D4 44 00 40 10                                   beqz    $v0, def_35E2F4  # jumptable 0035E2F4 default case
.text:0035E2D8 00 00 00 00                                   nop
.text:0035E2DC 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E2E0 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E2E4 36 00 02 3C E8 FE 42 24                       li      $v0, jpt_35E2F4
.text:0035E2EC 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E2F0 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E2F4 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E2F8 00 00 00 00                                   nop
.text:0035E2FC                                # ---------------------------------------------------------------------------
.text:0035E2FC
.text:0035E2FC                               loc_35E2FC:                              # jumptable 0035E2F4 case 0
.text:0035E2FC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E300 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035E304 38 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E308 00 00 00 00                                   nop
.text:0035E30C                                # ---------------------------------------------------------------------------
.text:0035E30C
.text:0035E30C                               loc_35E30C:                              # jumptable 0035E2F4 case 1
.text:0035E30C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E310 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035E314 34 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E318 00 00 00 00                                   nop
.text:0035E31C                                # ---------------------------------------------------------------------------
.text:0035E31C
.text:0035E31C                               loc_35E31C:                              # jumptable 0035E2F4 case 2
.text:0035E31C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E320 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035E324 30 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E328 00 00 00 00                                   nop
.text:0035E32C                                # ---------------------------------------------------------------------------
.text:0035E32C
.text:0035E32C                               loc_35E32C:                              # jumptable 0035E2F4 case 3
.text:0035E32C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E330 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035E334 2C 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E338 00 00 00 00                                   nop
.text:0035E33C                                # ---------------------------------------------------------------------------
.text:0035E33C
.text:0035E33C                               loc_35E33C:                              # jumptable 0035E2F4 case 4
.text:0035E33C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E340 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035E344 28 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E348 00 00 00 00                                   nop
.text:0035E34C                                # ---------------------------------------------------------------------------
.text:0035E34C
.text:0035E34C                               loc_35E34C:                              # jumptable 0035E2F4 case 5
.text:0035E34C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E350 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035E354 24 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E358 00 00 00 00                                   nop
.text:0035E35C                                # ---------------------------------------------------------------------------
.text:0035E35C
.text:0035E35C                               loc_35E35C:                              # jumptable 0035E2F4 case 6
.text:0035E35C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E360 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035E364 20 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E368 00 00 00 00                                   nop
.text:0035E36C                                # ---------------------------------------------------------------------------
.text:0035E36C
.text:0035E36C                               loc_35E36C:                              # jumptable 0035E2F4 case 7
.text:0035E36C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E370 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035E374 1C 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E378 00 00 00 00                                   nop
.text:0035E37C                                # ---------------------------------------------------------------------------
.text:0035E37C
.text:0035E37C                               loc_35E37C:                              # jumptable 0035E2F4 case 8
.text:0035E37C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E380 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035E384 18 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E388 00 00 00 00                                   nop
.text:0035E38C                                # ---------------------------------------------------------------------------
.text:0035E38C
.text:0035E38C                               loc_35E38C:                              # jumptable 0035E2F4 case 9
.text:0035E38C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E390 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035E394 14 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E398 00 00 00 00                                   nop
.text:0035E39C                                # ---------------------------------------------------------------------------
.text:0035E39C
.text:0035E39C                               loc_35E39C:                              # jumptable 0035E2F4 case 10
.text:0035E39C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E3A0 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035E3A4 10 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E3A8 00 00 00 00                                   nop
.text:0035E3AC                                # ---------------------------------------------------------------------------
.text:0035E3AC
.text:0035E3AC                               loc_35E3AC:                              # jumptable 0035E2F4 case 11
.text:0035E3AC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E3B0 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035E3B4 0C 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E3B8 00 00 00 00                                   nop
.text:0035E3BC                                # ---------------------------------------------------------------------------
.text:0035E3BC
.text:0035E3BC                               loc_35E3BC:                              # jumptable 0035E2F4 case 12
.text:0035E3BC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E3C0 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035E3C4 08 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E3C8 00 00 00 00                                   nop
.text:0035E3CC                                # ---------------------------------------------------------------------------
.text:0035E3CC
.text:0035E3CC                               loc_35E3CC:                              # jumptable 0035E2F4 case 13
.text:0035E3CC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E3D0 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035E3D4 04 00 00 10                                   b       def_35E2F4       # jumptable 0035E2F4 default case
.text:0035E3D8 00 00 00 00                                   nop
.text:0035E3DC                                # ---------------------------------------------------------------------------
.text:0035E3DC
.text:0035E3DC                               loc_35E3DC:                              # jumptable 0035E2F4 case 14
.text:0035E3DC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E3E0 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035E3E4 00 00 00 00                                   nop
.text:0035E3E8
.text:0035E3E8                               def_35E2F4:                              # jumptable 0035E2F4 default case
.text:0035E3E8 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E3EC 01 00 42 24                                   addiu   $v0, 1
.text:0035E3F0 40 00 C2 AF                                   sw      $v0, 0x70+var_30($fp)
.text:0035E3F4 21 00 00 10                                   b       def_35E2B0       # jumptable 0035E2B0 default case, cases 0,12,13,15
.text:0035E3F8 00 00 00 00                                   nop
.text:0035E3FC                                # ---------------------------------------------------------------------------
.text:0035E3FC
.text:0035E3FC                               loc_35E3FC:                              # jumptable 0035E2B0 cases 1-5,7,8
.text:0035E3FC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E400 25 28 40 00                                   move    $a1, $v0
.text:0035E404 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E408 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E40C 00 00 00 00                                   nop
.text:0035E410 1A 00 00 10                                   b       def_35E2B0       # jumptable 0035E2B0 default case, cases 0,12,13,15
.text:0035E414 00 00 00 00                                   nop
.text:0035E418                                # ---------------------------------------------------------------------------
.text:0035E418
.text:0035E418                               loc_35E418:                              # jumptable 0035E2B0 cases 10,11,16,17
.text:0035E418 01 00 05 24                                   li      $a1, 1
.text:0035E41C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E420 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035E424 00 00 00 00                                   nop
.text:0035E428 25 18 40 00                                   move    $v1, $v0
.text:0035E42C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E430 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E434 11 00 00 10                                   b       def_35E2B0       # jumptable 0035E2B0 default case, cases 0,12,13,15
.text:0035E438 00 00 00 00                                   nop
.text:0035E43C                                # ---------------------------------------------------------------------------
.text:0035E43C
.text:0035E43C                               loc_35E43C:                              # jumptable 0035E2B0 cases 9,14
.text:0035E43C 98 80 82 93                                   lbu     $v0, currTextParam
.text:0035E440 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035E444 FF 00 63 30                                   andi    $v1, 0xFF
.text:0035E448 98 80 83 A3                                   sb      $v1, currTextParam
.text:0035E44C C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035E450 36 00 02 3C 98 02 42 24                       li      $v0, textParams
.text:0035E458 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E45C 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035E460 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035E464 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035E468 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E46C 00 00 00 00                                   nop
.text:0035E470 25 18 40 00                                   move    $v1, $v0
.text:0035E474 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E478 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E47C
.text:0035E47C                               def_35E2B0:                              # jumptable 0035E2B0 default case, cases 0,12,13,15
.text:0035E47C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E480 04 00 42 24                                   addiu   $v0, 4
.text:0035E484 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035E488
.text:0035E488                               loc_35E488:
.text:0035E488 44 00 C3 8F                                   lw      $v1, 0x70+var_2C($fp)
.text:0035E48C 48 00 C2 8F                                   lw      $v0, 0x70+var_28($fp)
.text:0035E490 7B FF 62 14                                   bne     $v1, $v0, loc_35E280
.text:0035E494 00 00 00 00                                   nop
.text:0035E498 50 00 C2 8F                                   lw      $v0, 0x70+var_20($fp)
.text:0035E49C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E4A0 98 03 6A 24                                   addiu   $a6, $v1, (arguments - 0x360000)
.text:0035E4A4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E4A8 98 03 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035E4AC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E4B0 98 03 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035E4B4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E4B8 98 03 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035E4BC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E4C0 98 03 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035E4C4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E4C8 98 03 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035E4CC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E4D0 98 03 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035E4D4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E4D8 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035E4E0 38 00 6B 8D                                   lw      $a7, (dword_3603D0 - 0x360398)($a7)
.text:0035E4E4 30 00 AB AF                                   sw      $a7, 0x70+var_40($sp)
.text:0035E4E8 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035E4F0 34 00 6B 8D                                   lw      $a7, (dword_3603CC - 0x360398)($a7)
.text:0035E4F4 28 00 AB AF                                   sw      $a7, 0x70+var_48($sp)
.text:0035E4F8 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035E500 30 00 6B 8D                                   lw      $a7, (dword_3603C8 - 0x360398)($a7)
.text:0035E504 20 00 AB AF                                   sw      $a7, 0x70+var_50($sp)
.text:0035E508 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035E510 2C 00 6B 8D                                   lw      $a7, (dword_3603C4 - 0x360398)($a7)
.text:0035E514 18 00 AB AF                                   sw      $a7, 0x70+var_58($sp)
.text:0035E518 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035E520 28 00 6B 8D                                   lw      $a7, (dword_3603C0 - 0x360398)($a7)
.text:0035E524 10 00 AB AF                                   sw      $a7, 0x70+var_60($sp)
.text:0035E528 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035E530 24 00 6B 8D                                   lw      $a7, (dword_3603BC - 0x360398)($a7)
.text:0035E534 08 00 AB AF                                   sw      $a7, 0x70+var_68($sp)
.text:0035E538 36 00 0B 3C 98 03 6B 25                       li      $a7, arguments
.text:0035E540 20 00 6B 8D                                   lw      $a7, (dword_3603B8 - 0x360398)($a7)
.text:0035E544 00 00 AB AF                                   sw      $a7, 0x70+var_70($sp)
.text:0035E548 1C 00 4B 8D                                   lw      $a7, (dword_3603B4 - 0x360398)($a6)
.text:0035E54C 18 00 2A 8D                                   lw      $a6, (dword_3603B0 - 0x360398)($a5)
.text:0035E550 14 00 09 8D                                   lw      $a5, (dword_3603AC - 0x360398)($a4)
.text:0035E554 10 00 E8 8C                                   lw      $a4, (dword_3603A8 - 0x360398)($a3)
.text:0035E558 0C 00 C7 8C                                   lw      $a3, (dword_3603A4 - 0x360398)($a2)
.text:0035E55C 08 00 A6 8C                                   lw      $a2, (dword_3603A0 - 0x360398)($a1)
.text:0035E560 04 00 85 8C                                   lw      $a1, (dword_36039C - 0x360398)($a0)
.text:0035E564 98 03 64 8C                                   lw      $a0, (arguments - 0x360000)($v1)
.text:0035E568 09 F8 40 00                                   jalr    $v0
.text:0035E56C 00 00 00 00                                   nop
.text:0035E570 4C 00 C2 AF                                   sw      $v0, 0x70+var_24($fp)
.text:0035E574 4C 00 C5 8F                                   lw      $a1, 0x70+var_24($fp)
.text:0035E578 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E57C 11 7E 0D 0C                                   jal     operator<<(CRunningScript &,ulong)
.text:0035E580 00 00 00 00                                   nop
.text:0035E584 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035E588 BB 7D 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035E58C 00 00 00 00                                   nop
.text:0035E590 25 10 00 00                                   move    $v0, $zero
.text:0035E594 25 E8 C0 03                                   move    $sp, $fp
.text:0035E598 78 00 BF DF                                   ld      $ra, 0x70+var_s8($sp)
.text:0035E59C 70 00 BE DF                                   ld      $fp, 0x70+var_s0($sp)
.text:0035E5A0 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035E5A4 08 00 E0 03                                   jr      $ra
.text:0035E5A8 00 00 00 00                                   nop
.text:0035E5A8                                # } // starts at 35E1DC
.text:0035E5A8                                # End of function opcode_0AA7(CRunningScript *)
.text:0035E5A8
.text:0035E5AC
.text:0035E5AC                                # =============== S U B R O U T I N E =======================================
.text:0035E5AC
.text:0035E5AC                                # Attributes: bp-based frame fpd=0x70
.text:0035E5AC
.text:0035E5AC                                # _DWORD __fastcall opcode_0AA8(CRunningScript *)
.text:0035E5AC                                               .globl opcode_0AA8(CRunningScript *)
.text:0035E5AC                               opcode_0AA8(CRunningScript *):
.text:0035E5AC
.text:0035E5AC                               var_70          = -0x70
.text:0035E5AC                               var_68          = -0x68
.text:0035E5AC                               var_60          = -0x60
.text:0035E5AC                               var_58          = -0x58
.text:0035E5AC                               var_50          = -0x50
.text:0035E5AC                               var_48          = -0x48
.text:0035E5AC                               var_40          = -0x40
.text:0035E5AC                               var_38          = -0x38
.text:0035E5AC                               var_30          = -0x30
.text:0035E5AC                               var_2C          = -0x2C
.text:0035E5AC                               var_28          = -0x28
.text:0035E5AC                               var_24          = -0x24
.text:0035E5AC                               var_20          = -0x20
.text:0035E5AC                               var_1C          = -0x1C
.text:0035E5AC                               var_18          = -0x18
.text:0035E5AC                               var_14          = -0x14
.text:0035E5AC                               var_10          = -0x10
.text:0035E5AC                               var_s0          =  0
.text:0035E5AC                               var_s8          =  8
.text:0035E5AC
.text:0035E5AC                                # __unwind {
.text:0035E5AC 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035E5B0 78 00 BF FF                                   sd      $ra, 0x70+var_s8($sp)
.text:0035E5B4 70 00 BE FF                                   sd      $fp, 0x70+var_s0($sp)
.text:0035E5B8 25 F0 A0 03                                   move    $fp, $sp
.text:0035E5BC 60 00 C4 AF                                   sw      $a0, 0x70+var_10($fp)
.text:0035E5C0 50 00 C2 27                                   addiu   $v0, $fp, 0x70+var_20
.text:0035E5C4 25 28 40 00                                   move    $a1, $v0
.text:0035E5C8 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E5CC F8 7E 0D 0C                                   jal     operator>><ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035E5D0 00 00 00 00                                   nop
.text:0035E5D4 54 00 C3 27                                   addiu   $v1, $fp, 0x70+var_1C
.text:0035E5D8 25 28 60 00                                   move    $a1, $v1
.text:0035E5DC 25 20 40 00                                   move    $a0, $v0
.text:0035E5E0 78 7E 0D 0C                                   jal     operator>>(CRunningScript &,void *&)
.text:0035E5E4 00 00 00 00                                   nop
.text:0035E5E8 58 00 C3 27                                   addiu   $v1, $fp, 0x70+var_18
.text:0035E5EC 25 28 60 00                                   move    $a1, $v1
.text:0035E5F0 25 20 40 00                                   move    $a0, $v0
.text:0035E5F4 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E5F8 00 00 00 00                                   nop
.text:0035E5FC 5C 00 C3 27                                   addiu   $v1, $fp, 0x70+var_14
.text:0035E600 25 28 60 00                                   move    $a1, $v1
.text:0035E604 25 20 40 00                                   move    $a0, $v0
.text:0035E608 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E60C 00 00 00 00                                   nop
.text:0035E610 58 00 C2 8F                                   lw      $v0, 0x70+var_18($fp)
.text:0035E614 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035E618 03 00 40 14                                   bnez    $v0, loc_35E628
.text:0035E61C 00 00 00 00                                   nop
.text:0035E620 0F 00 02 24                                   li      $v0, 0xF
.text:0035E624 58 00 C2 AF                                   sw      $v0, 0x70+var_18($fp)
.text:0035E628
.text:0035E628                               loc_35E628:
.text:0035E628 5C 00 C2 8F                                   lw      $v0, 0x70+var_14($fp)
.text:0035E62C 80 10 02 00                                   sll     $v0, 2
.text:0035E630 5C 00 C2 AF                                   sw      $v0, 0x70+var_14($fp)
.text:0035E634 58 00 C2 8F                                   lw      $v0, 0x70+var_18($fp)
.text:0035E638 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E63C 36 00 02 3C 98 03 42 24                       li      $v0, arguments
.text:0035E644 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E648 48 00 C2 AF                                   sw      $v0, 0x70+var_28($fp)
.text:0035E64C 40 00 C0 AF                                   sw      $zero, 0x70+var_30($fp)
.text:0035E650 36 00 02 3C 98 03 42 24                       li      $v0, arguments
.text:0035E658 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035E65C 83 00 00 10                                   b       loc_35E86C
.text:0035E660 00 00 00 00                                   nop
.text:0035E664                                # ---------------------------------------------------------------------------
.text:0035E664
.text:0035E664                               loc_35E664:                              # this
.text:0035E664 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E668 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035E66C 00 00 00 00                                   nop
.text:0035E670 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035E674 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035E678 79 00 60 10                                   beqz    $v1, def_35E694  # jumptable 0035E694 default case, cases 0,12,13,15
.text:0035E67C 00 00 00 00                                   nop
.text:0035E680 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E684 36 00 02 3C 24 FF 42 24                       li      $v0, jpt_35E694
.text:0035E68C 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E690 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E694 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E698 00 00 00 00                                   nop
.text:0035E69C                                # ---------------------------------------------------------------------------
.text:0035E69C
.text:0035E69C                               loc_35E69C:                              # jumptable 0035E694 case 6
.text:0035E69C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E6A0 25 28 40 00                                   move    $a1, $v0
.text:0035E6A4 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E6A8 4E 7E 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035E6AC 00 00 00 00                                   nop
.text:0035E6B0 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E6B4 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035E6B8 44 00 40 10                                   beqz    $v0, def_35E6D8  # jumptable 0035E6D8 default case
.text:0035E6BC 00 00 00 00                                   nop
.text:0035E6C0 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E6C4 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E6C8 36 00 02 3C 6C FF 42 24                       li      $v0, jpt_35E6D8
.text:0035E6D0 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E6D4 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E6D8 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E6DC 00 00 00 00                                   nop
.text:0035E6E0                                # ---------------------------------------------------------------------------
.text:0035E6E0
.text:0035E6E0                               loc_35E6E0:                              # jumptable 0035E6D8 case 0
.text:0035E6E0 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E6E4 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035E6E8 38 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E6EC 00 00 00 00                                   nop
.text:0035E6F0                                # ---------------------------------------------------------------------------
.text:0035E6F0
.text:0035E6F0                               loc_35E6F0:                              # jumptable 0035E6D8 case 1
.text:0035E6F0 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E6F4 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035E6F8 34 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E6FC 00 00 00 00                                   nop
.text:0035E700                                # ---------------------------------------------------------------------------
.text:0035E700
.text:0035E700                               loc_35E700:                              # jumptable 0035E6D8 case 2
.text:0035E700 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E704 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035E708 30 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E70C 00 00 00 00                                   nop
.text:0035E710                                # ---------------------------------------------------------------------------
.text:0035E710
.text:0035E710                               loc_35E710:                              # jumptable 0035E6D8 case 3
.text:0035E710 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E714 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035E718 2C 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E71C 00 00 00 00                                   nop
.text:0035E720                                # ---------------------------------------------------------------------------
.text:0035E720
.text:0035E720                               loc_35E720:                              # jumptable 0035E6D8 case 4
.text:0035E720 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E724 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035E728 28 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E72C 00 00 00 00                                   nop
.text:0035E730                                # ---------------------------------------------------------------------------
.text:0035E730
.text:0035E730                               loc_35E730:                              # jumptable 0035E6D8 case 5
.text:0035E730 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E734 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035E738 24 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E73C 00 00 00 00                                   nop
.text:0035E740                                # ---------------------------------------------------------------------------
.text:0035E740
.text:0035E740                               loc_35E740:                              # jumptable 0035E6D8 case 6
.text:0035E740 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E744 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035E748 20 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E74C 00 00 00 00                                   nop
.text:0035E750                                # ---------------------------------------------------------------------------
.text:0035E750
.text:0035E750                               loc_35E750:                              # jumptable 0035E6D8 case 7
.text:0035E750 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E754 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035E758 1C 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E75C 00 00 00 00                                   nop
.text:0035E760                                # ---------------------------------------------------------------------------
.text:0035E760
.text:0035E760                               loc_35E760:                              # jumptable 0035E6D8 case 8
.text:0035E760 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E764 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035E768 18 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E76C 00 00 00 00                                   nop
.text:0035E770                                # ---------------------------------------------------------------------------
.text:0035E770
.text:0035E770                               loc_35E770:                              # jumptable 0035E6D8 case 9
.text:0035E770 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E774 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035E778 14 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E77C 00 00 00 00                                   nop
.text:0035E780                                # ---------------------------------------------------------------------------
.text:0035E780
.text:0035E780                               loc_35E780:                              # jumptable 0035E6D8 case 10
.text:0035E780 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E784 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035E788 10 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E78C 00 00 00 00                                   nop
.text:0035E790                                # ---------------------------------------------------------------------------
.text:0035E790
.text:0035E790                               loc_35E790:                              # jumptable 0035E6D8 case 11
.text:0035E790 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E794 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035E798 0C 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E79C 00 00 00 00                                   nop
.text:0035E7A0                                # ---------------------------------------------------------------------------
.text:0035E7A0
.text:0035E7A0                               loc_35E7A0:                              # jumptable 0035E6D8 case 12
.text:0035E7A0 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E7A4 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035E7A8 08 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E7AC 00 00 00 00                                   nop
.text:0035E7B0                                # ---------------------------------------------------------------------------
.text:0035E7B0
.text:0035E7B0                               loc_35E7B0:                              # jumptable 0035E6D8 case 13
.text:0035E7B0 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E7B4 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035E7B8 04 00 00 10                                   b       def_35E6D8       # jumptable 0035E6D8 default case
.text:0035E7BC 00 00 00 00                                   nop
.text:0035E7C0                                # ---------------------------------------------------------------------------
.text:0035E7C0
.text:0035E7C0                               loc_35E7C0:                              # jumptable 0035E6D8 case 14
.text:0035E7C0 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E7C4 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035E7C8 00 00 00 00                                   nop
.text:0035E7CC
.text:0035E7CC                               def_35E6D8:                              # jumptable 0035E6D8 default case
.text:0035E7CC 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E7D0 01 00 42 24                                   addiu   $v0, 1
.text:0035E7D4 40 00 C2 AF                                   sw      $v0, 0x70+var_30($fp)
.text:0035E7D8 21 00 00 10                                   b       def_35E694       # jumptable 0035E694 default case, cases 0,12,13,15
.text:0035E7DC 00 00 00 00                                   nop
.text:0035E7E0                                # ---------------------------------------------------------------------------
.text:0035E7E0
.text:0035E7E0                               loc_35E7E0:                              # jumptable 0035E694 cases 1-5,7,8
.text:0035E7E0 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E7E4 25 28 40 00                                   move    $a1, $v0
.text:0035E7E8 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E7EC FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E7F0 00 00 00 00                                   nop
.text:0035E7F4 1A 00 00 10                                   b       def_35E694       # jumptable 0035E694 default case, cases 0,12,13,15
.text:0035E7F8 00 00 00 00                                   nop
.text:0035E7FC                                # ---------------------------------------------------------------------------
.text:0035E7FC
.text:0035E7FC                               loc_35E7FC:                              # jumptable 0035E694 cases 10,11,16,17
.text:0035E7FC 01 00 05 24                                   li      $a1, 1
.text:0035E800 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E804 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035E808 00 00 00 00                                   nop
.text:0035E80C 25 18 40 00                                   move    $v1, $v0
.text:0035E810 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E814 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E818 11 00 00 10                                   b       def_35E694       # jumptable 0035E694 default case, cases 0,12,13,15
.text:0035E81C 00 00 00 00                                   nop
.text:0035E820                                # ---------------------------------------------------------------------------
.text:0035E820
.text:0035E820                               loc_35E820:                              # jumptable 0035E694 cases 9,14
.text:0035E820 98 80 82 93                                   lbu     $v0, currTextParam
.text:0035E824 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035E828 FF 00 63 30                                   andi    $v1, 0xFF
.text:0035E82C 98 80 83 A3                                   sb      $v1, currTextParam
.text:0035E830 C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035E834 36 00 02 3C 98 02 42 24                       li      $v0, textParams
.text:0035E83C 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E840 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035E844 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035E848 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035E84C FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E850 00 00 00 00                                   nop
.text:0035E854 25 18 40 00                                   move    $v1, $v0
.text:0035E858 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E85C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E860
.text:0035E860                               def_35E694:                              # jumptable 0035E694 default case, cases 0,12,13,15
.text:0035E860 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E864 04 00 42 24                                   addiu   $v0, 4
.text:0035E868 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035E86C
.text:0035E86C                               loc_35E86C:
.text:0035E86C 44 00 C3 8F                                   lw      $v1, 0x70+var_2C($fp)
.text:0035E870 48 00 C2 8F                                   lw      $v0, 0x70+var_28($fp)
.text:0035E874 7B FF 62 14                                   bne     $v1, $v0, loc_35E664
.text:0035E878 00 00 00 00                                   nop
.text:0035E87C 50 00 C2 8F                                   lw      $v0, 0x70+var_20($fp)
.text:0035E880 54 00 CC 8F                                   lw      $t4, 0x70+var_1C($fp)
.text:0035E884 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E888 98 03 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035E88C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E890 98 03 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035E894 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E898 98 03 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035E89C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E8A0 98 03 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035E8A4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E8A8 98 03 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035E8AC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E8B0 98 03 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035E8B4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E8B8 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E8C0 38 00 4A 8D                                   lw      $a6, (dword_3603D0 - 0x360398)($a6)
.text:0035E8C4 38 00 AA AF                                   sw      $a6, 0x70+var_38($sp)
.text:0035E8C8 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E8D0 34 00 4A 8D                                   lw      $a6, (dword_3603CC - 0x360398)($a6)
.text:0035E8D4 30 00 AA AF                                   sw      $a6, 0x70+var_40($sp)
.text:0035E8D8 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E8E0 30 00 4A 8D                                   lw      $a6, (dword_3603C8 - 0x360398)($a6)
.text:0035E8E4 28 00 AA AF                                   sw      $a6, 0x70+var_48($sp)
.text:0035E8E8 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E8F0 2C 00 4A 8D                                   lw      $a6, (dword_3603C4 - 0x360398)($a6)
.text:0035E8F4 20 00 AA AF                                   sw      $a6, 0x70+var_50($sp)
.text:0035E8F8 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E900 28 00 4A 8D                                   lw      $a6, (dword_3603C0 - 0x360398)($a6)
.text:0035E904 18 00 AA AF                                   sw      $a6, 0x70+var_58($sp)
.text:0035E908 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E910 24 00 4A 8D                                   lw      $a6, (dword_3603BC - 0x360398)($a6)
.text:0035E914 10 00 AA AF                                   sw      $a6, 0x70+var_60($sp)
.text:0035E918 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E920 20 00 4A 8D                                   lw      $a6, (dword_3603B8 - 0x360398)($a6)
.text:0035E924 08 00 AA AF                                   sw      $a6, 0x70+var_68($sp)
.text:0035E928 36 00 0A 3C 98 03 4A 25                       li      $a6, arguments
.text:0035E930 1C 00 4A 8D                                   lw      $a6, (dword_3603B4 - 0x360398)($a6)
.text:0035E934 00 00 AA AF                                   sw      $a6, 0x70+var_70($sp)
.text:0035E938 18 00 2B 8D                                   lw      $a7, (dword_3603B0 - 0x360398)($a5)
.text:0035E93C 14 00 0A 8D                                   lw      $a6, (dword_3603AC - 0x360398)($a4)
.text:0035E940 10 00 E9 8C                                   lw      $a5, (dword_3603A8 - 0x360398)($a3)
.text:0035E944 0C 00 C8 8C                                   lw      $a4, (dword_3603A4 - 0x360398)($a2)
.text:0035E948 08 00 A7 8C                                   lw      $a3, (dword_3603A0 - 0x360398)($a1)
.text:0035E94C 04 00 86 8C                                   lw      $a2, (dword_36039C - 0x360398)($a0)
.text:0035E950 98 03 65 8C                                   lw      $a1, (arguments - 0x360000)($v1)
.text:0035E954 25 20 80 01                                   move    $a0, $t4
.text:0035E958 09 F8 40 00                                   jalr    $v0
.text:0035E95C 00 00 00 00                                   nop
.text:0035E960 4C 00 C2 AF                                   sw      $v0, 0x70+var_24($fp)
.text:0035E964 4C 00 C5 8F                                   lw      $a1, 0x70+var_24($fp)
.text:0035E968 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E96C 11 7E 0D 0C                                   jal     operator<<(CRunningScript &,ulong)
.text:0035E970 00 00 00 00                                   nop
.text:0035E974 25 10 00 00                                   move    $v0, $zero
.text:0035E978 25 E8 C0 03                                   move    $sp, $fp
.text:0035E97C 78 00 BF DF                                   ld      $ra, 0x70+var_s8($sp)
.text:0035E980 70 00 BE DF                                   ld      $fp, 0x70+var_s0($sp)
.text:0035E984 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035E988 08 00 E0 03                                   jr      $ra
.text:0035E98C 00 00 00 00                                   nop
.text:0035E98C                                # } // starts at 35E5AC
.text:0035E98C                                # End of function opcode_0AA8(CRunningScript *)
.text:0035E98C
.text:0035E990
.text:0035E990                                # =============== S U B R O U T I N E =======================================
.text:0035E990
.text:0035E990                                # Attributes: bp-based frame fpd=0x28
.text:0035E990
.text:0035E990                                # _DWORD __fastcall opcode_0AC6(CRunningScript *)
.text:0035E990                                               .globl opcode_0AC6(CRunningScript *)
.text:0035E990                               opcode_0AC6(CRunningScript *):
.text:0035E990
.text:0035E990                               var_28          = -0x28
.text:0035E990                               var_18          = -0x18
.text:0035E990                               var_s0          =  0
.text:0035E990                               var_s8          =  8
.text:0035E990                               var_s10         =  0x10
.text:0035E990
.text:0035E990                                # __unwind {
.text:0035E990 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035E994 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035E998 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035E99C 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035E9A0 25 F0 A0 03                                   move    $fp, $sp
.text:0035E9A4 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035E9A8 25 28 C0 03                                   move    $a1, $fp
.text:0035E9AC 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035E9B0 25 7E 0D 0C                                   jal     operator>>(CRunningScript &,int &)
.text:0035E9B4 00 00 00 00                                   nop
.text:0035E9B8 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035E9BC 00 00 C2 8F                                   lw      $v0, 0x28+var_28($fp)
.text:0035E9C0 0A 00 41 04                                   bgez    $v0, loc_35E9EC
.text:0035E9C4 00 00 00 00                                   nop
.text:0035E9C8 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)  # this
.text:0035E9CC 4A 7D 0D 0C                                   jal     CRunningScript::GetBasePointer(void)
.text:0035E9D0 00 00 00 00                                   nop
.text:0035E9D4 25 18 40 00                                   move    $v1, $v0
.text:0035E9D8 00 00 C2 8F                                   lw      $v0, 0x28+var_28($fp)
.text:0035E9DC 23 10 02 00                                   negu    $v0, $v0
.text:0035E9E0 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E9E4 05 00 00 10                                   b       loc_35E9FC
.text:0035E9E8 00 00 00 00                                   nop
.text:0035E9EC                                # ---------------------------------------------------------------------------
.text:0035E9EC
.text:0035E9EC                               loc_35E9EC:
.text:0035E9EC 6B 00 02 3C F0 1F 42 8C                       lw      $v0, CTheScripts_ScriptSpace
.text:0035E9F4 00 00 C3 8F                                   lw      $v1, 0x28+var_28($fp)
.text:0035E9F8 21 10 43 00                                   addu    $v0, $v1
.text:0035E9FC
.text:0035E9FC                               loc_35E9FC:
.text:0035E9FC 25 28 40 00                                   move    $a1, $v0
.text:0035EA00 25 20 00 02                                   move    $a0, $s0
.text:0035EA04 0E 7F 0D 0C                                   jal     operator<<<uchar>(CRunningScript &,uchar *)
.text:0035EA08 00 00 00 00                                   nop
.text:0035EA0C 25 10 00 00                                   move    $v0, $zero
.text:0035EA10 25 E8 C0 03                                   move    $sp, $fp
.text:0035EA14 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035EA18 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035EA1C 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035EA20 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035EA24 08 00 E0 03                                   jr      $ra
.text:0035EA28 00 00 00 00                                   nop
.text:0035EA28                                # } // starts at 35E990
.text:0035EA28                                # End of function opcode_0AC6(CRunningScript *)
.text:0035EA28
.text:0035EA2C
.text:0035EA2C                                # =============== S U B R O U T I N E =======================================
.text:0035EA2C
.text:0035EA2C                                # Attributes: bp-based frame fpd=0x18
.text:0035EA2C
.text:0035EA2C                                # _DWORD __fastcall opcode_0AC7(CRunningScript *)
.text:0035EA2C                                               .globl opcode_0AC7(CRunningScript *)
.text:0035EA2C                               opcode_0AC7(CRunningScript *):
.text:0035EA2C
.text:0035EA2C                               var_18          = -0x18
.text:0035EA2C                               var_s0          =  0
.text:0035EA2C                               var_s8          =  8
.text:0035EA2C                               var_s10         =  0x10
.text:0035EA2C
.text:0035EA2C                                # __unwind {
.text:0035EA2C D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EA30 28 00 BF FF                                   sd      $ra, 0x18+var_s10($sp)
.text:0035EA34 20 00 BE FF                                   sd      $fp, 0x18+var_s8($sp)
.text:0035EA38 18 00 B0 FF                                   sd      $s0, 0x18+var_s0($sp)
.text:0035EA3C 25 F0 A0 03                                   move    $fp, $sp
.text:0035EA40 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035EA44 00 00 D0 8F                                   lw      $s0, 0x18+var_18($fp)
.text:0035EA48 01 00 05 24                                   li      $a1, 1
.text:0035EA4C 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)
.text:0035EA50 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035EA54 00 00 00 00                                   nop
.text:0035EA58 25 28 40 00                                   move    $a1, $v0
.text:0035EA5C 25 20 00 02                                   move    $a0, $s0
.text:0035EA60 22 7F 0D 0C                                   jal     operator<<<SCRIPT_VAR>(CRunningScript &,SCRIPT_VAR *)
.text:0035EA64 00 00 00 00                                   nop
.text:0035EA68 25 10 00 00                                   move    $v0, $zero
.text:0035EA6C 25 E8 C0 03                                   move    $sp, $fp
.text:0035EA70 28 00 BF DF                                   ld      $ra, 0x18+var_s10($sp)
.text:0035EA74 20 00 BE DF                                   ld      $fp, 0x18+var_s8($sp)
.text:0035EA78 18 00 B0 DF                                   ld      $s0, 0x18+var_s0($sp)
.text:0035EA7C 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035EA80 08 00 E0 03                                   jr      $ra
.text:0035EA84 00 00 00 00                                   nop
.text:0035EA84                                # } // starts at 35EA2C
.text:0035EA84                                # End of function opcode_0AC7(CRunningScript *)
.text:0035EA84
.text:0035EA88
.text:0035EA88                                # =============== S U B R O U T I N E =======================================
.text:0035EA88
.text:0035EA88                                # Attributes: bp-based frame fpd=0x20
.text:0035EA88
.text:0035EA88                                # _DWORD __fastcall opcode_0AC8(CRunningScript *)
.text:0035EA88                                               .globl opcode_0AC8(CRunningScript *)
.text:0035EA88                               opcode_0AC8(CRunningScript *):
.text:0035EA88
.text:0035EA88                               var_20          = -0x20
.text:0035EA88                               var_1C          = -0x1C
.text:0035EA88                               var_10          = -0x10
.text:0035EA88                               var_s0          =  0
.text:0035EA88                               var_s8          =  8
.text:0035EA88
.text:0035EA88                                # __unwind {
.text:0035EA88 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EA8C 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035EA90 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035EA94 25 F0 A0 03                                   move    $fp, $sp
.text:0035EA98 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035EA9C 04 00 C2 27                                   addiu   $v0, $fp, 0x20+var_1C
.text:0035EAA0 25 28 40 00                                   move    $a1, $v0
.text:0035EAA4 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035EAA8 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EAAC 00 00 00 00                                   nop
.text:0035EAB0 36 00 02 3C BC FF 42 8C                       lw      $v0, malloc
.text:0035EAB8 04 00 C3 8F                                   lw      $v1, 0x20+var_1C($fp)
.text:0035EABC 25 20 60 00                                   move    $a0, $v1
.text:0035EAC0 09 F8 40 00                                   jalr    $v0 ; sub_337010
.text:0035EAC4 00 00 00 00                                   nop
.text:0035EAC8 00 00 C2 AF                                   sw      $v0, 0x20+var_20($fp)
.text:0035EACC 00 00 C5 8F                                   lw      $a1, 0x20+var_20($fp)
.text:0035EAD0 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035EAD4 36 7F 0D 0C                                   jal     operator<<<void>(CRunningScript &,void *)
.text:0035EAD8 00 00 00 00                                   nop
.text:0035EADC 36 00 02 3C E0 FF 42 8C                       lw      $v0, SetScriptCondResult
.text:0035EAE4 00 00 C3 8F                                   lw      $v1, 0x20+var_20($fp)
.text:0035EAE8 2B 18 03 00                                   sltu    $v1, $zero, $v1
.text:0035EAEC FF 00 63 30                                   andi    $v1, 0xFF
.text:0035EAF0 25 28 60 00                                   move    $a1, $v1
.text:0035EAF4 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035EAF8 09 F8 40 00                                   jalr    $v0 ; sub_3077F0
.text:0035EAFC 00 00 00 00                                   nop
.text:0035EB00 25 10 00 00                                   move    $v0, $zero
.text:0035EB04 25 E8 C0 03                                   move    $sp, $fp
.text:0035EB08 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035EB0C 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035EB10 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035EB14 08 00 E0 03                                   jr      $ra
.text:0035EB18 00 00 00 00                                   nop
.text:0035EB18                                # } // starts at 35EA88
.text:0035EB18                                # End of function opcode_0AC8(CRunningScript *)
.text:0035EB18
.text:0035EB1C
.text:0035EB1C                                # =============== S U B R O U T I N E =======================================
.text:0035EB1C
.text:0035EB1C                                # Attributes: bp-based frame fpd=0x20
.text:0035EB1C
.text:0035EB1C                                # _DWORD __fastcall opcode_0AC9(CRunningScript *)
.text:0035EB1C                                               .globl opcode_0AC9(CRunningScript *)
.text:0035EB1C                               opcode_0AC9(CRunningScript *):
.text:0035EB1C
.text:0035EB1C                               var_20          = -0x20
.text:0035EB1C                               var_10          = -0x10
.text:0035EB1C                               var_s0          =  0
.text:0035EB1C                               var_s8          =  8
.text:0035EB1C
.text:0035EB1C                                # __unwind {
.text:0035EB1C D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EB20 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035EB24 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035EB28 25 F0 A0 03                                   move    $fp, $sp
.text:0035EB2C 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035EB30 25 28 C0 03                                   move    $a1, $fp
.text:0035EB34 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035EB38 78 7E 0D 0C                                   jal     operator>>(CRunningScript &,void *&)
.text:0035EB3C 00 00 00 00                                   nop
.text:0035EB40 36 00 02 3C C0 FF 42 8C                       lw      $v0, free
.text:0035EB48 00 00 C3 8F                                   lw      $v1, 0x20+var_20($fp)
.text:0035EB4C 25 20 60 00                                   move    $a0, $v1
.text:0035EB50 09 F8 40 00                                   jalr    $v0 ; sub_54D838
.text:0035EB54 00 00 00 00                                   nop
.text:0035EB58 25 10 00 00                                   move    $v0, $zero
.text:0035EB5C 25 E8 C0 03                                   move    $sp, $fp
.text:0035EB60 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035EB64 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035EB68 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035EB6C 08 00 E0 03                                   jr      $ra
.text:0035EB70 00 00 00 00                                   nop
.text:0035EB70                                # } // starts at 35EB1C
.text:0035EB70                                # End of function opcode_0AC9(CRunningScript *)
.text:0035EB70
.text:0035EB74
.text:0035EB74                                # =============== S U B R O U T I N E =======================================
.text:0035EB74
.text:0035EB74                                # Attributes: bp-based frame fpd=0x10
.text:0035EB74
.text:0035EB74                                # _DWORD __fastcall opcode_0ACA(CRunningScript *)
.text:0035EB74                                               .globl opcode_0ACA(CRunningScript *)
.text:0035EB74                               opcode_0ACA(CRunningScript *):
.text:0035EB74
.text:0035EB74                               var_10          = -0x10
.text:0035EB74                               var_s0          =  0
.text:0035EB74                               var_s8          =  8
.text:0035EB74
.text:0035EB74                                # __unwind {
.text:0035EB74 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EB78 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EB7C 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035EB80 25 F0 A0 03                                   move    $fp, $sp
.text:0035EB84 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035EB88 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035EB8C 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035EB90 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)  # CRunningScript *
.text:0035EB94 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035EB98 00 00 00 00                                   nop
.text:0035EB9C 25 38 00 00                                   move    $a3, $zero       # int
.text:0035EBA0 25 30 00 00                                   move    $a2, $zero       # int
.text:0035EBA4 25 28 00 00                                   move    $a1, $zero       # int
.text:0035EBA8 25 20 40 00                                   move    $a0, $v0         # char *
.text:0035EBAC 5C A4 0A 0C                                   jal     PrintHelp(char *,int,int,int)
.text:0035EBB0 00 00 00 00                                   nop
.text:0035EBB4 25 10 00 00                                   move    $v0, $zero
.text:0035EBB8 25 E8 C0 03                                   move    $sp, $fp
.text:0035EBBC 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035EBC0 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035EBC4 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EBC8 08 00 E0 03                                   jr      $ra
.text:0035EBCC 00 00 00 00                                   nop
.text:0035EBCC                                # } // starts at 35EB74
.text:0035EBCC                                # End of function opcode_0ACA(CRunningScript *)
.text:0035EBCC
.text:0035EBD0
.text:0035EBD0                                # =============== S U B R O U T I N E =======================================
.text:0035EBD0
.text:0035EBD0                                # Attributes: bp-based frame fpd=0x20
.text:0035EBD0
.text:0035EBD0                                # _DWORD __fastcall opcode_0ACB(CRunningScript *)
.text:0035EBD0                                               .globl opcode_0ACB(CRunningScript *)
.text:0035EBD0                               opcode_0ACB(CRunningScript *):
.text:0035EBD0
.text:0035EBD0                               var_20          = -0x20
.text:0035EBD0                               var_1C          = -0x1C
.text:0035EBD0                               var_18          = -0x18
.text:0035EBD0                               var_10          = -0x10
.text:0035EBD0                               var_s0          =  0
.text:0035EBD0                               var_s8          =  8
.text:0035EBD0
.text:0035EBD0                                # __unwind {
.text:0035EBD0 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EBD4 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035EBD8 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035EBDC 25 F0 A0 03                                   move    $fp, $sp
.text:0035EBE0 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035EBE4 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035EBE8 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035EBEC 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)  # CRunningScript *
.text:0035EBF0 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035EBF4 00 00 00 00                                   nop
.text:0035EBF8 00 00 C2 AF                                   sw      $v0, 0x20+var_20($fp)
.text:0035EBFC 04 00 C2 27                                   addiu   $v0, $fp, 0x20+var_1C
.text:0035EC00 25 28 40 00                                   move    $a1, $v0
.text:0035EC04 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035EC08 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EC0C 00 00 00 00                                   nop
.text:0035EC10 08 00 C3 27                                   addiu   $v1, $fp, 0x20+var_18
.text:0035EC14 25 28 60 00                                   move    $a1, $v1
.text:0035EC18 25 20 40 00                                   move    $a0, $v0
.text:0035EC1C FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EC20 00 00 00 00                                   nop
.text:0035EC24 36 00 02 3C D8 FF 42 8C                       lw      $v0, strcpy
.text:0035EC2C 00 00 C5 8F                                   lw      $a1, 0x20+var_20($fp)
.text:0035EC30 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EC34 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EC38 09 F8 40 00                                   jalr    $v0 ; sub_5516A0
.text:0035EC3C 00 00 00 00                                   nop
.text:0035EC40 36 00 02 3C E4 FF 42 8C                       lw      $v0, PrintBig
.text:0035EC48 04 00 C3 8F                                   lw      $v1, 0x20+var_1C($fp)
.text:0035EC4C 25 20 60 00                                   move    $a0, $v1
.text:0035EC50 08 00 C3 8F                                   lw      $v1, 0x20+var_18($fp)
.text:0035EC54 FF FF 63 30                                   andi    $v1, 0xFFFF
.text:0035EC58 FF FF 63 24                                   addiu   $v1, -1
.text:0035EC5C FF FF 63 30                                   andi    $v1, 0xFFFF
.text:0035EC60 25 30 60 00                                   move    $a2, $v1
.text:0035EC64 25 28 80 00                                   move    $a1, $a0
.text:0035EC68 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EC6C 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EC70 09 F8 40 00                                   jalr    $v0 ; sub_18BCD0
.text:0035EC74 00 00 00 00                                   nop
.text:0035EC78 25 10 00 00                                   move    $v0, $zero
.text:0035EC7C 25 E8 C0 03                                   move    $sp, $fp
.text:0035EC80 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035EC84 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035EC88 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035EC8C 08 00 E0 03                                   jr      $ra
.text:0035EC90 00 00 00 00                                   nop
.text:0035EC90                                # } // starts at 35EBD0
.text:0035EC90                                # End of function opcode_0ACB(CRunningScript *)
.text:0035EC90
.text:0035EC94
.text:0035EC94                                # =============== S U B R O U T I N E =======================================
.text:0035EC94
.text:0035EC94                                # Attributes: bp-based frame fpd=0x20
.text:0035EC94
.text:0035EC94                                # _DWORD __fastcall opcode_0ACC(CRunningScript *)
.text:0035EC94                                               .globl opcode_0ACC(CRunningScript *)
.text:0035EC94                               opcode_0ACC(CRunningScript *):
.text:0035EC94
.text:0035EC94                               var_20          = -0x20
.text:0035EC94                               var_1C          = -0x1C
.text:0035EC94                               var_10          = -0x10
.text:0035EC94                               var_s0          =  0
.text:0035EC94                               var_s8          =  8
.text:0035EC94
.text:0035EC94                                # __unwind {
.text:0035EC94 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EC98 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035EC9C 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035ECA0 25 F0 A0 03                                   move    $fp, $sp
.text:0035ECA4 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035ECA8 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035ECAC 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035ECB0 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)  # CRunningScript *
.text:0035ECB4 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035ECB8 00 00 00 00                                   nop
.text:0035ECBC 00 00 C2 AF                                   sw      $v0, 0x20+var_20($fp)
.text:0035ECC0 04 00 C2 27                                   addiu   $v0, $fp, 0x20+var_1C
.text:0035ECC4 25 28 40 00                                   move    $a1, $v0
.text:0035ECC8 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035ECCC FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035ECD0 00 00 00 00                                   nop
.text:0035ECD4 36 00 02 3C D8 FF 42 8C                       lw      $v0, strcpy
.text:0035ECDC 00 00 C5 8F                                   lw      $a1, 0x20+var_20($fp)
.text:0035ECE0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035ECE4 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035ECE8 09 F8 40 00                                   jalr    $v0 ; sub_5516A0
.text:0035ECEC 00 00 00 00                                   nop
.text:0035ECF0 36 00 02 3C E8 FF 42 8C                       lw      $v0, Print
.text:0035ECF8 04 00 C3 8F                                   lw      $v1, 0x20+var_1C($fp)
.text:0035ECFC 25 38 00 00                                   move    $a3, $zero
.text:0035ED00 25 30 00 00                                   move    $a2, $zero
.text:0035ED04 25 28 60 00                                   move    $a1, $v1
.text:0035ED08 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035ED0C 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035ED10 09 F8 40 00                                   jalr    $v0 ; sub_18B570
.text:0035ED14 00 00 00 00                                   nop
.text:0035ED18 25 10 00 00                                   move    $v0, $zero
.text:0035ED1C 25 E8 C0 03                                   move    $sp, $fp
.text:0035ED20 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035ED24 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035ED28 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035ED2C 08 00 E0 03                                   jr      $ra
.text:0035ED30 00 00 00 00                                   nop
.text:0035ED30                                # } // starts at 35EC94
.text:0035ED30                                # End of function opcode_0ACC(CRunningScript *)
.text:0035ED30
.text:0035ED34
.text:0035ED34                                # =============== S U B R O U T I N E =======================================
.text:0035ED34
.text:0035ED34                                # Attributes: bp-based frame fpd=0x20
.text:0035ED34
.text:0035ED34                                # _DWORD __fastcall opcode_0ACD(CRunningScript *)
.text:0035ED34                                               .globl opcode_0ACD(CRunningScript *)
.text:0035ED34                               opcode_0ACD(CRunningScript *):
.text:0035ED34
.text:0035ED34                               var_20          = -0x20
.text:0035ED34                               var_1C          = -0x1C
.text:0035ED34                               var_10          = -0x10
.text:0035ED34                               var_s0          =  0
.text:0035ED34                               var_s8          =  8
.text:0035ED34
.text:0035ED34                                # __unwind {
.text:0035ED34 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035ED38 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035ED3C 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035ED40 25 F0 A0 03                                   move    $fp, $sp
.text:0035ED44 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035ED48 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035ED4C 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035ED50 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)  # CRunningScript *
.text:0035ED54 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035ED58 00 00 00 00                                   nop
.text:0035ED5C 00 00 C2 AF                                   sw      $v0, 0x20+var_20($fp)
.text:0035ED60 04 00 C2 27                                   addiu   $v0, $fp, 0x20+var_1C
.text:0035ED64 25 28 40 00                                   move    $a1, $v0
.text:0035ED68 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035ED6C FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035ED70 00 00 00 00                                   nop
.text:0035ED74 36 00 02 3C D8 FF 42 8C                       lw      $v0, strcpy
.text:0035ED7C 00 00 C5 8F                                   lw      $a1, 0x20+var_20($fp)
.text:0035ED80 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035ED84 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035ED88 09 F8 40 00                                   jalr    $v0 ; sub_5516A0
.text:0035ED8C 00 00 00 00                                   nop
.text:0035ED90 36 00 02 3C EC FF 42 8C                       lw      $v0, PrintNow
.text:0035ED98 04 00 C3 8F                                   lw      $v1, 0x20+var_1C($fp)
.text:0035ED9C 25 38 00 00                                   move    $a3, $zero
.text:0035EDA0 25 30 00 00                                   move    $a2, $zero
.text:0035EDA4 25 28 60 00                                   move    $a1, $v1
.text:0035EDA8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EDAC 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EDB0 09 F8 40 00                                   jalr    $v0 ; loc_18B8B0
.text:0035EDB4 00 00 00 00                                   nop
.text:0035EDB8 25 10 00 00                                   move    $v0, $zero
.text:0035EDBC 25 E8 C0 03                                   move    $sp, $fp
.text:0035EDC0 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035EDC4 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035EDC8 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035EDCC 08 00 E0 03                                   jr      $ra
.text:0035EDD0 00 00 00 00                                   nop
.text:0035EDD0                                # } // starts at 35ED34
.text:0035EDD0                                # End of function opcode_0ACD(CRunningScript *)
.text:0035EDD0
.text:0035EDD4
.text:0035EDD4                                # =============== S U B R O U T I N E =======================================
.text:0035EDD4
.text:0035EDD4                                # Attributes: bp-based frame fpd=0x110
.text:0035EDD4
.text:0035EDD4                                # _DWORD __fastcall opcode_0ACE(CRunningScript *)
.text:0035EDD4                                               .globl opcode_0ACE(CRunningScript *)
.text:0035EDD4                               opcode_0ACE(CRunningScript *):
.text:0035EDD4
.text:0035EDD4                               var_90          = -0x90
.text:0035EDD4                               var_10          = -0x10
.text:0035EDD4                               var_s0          =  0
.text:0035EDD4                               var_s8          =  8
.text:0035EDD4
.text:0035EDD4                                # __unwind {
.text:0035EDD4 E0 FE BD 27                                   addiu   $sp, -0x120
.text:0035EDD8 18 01 BF FF                                   sd      $ra, 0x110+var_s8($sp)
.text:0035EDDC 10 01 BE FF                                   sd      $fp, 0x110+var_s0($sp)
.text:0035EDE0 25 F0 A0 03                                   move    $fp, $sp
.text:0035EDE4 00 01 C4 AF                                   sw      $a0, 0x110+var_10($fp)
.text:0035EDE8 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035EDEC 25 28 C0 03                                   move    $a1, $fp         # char *
.text:0035EDF0 00 01 C4 8F                                   lw      $a0, 0x110+var_10($fp)  # CRunningScript *
.text:0035EDF4 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035EDF8 00 00 00 00                                   nop
.text:0035EDFC 80 00 C2 27                                   addiu   $v0, $fp, 0x110+var_90
.text:0035EE00 25 38 C0 03                                   move    $a3, $fp         # char *
.text:0035EE04 80 00 06 24                                   li      $a2, 0x80        # unsigned int
.text:0035EE08 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035EE0C 00 01 C4 8F                                   lw      $a0, 0x110+var_10($fp)  # CRunningScript *
.text:0035EE10 6F 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035EE14 00 00 00 00                                   nop
.text:0035EE18 80 00 C2 27                                   addiu   $v0, $fp, 0x110+var_90
.text:0035EE1C 25 38 00 00                                   move    $a3, $zero       # int
.text:0035EE20 25 30 00 00                                   move    $a2, $zero       # int
.text:0035EE24 25 28 00 00                                   move    $a1, $zero       # int
.text:0035EE28 25 20 40 00                                   move    $a0, $v0         # char *
.text:0035EE2C 5C A4 0A 0C                                   jal     PrintHelp(char *,int,int,int)
.text:0035EE30 00 00 00 00                                   nop
.text:0035EE34 00 01 C4 8F                                   lw      $a0, 0x110+var_10($fp)  # CRunningScript *
.text:0035EE38 BB 7D 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035EE3C 00 00 00 00                                   nop
.text:0035EE40 25 10 00 00                                   move    $v0, $zero
.text:0035EE44 25 E8 C0 03                                   move    $sp, $fp
.text:0035EE48 18 01 BF DF                                   ld      $ra, 0x110+var_s8($sp)
.text:0035EE4C 10 01 BE DF                                   ld      $fp, 0x110+var_s0($sp)
.text:0035EE50 20 01 BD 27                                   addiu   $sp, 0x120
.text:0035EE54 08 00 E0 03                                   jr      $ra
.text:0035EE58 00 00 00 00                                   nop
.text:0035EE58                                # } // starts at 35EDD4
.text:0035EE58                                # End of function opcode_0ACE(CRunningScript *)
.text:0035EE58
.text:0035EE5C
.text:0035EE5C                                # =============== S U B R O U T I N E =======================================
.text:0035EE5C
.text:0035EE5C                                # Attributes: bp-based frame fpd=0x120
.text:0035EE5C
.text:0035EE5C                                # _DWORD __fastcall opcode_0ACF(CRunningScript *)
.text:0035EE5C                                               .globl opcode_0ACF(CRunningScript *)
.text:0035EE5C                               opcode_0ACF(CRunningScript *):
.text:0035EE5C
.text:0035EE5C                               var_A0          = -0xA0
.text:0035EE5C                               var_20          = -0x20
.text:0035EE5C                               var_1C          = -0x1C
.text:0035EE5C                               var_10          = -0x10
.text:0035EE5C                               var_s0          =  0
.text:0035EE5C                               var_s8          =  8
.text:0035EE5C
.text:0035EE5C                                # __unwind {
.text:0035EE5C D0 FE BD 27                                   addiu   $sp, -0x130
.text:0035EE60 28 01 BF FF                                   sd      $ra, 0x120+var_s8($sp)
.text:0035EE64 20 01 BE FF                                   sd      $fp, 0x120+var_s0($sp)
.text:0035EE68 25 F0 A0 03                                   move    $fp, $sp
.text:0035EE6C 10 01 C4 AF                                   sw      $a0, 0x120+var_10($fp)
.text:0035EE70 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035EE74 25 28 C0 03                                   move    $a1, $fp         # char *
.text:0035EE78 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)  # CRunningScript *
.text:0035EE7C FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035EE80 00 00 00 00                                   nop
.text:0035EE84 00 01 C2 27                                   addiu   $v0, $fp, 0x120+var_20
.text:0035EE88 25 28 40 00                                   move    $a1, $v0
.text:0035EE8C 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)
.text:0035EE90 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EE94 00 00 00 00                                   nop
.text:0035EE98 04 01 C3 27                                   addiu   $v1, $fp, 0x120+var_1C
.text:0035EE9C 25 28 60 00                                   move    $a1, $v1
.text:0035EEA0 25 20 40 00                                   move    $a0, $v0
.text:0035EEA4 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EEA8 00 00 00 00                                   nop
.text:0035EEAC 80 00 C2 27                                   addiu   $v0, $fp, 0x120+var_A0
.text:0035EEB0 25 38 C0 03                                   move    $a3, $fp         # char *
.text:0035EEB4 80 00 06 24                                   li      $a2, 0x80        # unsigned int
.text:0035EEB8 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035EEBC 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)  # CRunningScript *
.text:0035EEC0 6F 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035EEC4 00 00 00 00                                   nop
.text:0035EEC8 36 00 02 3C D8 FF 42 8C                       lw      $v0, strcpy
.text:0035EED0 80 00 C3 27                                   addiu   $v1, $fp, 0x120+var_A0
.text:0035EED4 25 28 60 00                                   move    $a1, $v1
.text:0035EED8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EEDC 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EEE0 09 F8 40 00                                   jalr    $v0 ; sub_5516A0
.text:0035EEE4 00 00 00 00                                   nop
.text:0035EEE8 36 00 02 3C E4 FF 42 8C                       lw      $v0, PrintBig
.text:0035EEF0 00 01 C3 8F                                   lw      $v1, 0x120+var_20($fp)
.text:0035EEF4 25 20 60 00                                   move    $a0, $v1
.text:0035EEF8 04 01 C3 8F                                   lw      $v1, 0x120+var_1C($fp)
.text:0035EEFC FF FF 63 30                                   andi    $v1, 0xFFFF
.text:0035EF00 FF FF 63 24                                   addiu   $v1, -1
.text:0035EF04 FF FF 63 30                                   andi    $v1, 0xFFFF
.text:0035EF08 25 30 60 00                                   move    $a2, $v1
.text:0035EF0C 25 28 80 00                                   move    $a1, $a0
.text:0035EF10 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EF14 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EF18 09 F8 40 00                                   jalr    $v0 ; sub_18BCD0
.text:0035EF1C 00 00 00 00                                   nop
.text:0035EF20 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)  # CRunningScript *
.text:0035EF24 BB 7D 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035EF28 00 00 00 00                                   nop
.text:0035EF2C 25 10 00 00                                   move    $v0, $zero
.text:0035EF30 25 E8 C0 03                                   move    $sp, $fp
.text:0035EF34 28 01 BF DF                                   ld      $ra, 0x120+var_s8($sp)
.text:0035EF38 20 01 BE DF                                   ld      $fp, 0x120+var_s0($sp)
.text:0035EF3C 30 01 BD 27                                   addiu   $sp, 0x130
.text:0035EF40 08 00 E0 03                                   jr      $ra
.text:0035EF44 00 00 00 00                                   nop
.text:0035EF44                                # } // starts at 35EE5C
.text:0035EF44                                # End of function opcode_0ACF(CRunningScript *)
.text:0035EF44
.text:0035EF48
.text:0035EF48                                # =============== S U B R O U T I N E =======================================
.text:0035EF48
.text:0035EF48                                # Attributes: bp-based frame fpd=0x120
.text:0035EF48
.text:0035EF48                                # _DWORD __fastcall opcode_0AD0(CRunningScript *)
.text:0035EF48                                               .globl opcode_0AD0(CRunningScript *)
.text:0035EF48                               opcode_0AD0(CRunningScript *):
.text:0035EF48
.text:0035EF48                               var_A0          = -0xA0
.text:0035EF48                               var_20          = -0x20
.text:0035EF48                               var_10          = -0x10
.text:0035EF48                               var_s0          =  0
.text:0035EF48                               var_s8          =  8
.text:0035EF48
.text:0035EF48                                # __unwind {
.text:0035EF48 D0 FE BD 27                                   addiu   $sp, -0x130
.text:0035EF4C 28 01 BF FF                                   sd      $ra, 0x120+var_s8($sp)
.text:0035EF50 20 01 BE FF                                   sd      $fp, 0x120+var_s0($sp)
.text:0035EF54 25 F0 A0 03                                   move    $fp, $sp
.text:0035EF58 10 01 C4 AF                                   sw      $a0, 0x120+var_10($fp)
.text:0035EF5C 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035EF60 25 28 C0 03                                   move    $a1, $fp         # char *
.text:0035EF64 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)  # CRunningScript *
.text:0035EF68 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035EF6C 00 00 00 00                                   nop
.text:0035EF70 00 01 C2 27                                   addiu   $v0, $fp, 0x120+var_20
.text:0035EF74 25 28 40 00                                   move    $a1, $v0
.text:0035EF78 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)
.text:0035EF7C FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035EF80 00 00 00 00                                   nop
.text:0035EF84 80 00 C2 27                                   addiu   $v0, $fp, 0x120+var_A0
.text:0035EF88 25 38 C0 03                                   move    $a3, $fp         # char *
.text:0035EF8C 80 00 06 24                                   li      $a2, 0x80        # unsigned int
.text:0035EF90 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035EF94 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)  # CRunningScript *
.text:0035EF98 6F 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035EF9C 00 00 00 00                                   nop
.text:0035EFA0 36 00 02 3C D8 FF 42 8C                       lw      $v0, strcpy
.text:0035EFA8 80 00 C3 27                                   addiu   $v1, $fp, 0x120+var_A0
.text:0035EFAC 25 28 60 00                                   move    $a1, $v1
.text:0035EFB0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EFB4 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EFB8 09 F8 40 00                                   jalr    $v0 ; sub_5516A0
.text:0035EFBC 00 00 00 00                                   nop
.text:0035EFC0 36 00 02 3C E8 FF 42 8C                       lw      $v0, Print
.text:0035EFC8 00 01 C3 8F                                   lw      $v1, 0x120+var_20($fp)
.text:0035EFCC 25 38 00 00                                   move    $a3, $zero
.text:0035EFD0 25 30 00 00                                   move    $a2, $zero
.text:0035EFD4 25 28 60 00                                   move    $a1, $v1
.text:0035EFD8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035EFDC 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035EFE0 09 F8 40 00                                   jalr    $v0 ; sub_18B570
.text:0035EFE4 00 00 00 00                                   nop
.text:0035EFE8 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)  # CRunningScript *
.text:0035EFEC BB 7D 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035EFF0 00 00 00 00                                   nop
.text:0035EFF4 25 10 00 00                                   move    $v0, $zero
.text:0035EFF8 25 E8 C0 03                                   move    $sp, $fp
.text:0035EFFC 28 01 BF DF                                   ld      $ra, 0x120+var_s8($sp)
.text:0035F000 20 01 BE DF                                   ld      $fp, 0x120+var_s0($sp)
.text:0035F004 30 01 BD 27                                   addiu   $sp, 0x130
.text:0035F008 08 00 E0 03                                   jr      $ra
.text:0035F00C 00 00 00 00                                   nop
.text:0035F00C                                # } // starts at 35EF48
.text:0035F00C                                # End of function opcode_0AD0(CRunningScript *)
.text:0035F00C
.text:0035F010
.text:0035F010                                # =============== S U B R O U T I N E =======================================
.text:0035F010
.text:0035F010                                # Attributes: bp-based frame fpd=0x120
.text:0035F010
.text:0035F010                                # _DWORD __fastcall opcode_0AD1(CRunningScript *)
.text:0035F010                                               .globl opcode_0AD1(CRunningScript *)
.text:0035F010                               opcode_0AD1(CRunningScript *):
.text:0035F010
.text:0035F010                               var_A0          = -0xA0
.text:0035F010                               var_20          = -0x20
.text:0035F010                               var_10          = -0x10
.text:0035F010                               var_s0          =  0
.text:0035F010                               var_s8          =  8
.text:0035F010
.text:0035F010                                # __unwind {
.text:0035F010 D0 FE BD 27                                   addiu   $sp, -0x130
.text:0035F014 28 01 BF FF                                   sd      $ra, 0x120+var_s8($sp)
.text:0035F018 20 01 BE FF                                   sd      $fp, 0x120+var_s0($sp)
.text:0035F01C 25 F0 A0 03                                   move    $fp, $sp
.text:0035F020 10 01 C4 AF                                   sw      $a0, 0x120+var_10($fp)
.text:0035F024 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035F028 25 28 C0 03                                   move    $a1, $fp         # char *
.text:0035F02C 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)  # CRunningScript *
.text:0035F030 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035F034 00 00 00 00                                   nop
.text:0035F038 00 01 C2 27                                   addiu   $v0, $fp, 0x120+var_20
.text:0035F03C 25 28 40 00                                   move    $a1, $v0
.text:0035F040 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)
.text:0035F044 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F048 00 00 00 00                                   nop
.text:0035F04C 80 00 C2 27                                   addiu   $v0, $fp, 0x120+var_A0
.text:0035F050 25 38 C0 03                                   move    $a3, $fp         # char *
.text:0035F054 80 00 06 24                                   li      $a2, 0x80        # unsigned int
.text:0035F058 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035F05C 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)  # CRunningScript *
.text:0035F060 6F 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035F064 00 00 00 00                                   nop
.text:0035F068 36 00 02 3C D8 FF 42 8C                       lw      $v0, strcpy
.text:0035F070 80 00 C3 27                                   addiu   $v1, $fp, 0x120+var_A0
.text:0035F074 25 28 60 00                                   move    $a1, $v1
.text:0035F078 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035F07C 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035F080 09 F8 40 00                                   jalr    $v0 ; sub_5516A0
.text:0035F084 00 00 00 00                                   nop
.text:0035F088 36 00 02 3C EC FF 42 8C                       lw      $v0, PrintNow
.text:0035F090 00 01 C3 8F                                   lw      $v1, 0x120+var_20($fp)
.text:0035F094 25 38 00 00                                   move    $a3, $zero
.text:0035F098 25 30 00 00                                   move    $a2, $zero
.text:0035F09C 25 28 60 00                                   move    $a1, $v1
.text:0035F0A0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035F0A4 98 01 64 24                                   addiu   $a0, $v1, (message_buf - 0x360000)
.text:0035F0A8 09 F8 40 00                                   jalr    $v0 ; loc_18B8B0
.text:0035F0AC 00 00 00 00                                   nop
.text:0035F0B0 10 01 C4 8F                                   lw      $a0, 0x120+var_10($fp)  # CRunningScript *
.text:0035F0B4 BB 7D 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035F0B8 00 00 00 00                                   nop
.text:0035F0BC 25 10 00 00                                   move    $v0, $zero
.text:0035F0C0 25 E8 C0 03                                   move    $sp, $fp
.text:0035F0C4 28 01 BF DF                                   ld      $ra, 0x120+var_s8($sp)
.text:0035F0C8 20 01 BE DF                                   ld      $fp, 0x120+var_s0($sp)
.text:0035F0CC 30 01 BD 27                                   addiu   $sp, 0x130
.text:0035F0D0 08 00 E0 03                                   jr      $ra
.text:0035F0D4 00 00 00 00                                   nop
.text:0035F0D4                                # } // starts at 35F010
.text:0035F0D4                                # End of function opcode_0AD1(CRunningScript *)
.text:0035F0D4
.text:0035F0D8
.text:0035F0D8                                # =============== S U B R O U T I N E =======================================
.text:0035F0D8
.text:0035F0D8                                # Attributes: bp-based frame fpd=0xA0
.text:0035F0D8
.text:0035F0D8                                # _DWORD __fastcall opcode_0AD3(CRunningScript *)
.text:0035F0D8                                               .globl opcode_0AD3(CRunningScript *)
.text:0035F0D8                               opcode_0AD3(CRunningScript *):
.text:0035F0D8
.text:0035F0D8                               var_20          = -0x20
.text:0035F0D8                               var_10          = -0x10
.text:0035F0D8                               var_s0          =  0
.text:0035F0D8                               var_s8          =  8
.text:0035F0D8
.text:0035F0D8                                # __unwind {
.text:0035F0D8 50 FF BD 27                                   addiu   $sp, -0xB0
.text:0035F0DC A8 00 BF FF                                   sd      $ra, 0xA0+var_s8($sp)
.text:0035F0E0 A0 00 BE FF                                   sd      $fp, 0xA0+var_s0($sp)
.text:0035F0E4 25 F0 A0 03                                   move    $fp, $sp
.text:0035F0E8 90 00 C4 AF                                   sw      $a0, 0xA0+var_10($fp)
.text:0035F0EC 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)  # this
.text:0035F0F0 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035F0F4 00 00 00 00                                   nop
.text:0035F0F8 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F0FC 0B 00 40 10                                   beqz    $v0, loc_35F12C
.text:0035F100 00 00 00 00                                   nop
.text:0035F104 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)  # this
.text:0035F108 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035F10C 00 00 00 00                                   nop
.text:0035F110 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F114 09 00 42 2C                                   sltiu   $v0, 9
.text:0035F118 04 00 40 10                                   beqz    $v0, loc_35F12C
.text:0035F11C 00 00 00 00                                   nop
.text:0035F120 01 00 02 24                                   li      $v0, 1
.text:0035F124 02 00 00 10                                   b       loc_35F130
.text:0035F128 00 00 00 00                                   nop
.text:0035F12C                                # ---------------------------------------------------------------------------
.text:0035F12C
.text:0035F12C                               loc_35F12C:
.text:0035F12C 25 10 00 00                                   move    $v0, $zero
.text:0035F130
.text:0035F130                               loc_35F130:
.text:0035F130 08 00 40 10                                   beqz    $v0, loc_35F154
.text:0035F134 00 00 00 00                                   nop
.text:0035F138 80 00 C2 27                                   addiu   $v0, $fp, 0xA0+var_20
.text:0035F13C 25 28 40 00                                   move    $a1, $v0
.text:0035F140 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)
.text:0035F144 63 7E 0D 0C                                   jal     operator>>(CRunningScript &,char *&)
.text:0035F148 00 00 00 00                                   nop
.text:0035F14C 06 00 00 10                                   b       loc_35F168
.text:0035F150 00 00 00 00                                   nop
.text:0035F154                                # ---------------------------------------------------------------------------
.text:0035F154
.text:0035F154                               loc_35F154:
.text:0035F154 01 00 05 24                                   li      $a1, 1
.text:0035F158 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)
.text:0035F15C C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035F160 00 00 00 00                                   nop
.text:0035F164 80 00 C2 AF                                   sw      $v0, 0xA0+var_20($fp)
.text:0035F168
.text:0035F168                               loc_35F168:                              # unsigned __int8
.text:0035F168 80 00 06 24                                   li      $a2, 0x80
.text:0035F16C 25 28 C0 03                                   move    $a1, $fp         # char *
.text:0035F170 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)  # CRunningScript *
.text:0035F174 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035F178 00 00 00 00                                   nop
.text:0035F17C 80 00 C2 8F                                   lw      $v0, 0xA0+var_20($fp)
.text:0035F180 25 38 C0 03                                   move    $a3, $fp         # char *
.text:0035F184 FF FF 06 24                                   li      $a2, 0xFFFFFFFF  # unsigned int
.text:0035F188 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035F18C 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)  # CRunningScript *
.text:0035F190 6F 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035F194 00 00 00 00                                   nop
.text:0035F198 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)  # CRunningScript *
.text:0035F19C BB 7D 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035F1A0 00 00 00 00                                   nop
.text:0035F1A4 25 10 00 00                                   move    $v0, $zero
.text:0035F1A8 25 E8 C0 03                                   move    $sp, $fp
.text:0035F1AC A8 00 BF DF                                   ld      $ra, 0xA0+var_s8($sp)
.text:0035F1B0 A0 00 BE DF                                   ld      $fp, 0xA0+var_s0($sp)
.text:0035F1B4 B0 00 BD 27                                   addiu   $sp, 0xB0
.text:0035F1B8 08 00 E0 03                                   jr      $ra
.text:0035F1BC 00 00 00 00                                   nop
.text:0035F1BC                                # } // starts at 35F0D8
.text:0035F1BC                                # End of function opcode_0AD3(CRunningScript *)
.text:0035F1BC
.text:0035F1C0
.text:0035F1C0                                # =============== S U B R O U T I N E =======================================
.text:0035F1C0
.text:0035F1C0                                # Attributes: bp-based frame fpd=0x28
.text:0035F1C0
.text:0035F1C0                                # _DWORD __fastcall opcode_0AD5(CRunningScript *)
.text:0035F1C0                                               .globl opcode_0AD5(CRunningScript *)
.text:0035F1C0                               opcode_0AD5(CRunningScript *):
.text:0035F1C0
.text:0035F1C0                               var_28          = -0x28
.text:0035F1C0                               var_24          = -0x24
.text:0035F1C0                               var_20          = -0x20
.text:0035F1C0                               var_18          = -0x18
.text:0035F1C0                               var_s0          =  0
.text:0035F1C0                               var_s8          =  8
.text:0035F1C0                               var_s10         =  0x10
.text:0035F1C0
.text:0035F1C0                                # __unwind {
.text:0035F1C0 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035F1C4 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035F1C8 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035F1CC 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035F1D0 25 F0 A0 03                                   move    $fp, $sp
.text:0035F1D4 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035F1D8 25 28 C0 03                                   move    $a1, $fp
.text:0035F1DC 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035F1E0 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F1E4 00 00 00 00                                   nop
.text:0035F1E8 04 00 C3 27                                   addiu   $v1, $fp, 0x28+var_24
.text:0035F1EC 25 28 60 00                                   move    $a1, $v1
.text:0035F1F0 25 20 40 00                                   move    $a0, $v0
.text:0035F1F4 25 7E 0D 0C                                   jal     operator>>(CRunningScript &,int &)
.text:0035F1F8 00 00 00 00                                   nop
.text:0035F1FC 08 00 C3 27                                   addiu   $v1, $fp, 0x28+var_20
.text:0035F200 25 28 60 00                                   move    $a1, $v1
.text:0035F204 25 20 40 00                                   move    $a0, $v0
.text:0035F208 25 7E 0D 0C                                   jal     operator>>(CRunningScript &,int &)
.text:0035F20C 00 00 00 00                                   nop
.text:0035F210 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035F214 E0 FF 50 8C                                   lw      $s0, SetScriptCondResult
.text:0035F218 36 00 02 3C B0 FF 42 8C                       lw      $v0, rw_seek
.text:0035F220 00 00 C3 8F                                   lw      $v1, 0x28+var_28($fp)
.text:0035F224 25 38 60 00                                   move    $a3, $v1
.text:0035F228 04 00 C3 8F                                   lw      $v1, 0x28+var_24($fp)
.text:0035F22C 08 00 C4 8F                                   lw      $a0, 0x28+var_20($fp)
.text:0035F230 25 30 80 00                                   move    $a2, $a0
.text:0035F234 25 28 60 00                                   move    $a1, $v1
.text:0035F238 25 20 E0 00                                   move    $a0, $a3
.text:0035F23C 09 F8 40 00                                   jalr    $v0 ; loc_2332B0
.text:0035F240 00 00 00 00                                   nop
.text:0035F244 01 00 42 2C                                   sltiu   $v0, 1
.text:0035F248 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035F24C 25 28 40 00                                   move    $a1, $v0
.text:0035F250 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035F254 09 F8 00 02                                   jalr    $s0 ; sub_3077F0
.text:0035F258 00 00 00 00                                   nop
.text:0035F25C 25 10 00 00                                   move    $v0, $zero
.text:0035F260 25 E8 C0 03                                   move    $sp, $fp
.text:0035F264 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035F268 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035F26C 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035F270 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035F274 08 00 E0 03                                   jr      $ra
.text:0035F278 00 00 00 00                                   nop
.text:0035F278                                # } // starts at 35F1C0
.text:0035F278                                # End of function opcode_0AD5(CRunningScript *)
.text:0035F278
.text:0035F27C
.text:0035F27C                                # =============== S U B R O U T I N E =======================================
.text:0035F27C
.text:0035F27C                                # Attributes: bp-based frame fpd=0x20
.text:0035F27C
.text:0035F27C                                # _DWORD __fastcall opcode_0ADE(CRunningScript *)
.text:0035F27C                                               .globl opcode_0ADE(CRunningScript *)
.text:0035F27C                               opcode_0ADE(CRunningScript *):
.text:0035F27C
.text:0035F27C                               var_20          = -0x20
.text:0035F27C                               var_10          = -0x10
.text:0035F27C                               var_s0          =  0
.text:0035F27C                               var_s8          =  8
.text:0035F27C                               var_s10         =  0x10
.text:0035F27C                               var_s18         =  0x18
.text:0035F27C
.text:0035F27C                                # __unwind {
.text:0035F27C C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035F280 38 00 BF FF                                   sd      $ra, 0x20+var_s18($sp)
.text:0035F284 30 00 BE FF                                   sd      $fp, 0x20+var_s10($sp)
.text:0035F288 28 00 B1 FF                                   sd      $s1, 0x20+var_s8($sp)
.text:0035F28C 20 00 B0 FF                                   sd      $s0, 0x20+var_s0($sp)
.text:0035F290 25 F0 A0 03                                   move    $fp, $sp
.text:0035F294 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035F298 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035F29C 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035F2A0 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)  # CRunningScript *
.text:0035F2A4 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035F2A8 00 00 00 00                                   nop
.text:0035F2AC 00 00 C2 AF                                   sw      $v0, 0x20+var_20($fp)
.text:0035F2B0 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)  # this
.text:0035F2B4 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035F2B8 00 00 00 00                                   nop
.text:0035F2BC 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F2C0 0B 00 40 10                                   beqz    $v0, loc_35F2F0
.text:0035F2C4 00 00 00 00                                   nop
.text:0035F2C8 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)  # this
.text:0035F2CC 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035F2D0 00 00 00 00                                   nop
.text:0035F2D4 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F2D8 09 00 42 2C                                   sltiu   $v0, 9
.text:0035F2DC 04 00 40 10                                   beqz    $v0, loc_35F2F0
.text:0035F2E0 00 00 00 00                                   nop
.text:0035F2E4 01 00 02 24                                   li      $v0, 1
.text:0035F2E8 02 00 00 10                                   b       loc_35F2F4
.text:0035F2EC 00 00 00 00                                   nop
.text:0035F2F0                                # ---------------------------------------------------------------------------
.text:0035F2F0
.text:0035F2F0                               loc_35F2F0:
.text:0035F2F0 25 10 00 00                                   move    $v0, $zero
.text:0035F2F4
.text:0035F2F4                               loc_35F2F4:
.text:0035F2F4 10 00 40 10                                   beqz    $v0, loc_35F338
.text:0035F2F8 00 00 00 00                                   nop
.text:0035F2FC 10 00 D0 8F                                   lw      $s0, 0x20+var_10($fp)
.text:0035F300 36 00 02 3C FC FF 42 8C                       lw      $v0, CText_Get
.text:0035F308 36 00 03 3C 00 00 63 8C                       lw      $v1, gameTexts
.text:0035F310 00 00 C5 8F                                   lw      $a1, 0x20+var_20($fp)
.text:0035F314 25 20 60 00                                   move    $a0, $v1
.text:0035F318 09 F8 40 00                                   jalr    $v0 ; loc_18ED90
.text:0035F31C 00 00 00 00                                   nop
.text:0035F320 25 28 40 00                                   move    $a1, $v0
.text:0035F324 25 20 00 02                                   move    $a0, $s0
.text:0035F328 4A 7F 0D 0C                                   jal     operator<<<char const>(CRunningScript &,char const *)
.text:0035F32C 00 00 00 00                                   nop
.text:0035F330 14 00 00 10                                   b       loc_35F384
.text:0035F334 00 00 00 00                                   nop
.text:0035F338                                # ---------------------------------------------------------------------------
.text:0035F338
.text:0035F338                               loc_35F338:
.text:0035F338 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035F33C D8 FF 50 8C                                   lw      $s0, strcpy
.text:0035F340 01 00 05 24                                   li      $a1, 1
.text:0035F344 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035F348 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035F34C 00 00 00 00                                   nop
.text:0035F350 25 88 40 00                                   move    $s1, $v0
.text:0035F354 36 00 02 3C FC FF 42 8C                       lw      $v0, CText_Get
.text:0035F35C 36 00 03 3C 00 00 63 8C                       lw      $v1, gameTexts
.text:0035F364 00 00 C5 8F                                   lw      $a1, 0x20+var_20($fp)
.text:0035F368 25 20 60 00                                   move    $a0, $v1
.text:0035F36C 09 F8 40 00                                   jalr    $v0 ; loc_18ED90
.text:0035F370 00 00 00 00                                   nop
.text:0035F374 25 28 40 00                                   move    $a1, $v0
.text:0035F378 25 20 20 02                                   move    $a0, $s1
.text:0035F37C 09 F8 00 02                                   jalr    $s0 ; sub_5516A0
.text:0035F380 00 00 00 00                                   nop
.text:0035F384
.text:0035F384                               loc_35F384:
.text:0035F384 25 10 00 00                                   move    $v0, $zero
.text:0035F388 25 E8 C0 03                                   move    $sp, $fp
.text:0035F38C 38 00 BF DF                                   ld      $ra, 0x20+var_s18($sp)
.text:0035F390 30 00 BE DF                                   ld      $fp, 0x20+var_s10($sp)
.text:0035F394 28 00 B1 DF                                   ld      $s1, 0x20+var_s8($sp)
.text:0035F398 20 00 B0 DF                                   ld      $s0, 0x20+var_s0($sp)
.text:0035F39C 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035F3A0 08 00 E0 03                                   jr      $ra
.text:0035F3A4 00 00 00 00                                   nop
.text:0035F3A4                                # } // starts at 35F27C
.text:0035F3A4                                # End of function opcode_0ADE(CRunningScript *)
.text:0035F3A4
.text:0035F3A8
.text:0035F3A8                                # =============== S U B R O U T I N E =======================================
.text:0035F3A8
.text:0035F3A8                                # Attributes: bp-based frame fpd=0x28
.text:0035F3A8
.text:0035F3A8                                # _DWORD __fastcall opcode_0AEA(CRunningScript *)
.text:0035F3A8                                               .globl opcode_0AEA(CRunningScript *)
.text:0035F3A8                               opcode_0AEA(CRunningScript *):
.text:0035F3A8
.text:0035F3A8                               var_28          = -0x28
.text:0035F3A8                               var_18          = -0x18
.text:0035F3A8                               var_s0          =  0
.text:0035F3A8                               var_s8          =  8
.text:0035F3A8                               var_s10         =  0x10
.text:0035F3A8
.text:0035F3A8                                # __unwind {
.text:0035F3A8 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035F3AC 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035F3B0 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035F3B4 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035F3B8 25 F0 A0 03                                   move    $fp, $sp
.text:0035F3BC 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035F3C0 25 28 C0 03                                   move    $a1, $fp
.text:0035F3C4 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035F3C8 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F3CC 00 00 00 00                                   nop
.text:0035F3D0 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035F3D4 36 00 02 3C F0 FF 42 8C                       lw      $v0, GetPedHandle
.text:0035F3DC 67 00 03 3C 18 B9 63 8C                       lw      $v1, pedPool
.text:0035F3E4 00 00 C4 8F                                   lw      $a0, 0x28+var_28($fp)
.text:0035F3E8 25 28 80 00                                   move    $a1, $a0
.text:0035F3EC 25 20 60 00                                   move    $a0, $v1
.text:0035F3F0 09 F8 40 00                                   jalr    $v0 ; loc_19FA20
.text:0035F3F4 00 00 00 00                                   nop
.text:0035F3F8 25 28 40 00                                   move    $a1, $v0
.text:0035F3FC 25 20 00 02                                   move    $a0, $s0
.text:0035F400 3A 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035F404 00 00 00 00                                   nop
.text:0035F408 25 10 00 00                                   move    $v0, $zero
.text:0035F40C 25 E8 C0 03                                   move    $sp, $fp
.text:0035F410 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035F414 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035F418 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035F41C 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035F420 08 00 E0 03                                   jr      $ra
.text:0035F424 00 00 00 00                                   nop
.text:0035F424                                # } // starts at 35F3A8
.text:0035F424                                # End of function opcode_0AEA(CRunningScript *)
.text:0035F424
.text:0035F428
.text:0035F428                                # =============== S U B R O U T I N E =======================================
.text:0035F428
.text:0035F428                                # Attributes: bp-based frame fpd=0x28
.text:0035F428
.text:0035F428                                # _DWORD __fastcall opcode_0AEB(CRunningScript *)
.text:0035F428                                               .globl opcode_0AEB(CRunningScript *)
.text:0035F428                               opcode_0AEB(CRunningScript *):
.text:0035F428
.text:0035F428                               var_28          = -0x28
.text:0035F428                               var_18          = -0x18
.text:0035F428                               var_s0          =  0
.text:0035F428                               var_s8          =  8
.text:0035F428                               var_s10         =  0x10
.text:0035F428
.text:0035F428                                # __unwind {
.text:0035F428 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035F42C 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035F430 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035F434 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035F438 25 F0 A0 03                                   move    $fp, $sp
.text:0035F43C 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035F440 25 28 C0 03                                   move    $a1, $fp
.text:0035F444 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035F448 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F44C 00 00 00 00                                   nop
.text:0035F450 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035F454 36 00 02 3C F4 FF 42 8C                       lw      $v0, GetVehHandle
.text:0035F45C 67 00 03 3C 1C B9 63 8C                       lw      $v1, vehPool
.text:0035F464 00 00 C4 8F                                   lw      $a0, 0x28+var_28($fp)
.text:0035F468 25 28 80 00                                   move    $a1, $a0
.text:0035F46C 25 20 60 00                                   move    $a0, $v1
.text:0035F470 09 F8 40 00                                   jalr    $v0 ; sub_17EF20
.text:0035F474 00 00 00 00                                   nop
.text:0035F478 25 28 40 00                                   move    $a1, $v0
.text:0035F47C 25 20 00 02                                   move    $a0, $s0
.text:0035F480 3A 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035F484 00 00 00 00                                   nop
.text:0035F488 25 10 00 00                                   move    $v0, $zero
.text:0035F48C 25 E8 C0 03                                   move    $sp, $fp
.text:0035F490 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035F494 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035F498 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035F49C 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035F4A0 08 00 E0 03                                   jr      $ra
.text:0035F4A4 00 00 00 00                                   nop
.text:0035F4A4                                # } // starts at 35F428
.text:0035F4A4                                # End of function opcode_0AEB(CRunningScript *)
.text:0035F4A4
.text:0035F4A8
.text:0035F4A8                                # =============== S U B R O U T I N E =======================================
.text:0035F4A8
.text:0035F4A8                                # Attributes: bp-based frame fpd=0x28
.text:0035F4A8
.text:0035F4A8                                # _DWORD __fastcall opcode_0AEC(CRunningScript *)
.text:0035F4A8                                               .globl opcode_0AEC(CRunningScript *)
.text:0035F4A8                               opcode_0AEC(CRunningScript *):
.text:0035F4A8
.text:0035F4A8                               var_28          = -0x28
.text:0035F4A8                               var_18          = -0x18
.text:0035F4A8                               var_s0          =  0
.text:0035F4A8                               var_s8          =  8
.text:0035F4A8                               var_s10         =  0x10
.text:0035F4A8
.text:0035F4A8                                # __unwind {
.text:0035F4A8 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035F4AC 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035F4B0 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035F4B4 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035F4B8 25 F0 A0 03                                   move    $fp, $sp
.text:0035F4BC 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035F4C0 25 28 C0 03                                   move    $a1, $fp
.text:0035F4C4 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035F4C8 FC 7D 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035F4CC 00 00 00 00                                   nop
.text:0035F4D0 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035F4D4 36 00 02 3C F8 FF 42 8C                       lw      $v0, GetObjHandle
.text:0035F4DC 67 00 03 3C 24 B9 63 8C                       lw      $v1, objPool
.text:0035F4E4 00 00 C4 8F                                   lw      $a0, 0x28+var_28($fp)
.text:0035F4E8 25 28 80 00                                   move    $a1, $a0
.text:0035F4EC 25 20 60 00                                   move    $a0, $v1
.text:0035F4F0 09 F8 40 00                                   jalr    $v0 ; sub_132CC0
.text:0035F4F4 00 00 00 00                                   nop
.text:0035F4F8 25 28 40 00                                   move    $a1, $v0
.text:0035F4FC 25 20 00 02                                   move    $a0, $s0
.text:0035F500 3A 7E 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035F504 00 00 00 00                                   nop
.text:0035F508 25 10 00 00                                   move    $v0, $zero
.text:0035F50C 25 E8 C0 03                                   move    $sp, $fp
.text:0035F510 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035F514 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035F518 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035F51C 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035F520 08 00 E0 03                                   jr      $ra
.text:0035F524 00 00 00 00                                   nop
.text:0035F524                                # } // starts at 35F4A8
.text:0035F524                                # End of function opcode_0AEC(CRunningScript *)
.text:0035F524
.text:0035F528
.text:0035F528                                # =============== S U B R O U T I N E =======================================
.text:0035F528
.text:0035F528                                # Attributes: bp-based frame fpd=0x18
.text:0035F528
.text:0035F528                                # _DWORD CRunningScript::GetBasePointer(CRunningScript *__hidden this)
.text:0035F528                                               .globl CRunningScript::GetBasePointer(void)  # weak
.text:0035F528                               CRunningScript::GetBasePointer(void):
.text:0035F528
.text:0035F528                               var_18          = -0x18
.text:0035F528                               var_s0          =  0
.text:0035F528
.text:0035F528                                # __unwind {
.text:0035F528 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F52C 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035F530 25 F0 A0 03                                   move    $fp, $sp
.text:0035F534 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035F538 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035F53C 10 00 42 8C                                   lw      $v0, 0x10($v0)
.text:0035F540 25 E8 C0 03                                   move    $sp, $fp
.text:0035F544 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035F548 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F54C 08 00 E0 03                                   jr      $ra
.text:0035F550 00 00 00 00                                   nop
.text:0035F550                                # } // starts at 35F528
.text:0035F550                                # End of function CRunningScript::GetBasePointer(void)
.text:0035F550
.text:0035F554
.text:0035F554                                # =============== S U B R O U T I N E =======================================
.text:0035F554
.text:0035F554                                # Attributes: bp-based frame fpd=0x18
.text:0035F554
.text:0035F554                                # _DWORD CRunningScript::GetBytePointer(CRunningScript *__hidden this)
.text:0035F554                                               .globl CRunningScript::GetBytePointer(void)  # weak
.text:0035F554                               CRunningScript::GetBytePointer(void):
.text:0035F554
.text:0035F554                               var_18          = -0x18
.text:0035F554                               var_s0          =  0
.text:0035F554
.text:0035F554                                # __unwind {
.text:0035F554 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F558 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035F55C 25 F0 A0 03                                   move    $fp, $sp
.text:0035F560 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035F564 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035F568 14 00 42 8C                                   lw      $v0, 0x14($v0)
.text:0035F56C 25 E8 C0 03                                   move    $sp, $fp
.text:0035F570 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035F574 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F578 08 00 E0 03                                   jr      $ra
.text:0035F57C 00 00 00 00                                   nop
.text:0035F57C                                # } // starts at 35F554
.text:0035F57C                                # End of function CRunningScript::GetBytePointer(void)
.text:0035F57C
.text:0035F580
.text:0035F580                                # =============== S U B R O U T I N E =======================================
.text:0035F580
.text:0035F580                                # Attributes: bp-based frame fpd=0x18
.text:0035F580
.text:0035F580                                # _DWORD __fastcall CRunningScript::SetIp(CRunningScript *__hidden this, void *)
.text:0035F580                                               .globl CRunningScript::SetIp(void *)  # weak
.text:0035F580                               CRunningScript::SetIp(void *):
.text:0035F580
.text:0035F580                               var_18          = -0x18
.text:0035F580                               var_14          = -0x14
.text:0035F580                               var_s0          =  0
.text:0035F580
.text:0035F580                                # __unwind {
.text:0035F580 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F584 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035F588 25 F0 A0 03                                   move    $fp, $sp
.text:0035F58C 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035F590 04 00 C5 AF                                   sw      $a1, 0x18+var_14($fp)
.text:0035F594 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035F598 04 00 C3 8F                                   lw      $v1, 0x18+var_14($fp)
.text:0035F59C 14 00 43 AC                                   sw      $v1, 0x14($v0)
.text:0035F5A0 00 00 00 00                                   nop
.text:0035F5A4 25 E8 C0 03                                   move    $sp, $fp
.text:0035F5A8 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035F5AC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F5B0 08 00 E0 03                                   jr      $ra
.text:0035F5B4 00 00 00 00                                   nop
.text:0035F5B4                                # } // starts at 35F580
.text:0035F5B4                                # End of function CRunningScript::SetIp(void *)
.text:0035F5B4
.text:0035F5B8
.text:0035F5B8                                # =============== S U B R O U T I N E =======================================
.text:0035F5B8
.text:0035F5B8                                # Attributes: bp-based frame fpd=0x18
.text:0035F5B8
.text:0035F5B8                                # _DWORD CRunningScript::GetConditionResult(CRunningScript *__hidden this)
.text:0035F5B8                                               .globl CRunningScript::GetConditionResult(void)  # weak
.text:0035F5B8                               CRunningScript::GetConditionResult(void):
.text:0035F5B8
.text:0035F5B8                               var_18          = -0x18
.text:0035F5B8                               var_s0          =  0
.text:0035F5B8
.text:0035F5B8                                # __unwind {
.text:0035F5B8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F5BC 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035F5C0 25 F0 A0 03                                   move    $fp, $sp
.text:0035F5C4 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035F5C8 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035F5CC C5 00 42 90                                   lbu     $v0, 0xC5($v0)
.text:0035F5D0 2B 10 02 00                                   sltu    $v0, $zero, $v0
.text:0035F5D4 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035F5D8 25 E8 C0 03                                   move    $sp, $fp
.text:0035F5DC 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035F5E0 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F5E4 08 00 E0 03                                   jr      $ra
.text:0035F5E8 00 00 00 00                                   nop
.text:0035F5E8                                # } // starts at 35F5B8
.text:0035F5E8                                # End of function CRunningScript::GetConditionResult(void)
.text:0035F5E8
.text:0035F5EC
.text:0035F5EC                                # =============== S U B R O U T I N E =======================================
.text:0035F5EC
.text:0035F5EC                                # Attributes: bp-based frame fpd=0x28
.text:0035F5EC
.text:0035F5EC                                # _DWORD CRunningScript::ReadDataByte(CRunningScript *__hidden this)
.text:0035F5EC                                               .globl CRunningScript::ReadDataByte(void)  # weak
.text:0035F5EC                               CRunningScript::ReadDataByte(void):
.text:0035F5EC
.text:0035F5EC                               var_28          = -0x28
.text:0035F5EC                               var_18          = -0x18
.text:0035F5EC                               var_s0          =  0
.text:0035F5EC
.text:0035F5EC                                # __unwind {
.text:0035F5EC D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035F5F0 28 00 BE FF                                   sd      $fp, 0x28+var_s0($sp)
.text:0035F5F4 25 F0 A0 03                                   move    $fp, $sp
.text:0035F5F8 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035F5FC 10 00 C2 8F                                   lw      $v0, 0x28+var_18($fp)
.text:0035F600 14 00 42 8C                                   lw      $v0, 0x14($v0)
.text:0035F604 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F608 00 00 C2 A3                                   sb      $v0, 0x28+var_28($fp)
.text:0035F60C 10 00 C2 8F                                   lw      $v0, 0x28+var_18($fp)
.text:0035F610 14 00 42 8C                                   lw      $v0, 0x14($v0)
.text:0035F614 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035F618 10 00 C2 8F                                   lw      $v0, 0x28+var_18($fp)
.text:0035F61C 14 00 43 AC                                   sw      $v1, 0x14($v0)
.text:0035F620 00 00 C2 83                                   lb      $v0, 0x28+var_28($fp)
.text:0035F624 25 E8 C0 03                                   move    $sp, $fp
.text:0035F628 28 00 BE DF                                   ld      $fp, 0x28+var_s0($sp)
.text:0035F62C 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035F630 08 00 E0 03                                   jr      $ra
.text:0035F634 00 00 00 00                                   nop
.text:0035F634                                # } // starts at 35F5EC
.text:0035F634                                # End of function CRunningScript::ReadDataByte(void)
.text:0035F634
.text:0035F638
.text:0035F638                                # =============== S U B R O U T I N E =======================================
.text:0035F638
.text:0035F638                                # Attributes: bp-based frame fpd=0x18
.text:0035F638
.text:0035F638                                # _DWORD __fastcall CRunningScript::PushStack(CRunningScript *__hidden this, unsigned __int8 *)
.text:0035F638                                               .globl CRunningScript::PushStack(unsigned char *)  # weak
.text:0035F638                               CRunningScript::PushStack(unsigned char *):
.text:0035F638
.text:0035F638                               var_18          = -0x18
.text:0035F638                               var_14          = -0x14
.text:0035F638                               var_s0          =  0
.text:0035F638
.text:0035F638                                # __unwind {
.text:0035F638 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F63C 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035F640 25 F0 A0 03                                   move    $fp, $sp
.text:0035F644 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035F648 04 00 C5 AF                                   sw      $a1, 0x18+var_14($fp)
.text:0035F64C 04 00 C3 8F                                   lw      $v1, 0x18+var_14($fp)
.text:0035F650 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035F654 38 00 42 94                                   lhu     $v0, 0x38($v0)
.text:0035F658 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035F65C FF FF 85 30                                   andi    $a1, $a0, 0xFFFF
.text:0035F660 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)
.text:0035F664 38 00 85 A4                                   sh      $a1, 0x38($a0)
.text:0035F668 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)
.text:0035F66C 06 00 42 24                                   addiu   $v0, 6
.text:0035F670 80 10 02 00                                   sll     $v0, 2
.text:0035F674 21 10 82 00                                   addu    $v0, $a0, $v0
.text:0035F678 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035F67C 00 00 00 00                                   nop
.text:0035F680 25 E8 C0 03                                   move    $sp, $fp
.text:0035F684 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035F688 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F68C 08 00 E0 03                                   jr      $ra
.text:0035F690 00 00 00 00                                   nop
.text:0035F690                                # } // starts at 35F638
.text:0035F690                                # End of function CRunningScript::PushStack(uchar *)
.text:0035F690
.text:0035F694
.text:0035F694                                # =============== S U B R O U T I N E =======================================
.text:0035F694
.text:0035F694                                # Attributes: bp-based frame fpd=0x18
.text:0035F694
.text:0035F694                                # _DWORD CRunningScript::PopStack(CRunningScript *__hidden this)
.text:0035F694                                               .globl CRunningScript::PopStack(void)  # weak
.text:0035F694                               CRunningScript::PopStack(void):
.text:0035F694
.text:0035F694                               var_18          = -0x18
.text:0035F694                               var_s0          =  0
.text:0035F694
.text:0035F694                                # __unwind {
.text:0035F694 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F698 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035F69C 25 F0 A0 03                                   move    $fp, $sp
.text:0035F6A0 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035F6A4 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035F6A8 38 00 42 94                                   lhu     $v0, 0x38($v0)
.text:0035F6AC FF FF 42 24                                   addiu   $v0, -1
.text:0035F6B0 FF FF 43 30                                   andi    $v1, $v0, 0xFFFF
.text:0035F6B4 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035F6B8 38 00 43 A4                                   sh      $v1, 0x38($v0)
.text:0035F6BC 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035F6C0 38 00 42 94                                   lhu     $v0, 0x38($v0)
.text:0035F6C4 00 00 C3 8F                                   lw      $v1, 0x18+var_18($fp)
.text:0035F6C8 06 00 42 24                                   addiu   $v0, 6
.text:0035F6CC 80 10 02 00                                   sll     $v0, 2
.text:0035F6D0 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035F6D4 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035F6D8 25 E8 C0 03                                   move    $sp, $fp
.text:0035F6DC 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035F6E0 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F6E4 08 00 E0 03                                   jr      $ra
.text:0035F6E8 00 00 00 00                                   nop
.text:0035F6E8                                # } // starts at 35F694
.text:0035F6E8                                # End of function CRunningScript::PopStack(void)
.text:0035F6E8
.text:0035F6EC
.text:0035F6EC                                # =============== S U B R O U T I N E =======================================
.text:0035F6EC
.text:0035F6EC                                # Attributes: bp-based frame fpd=0x10
.text:0035F6EC
.text:0035F6EC                                # _DWORD __fastcall SkipUnusedParameters(CRunningScript *)
.text:0035F6EC                                               .globl SkipUnusedParameters(CRunningScript *)  # weak
.text:0035F6EC                               SkipUnusedParameters(CRunningScript *):
.text:0035F6EC
.text:0035F6EC                               var_10          = -0x10
.text:0035F6EC                               var_s0          =  0
.text:0035F6EC                               var_s8          =  8
.text:0035F6EC
.text:0035F6EC                                # __unwind {
.text:0035F6EC E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F6F0 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F6F4 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F6F8 25 F0 A0 03                                   move    $fp, $sp
.text:0035F6FC 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F700 05 00 00 10                                   b       loc_35F718
.text:0035F704 00 00 00 00                                   nop
.text:0035F708                                # ---------------------------------------------------------------------------
.text:0035F708
.text:0035F708                               loc_35F708:
.text:0035F708 01 00 05 24                                   li      $a1, 1
.text:0035F70C 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F710 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035F714 00 00 00 00                                   nop
.text:0035F718
.text:0035F718                               loc_35F718:                              # this
.text:0035F718 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F71C 55 7D 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035F720 00 00 00 00                                   nop
.text:0035F724 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035F728 2B 10 02 00                                   sltu    $v0, $zero, $v0
.text:0035F72C FF 00 42 30                                   andi    $v0, 0xFF
.text:0035F730 F5 FF 40 14                                   bnez    $v0, loc_35F708
.text:0035F734 00 00 00 00                                   nop
.text:0035F738 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)  # this
.text:0035F73C 7B 7D 0D 0C                                   jal     CRunningScript::ReadDataByte(void)
.text:0035F740 00 00 00 00                                   nop
.text:0035F744 00 00 00 00                                   nop
.text:0035F748 25 E8 C0 03                                   move    $sp, $fp
.text:0035F74C 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F750 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F754 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F758 08 00 E0 03                                   jr      $ra
.text:0035F75C 00 00 00 00                                   nop
.text:0035F75C                                # } // starts at 35F6EC
.text:0035F75C                                # End of function SkipUnusedParameters(CRunningScript *)
.text:0035F75C
.text:0035F760
.text:0035F760                                # =============== S U B R O U T I N E =======================================
.text:0035F760
.text:0035F760                                # Attributes: bp-based frame fpd=0x18
.text:0035F760
.text:0035F760                                # _DWORD __fastcall ThreadJump(CRunningScript *, int)
.text:0035F760                                               .globl ThreadJump(CRunningScript *, int)  # weak
.text:0035F760                               ThreadJump(CRunningScript *, int):
.text:0035F760
.text:0035F760                               var_18          = -0x18
.text:0035F760                               var_14          = -0x14
.text:0035F760                               var_s0          =  0
.text:0035F760                               var_s8          =  8
.text:0035F760                               var_s10         =  0x10
.text:0035F760
.text:0035F760                                # __unwind {
.text:0035F760 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035F764 28 00 BF FF                                   sd      $ra, 0x18+var_s10($sp)
.text:0035F768 20 00 BE FF                                   sd      $fp, 0x18+var_s8($sp)
.text:0035F76C 18 00 B0 FF                                   sd      $s0, 0x18+var_s0($sp)
.text:0035F770 25 F0 A0 03                                   move    $fp, $sp
.text:0035F774 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035F778 04 00 C5 AF                                   sw      $a1, 0x18+var_14($fp)
.text:0035F77C 00 00 D0 8F                                   lw      $s0, 0x18+var_18($fp)
.text:0035F780 04 00 C2 8F                                   lw      $v0, 0x18+var_14($fp)
.text:0035F784 0A 00 41 04                                   bgez    $v0, loc_35F7B0
.text:0035F788 00 00 00 00                                   nop
.text:0035F78C 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)  # this
.text:0035F790 4A 7D 0D 0C                                   jal     CRunningScript::GetBasePointer(void)
.text:0035F794 00 00 00 00                                   nop
.text:0035F798 25 18 40 00                                   move    $v1, $v0
.text:0035F79C 04 00 C2 8F                                   lw      $v0, 0x18+var_14($fp)
.text:0035F7A0 23 10 02 00                                   negu    $v0, $v0
.text:0035F7A4 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035F7A8 05 00 00 10                                   b       loc_35F7C0
.text:0035F7AC 00 00 00 00                                   nop
.text:0035F7B0                                # ---------------------------------------------------------------------------
.text:0035F7B0
.text:0035F7B0                               loc_35F7B0:
.text:0035F7B0 6B 00 02 3C                                   lui     $v0, 0x6B  # 'k'
.text:0035F7B4 F0 1F 43 8C                                   lw      $v1, CTheScripts_ScriptSpace
.text:0035F7B8 04 00 C2 8F                                   lw      $v0, 0x18+var_14($fp)
.text:0035F7BC 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035F7C0
.text:0035F7C0                               loc_35F7C0:                              # void *
.text:0035F7C0 25 28 40 00                                   move    $a1, $v0
.text:0035F7C4 25 20 00 02                                   move    $a0, $s0         # this
.text:0035F7C8 60 7D 0D 0C                                   jal     CRunningScript::SetIp(void *)
.text:0035F7CC 00 00 00 00                                   nop
.text:0035F7D0 00 00 00 00                                   nop
.text:0035F7D4 25 E8 C0 03                                   move    $sp, $fp
.text:0035F7D8 28 00 BF DF                                   ld      $ra, 0x18+var_s10($sp)
.text:0035F7DC 20 00 BE DF                                   ld      $fp, 0x18+var_s8($sp)
.text:0035F7E0 18 00 B0 DF                                   ld      $s0, 0x18+var_s0($sp)
.text:0035F7E4 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035F7E8 08 00 E0 03                                   jr      $ra
.text:0035F7EC 00 00 00 00                                   nop
.text:0035F7EC                                # } // starts at 35F760
.text:0035F7EC                                # End of function ThreadJump(CRunningScript *,int)
.text:0035F7EC
.text:0035F7F0
.text:0035F7F0                                # =============== S U B R O U T I N E =======================================
.text:0035F7F0
.text:0035F7F0                                # Attributes: bp-based frame fpd=0x10
.text:0035F7F0
.text:0035F7F0                                               .globl operator>>(CRunningScript &, unsigned long &)  # weak
.text:0035F7F0                               operator>>(CRunningScript &, unsigned long &):
.text:0035F7F0
.text:0035F7F0                               var_10          = -0x10
.text:0035F7F0                               var_C           = -0xC
.text:0035F7F0                               var_s0          =  0
.text:0035F7F0                               var_s8          =  8
.text:0035F7F0
.text:0035F7F0                                # __unwind {
.text:0035F7F0 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F7F4 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F7F8 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F7FC 25 F0 A0 03                                   move    $fp, $sp
.text:0035F800 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F804 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F808 01 00 05 24                                   li      $a1, 1
.text:0035F80C 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F810 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035F814 00 00 00 00                                   nop
.text:0035F818 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035F81C B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035F820 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035F824 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035F828 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F82C 25 E8 C0 03                                   move    $sp, $fp
.text:0035F830 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F834 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F838 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F83C 08 00 E0 03                                   jr      $ra
.text:0035F840 00 00 00 00                                   nop
.text:0035F840                                # } // starts at 35F7F0
.text:0035F840                                # End of function operator>>(CRunningScript &,ulong &)
.text:0035F840
.text:0035F844
.text:0035F844                                # =============== S U B R O U T I N E =======================================
.text:0035F844
.text:0035F844                                # Attributes: bp-based frame fpd=0x10
.text:0035F844
.text:0035F844                                               .globl operator<<(CRunningScript &, unsigned long)  # weak
.text:0035F844                               operator<<(CRunningScript &, unsigned long):
.text:0035F844
.text:0035F844                               var_10          = -0x10
.text:0035F844                               var_C           = -0xC
.text:0035F844                               var_s0          =  0
.text:0035F844                               var_s8          =  8
.text:0035F844
.text:0035F844                                # __unwind {
.text:0035F844 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F848 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F84C 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F850 25 F0 A0 03                                   move    $fp, $sp
.text:0035F854 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F858 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F85C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035F860 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035F864 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035F868 01 00 05 24                                   li      $a1, 1
.text:0035F86C 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F870 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035F874 00 00 00 00                                   nop
.text:0035F878 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F87C 25 E8 C0 03                                   move    $sp, $fp
.text:0035F880 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F884 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F888 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F88C 08 00 E0 03                                   jr      $ra
.text:0035F890 00 00 00 00                                   nop
.text:0035F890                                # } // starts at 35F844
.text:0035F890                                # End of function operator<<(CRunningScript &,ulong)
.text:0035F890
.text:0035F894
.text:0035F894                                # =============== S U B R O U T I N E =======================================
.text:0035F894
.text:0035F894                                # Attributes: bp-based frame fpd=0x10
.text:0035F894
.text:0035F894                                               .globl operator>>(CRunningScript &, int &)  # weak
.text:0035F894                               operator>>(CRunningScript &, int &):
.text:0035F894
.text:0035F894                               var_10          = -0x10
.text:0035F894                               var_C           = -0xC
.text:0035F894                               var_s0          =  0
.text:0035F894                               var_s8          =  8
.text:0035F894
.text:0035F894                                # __unwind {
.text:0035F894 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F898 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F89C 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F8A0 25 F0 A0 03                                   move    $fp, $sp
.text:0035F8A4 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F8A8 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F8AC 01 00 05 24                                   li      $a1, 1
.text:0035F8B0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F8B4 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035F8B8 00 00 00 00                                   nop
.text:0035F8BC 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035F8C0 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035F8C4 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035F8C8 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035F8CC 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F8D0 25 E8 C0 03                                   move    $sp, $fp
.text:0035F8D4 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F8D8 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F8DC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F8E0 08 00 E0 03                                   jr      $ra
.text:0035F8E4 00 00 00 00                                   nop
.text:0035F8E4                                # } // starts at 35F894
.text:0035F8E4                                # End of function operator>>(CRunningScript &,int &)
.text:0035F8E4
.text:0035F8E8
.text:0035F8E8                                # =============== S U B R O U T I N E =======================================
.text:0035F8E8
.text:0035F8E8                                # Attributes: bp-based frame fpd=0x10
.text:0035F8E8
.text:0035F8E8                                               .globl operator<<(CRunningScript &, int)  # weak
.text:0035F8E8                               operator<<(CRunningScript &, int):
.text:0035F8E8
.text:0035F8E8                               var_10          = -0x10
.text:0035F8E8                               var_C           = -0xC
.text:0035F8E8                               var_s0          =  0
.text:0035F8E8                               var_s8          =  8
.text:0035F8E8
.text:0035F8E8                                # __unwind {
.text:0035F8E8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F8EC 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F8F0 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F8F4 25 F0 A0 03                                   move    $fp, $sp
.text:0035F8F8 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F8FC 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F900 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035F904 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035F908 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035F90C 01 00 05 24                                   li      $a1, 1
.text:0035F910 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F914 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035F918 00 00 00 00                                   nop
.text:0035F91C 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F920 25 E8 C0 03                                   move    $sp, $fp
.text:0035F924 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F928 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F92C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F930 08 00 E0 03                                   jr      $ra
.text:0035F934 00 00 00 00                                   nop
.text:0035F934                                # } // starts at 35F8E8
.text:0035F934                                # End of function operator<<(CRunningScript &,int)
.text:0035F934
.text:0035F938
.text:0035F938                                # =============== S U B R O U T I N E =======================================
.text:0035F938
.text:0035F938                                # Attributes: bp-based frame fpd=0x10
.text:0035F938
.text:0035F938                                               .globl operator>>(CRunningScript &, float &)  # weak
.text:0035F938                               operator>>(CRunningScript &, float &):
.text:0035F938
.text:0035F938                               var_10          = -0x10
.text:0035F938                               var_C           = -0xC
.text:0035F938                               var_s0          =  0
.text:0035F938                               var_s8          =  8
.text:0035F938
.text:0035F938                                # __unwind {
.text:0035F938 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F93C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F940 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F944 25 F0 A0 03                                   move    $fp, $sp
.text:0035F948 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F94C 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F950 01 00 05 24                                   li      $a1, 1
.text:0035F954 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F958 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035F95C 00 00 00 00                                   nop
.text:0035F960 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035F964 B0 DF 40 C4                                   lwc1    $f0, opcodeParams
.text:0035F968 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035F96C 00 00 40 E4                                   swc1    $f0, 0($v0)
.text:0035F970 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F974 25 E8 C0 03                                   move    $sp, $fp
.text:0035F978 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F97C 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F980 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F984 08 00 E0 03                                   jr      $ra
.text:0035F988 00 00 00 00                                   nop
.text:0035F988                                # } // starts at 35F938
.text:0035F988                                # End of function operator>>(CRunningScript &,float &)
.text:0035F988
.text:0035F98C
.text:0035F98C                                # =============== S U B R O U T I N E =======================================
.text:0035F98C
.text:0035F98C                                # Attributes: bp-based frame fpd=0x10
.text:0035F98C
.text:0035F98C                                               .globl operator>>(CRunningScript &, char *&)  # weak
.text:0035F98C                               operator>>(CRunningScript &, char *&):
.text:0035F98C
.text:0035F98C                               var_10          = -0x10
.text:0035F98C                               var_C           = -0xC
.text:0035F98C                               var_s0          =  0
.text:0035F98C                               var_s8          =  8
.text:0035F98C
.text:0035F98C                                # __unwind {
.text:0035F98C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F990 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F994 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F998 25 F0 A0 03                                   move    $fp, $sp
.text:0035F99C 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F9A0 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F9A4 01 00 05 24                                   li      $a1, 1
.text:0035F9A8 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F9AC F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035F9B0 00 00 00 00                                   nop
.text:0035F9B4 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035F9B8 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035F9BC 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035F9C0 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035F9C4 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F9C8 25 E8 C0 03                                   move    $sp, $fp
.text:0035F9CC 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F9D0 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F9D4 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F9D8 08 00 E0 03                                   jr      $ra
.text:0035F9DC 00 00 00 00                                   nop
.text:0035F9DC                                # } // starts at 35F98C
.text:0035F9DC                                # End of function operator>>(CRunningScript &,char *&)
.text:0035F9DC
.text:0035F9E0
.text:0035F9E0                                # =============== S U B R O U T I N E =======================================
.text:0035F9E0
.text:0035F9E0                                # Attributes: bp-based frame fpd=0x10
.text:0035F9E0
.text:0035F9E0                                               .globl operator>>(CRunningScript &, void *&)  # weak
.text:0035F9E0                               operator>>(CRunningScript &, void *&):
.text:0035F9E0
.text:0035F9E0                               var_10          = -0x10
.text:0035F9E0                               var_C           = -0xC
.text:0035F9E0                               var_s0          =  0
.text:0035F9E0                               var_s8          =  8
.text:0035F9E0
.text:0035F9E0                                # __unwind {
.text:0035F9E0 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F9E4 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F9E8 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F9EC 25 F0 A0 03                                   move    $fp, $sp
.text:0035F9F0 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F9F4 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F9F8 01 00 05 24                                   li      $a1, 1
.text:0035F9FC 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FA00 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035FA04 00 00 00 00                                   nop
.text:0035FA08 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035FA0C B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035FA10 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035FA14 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FA18 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FA1C 25 E8 C0 03                                   move    $sp, $fp
.text:0035FA20 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FA24 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FA28 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FA2C 08 00 E0 03                                   jr      $ra
.text:0035FA30 00 00 00 00                                   nop
.text:0035FA30                                # } // starts at 35F9E0
.text:0035FA30                                # End of function operator>>(CRunningScript &,void *&)
.text:0035FA30
.text:0035FA34
.text:0035FA34                                # =============== S U B R O U T I N E =======================================
.text:0035FA34
.text:0035FA34                                # Attributes: bp-based frame fpd=0x10
.text:0035FA34
.text:0035FA34                                               .globl CRunningScript & operator>><unsigned long>(CRunningScript &, unsigned long *&)  # weak
.text:0035FA34                               CRunningScript & operator>><unsigned long>(CRunningScript &, unsigned long *&):
.text:0035FA34
.text:0035FA34                               var_10          = -0x10
.text:0035FA34                               var_C           = -0xC
.text:0035FA34                               var_s0          =  0
.text:0035FA34                               var_s8          =  8
.text:0035FA34
.text:0035FA34                                # __unwind {
.text:0035FA34 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FA38 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035FA3C 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035FA40 25 F0 A0 03                                   move    $fp, $sp
.text:0035FA44 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035FA48 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035FA4C 01 00 05 24                                   li      $a1, 1
.text:0035FA50 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FA54 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035FA58 00 00 00 00                                   nop
.text:0035FA5C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035FA60 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035FA64 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035FA68 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FA6C 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FA70 25 E8 C0 03                                   move    $sp, $fp
.text:0035FA74 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FA78 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FA7C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FA80 08 00 E0 03                                   jr      $ra
.text:0035FA84 00 00 00 00                                   nop
.text:0035FA84                                # } // starts at 35FA34
.text:0035FA84                                # End of function operator>><ulong>(CRunningScript &,ulong *&)
.text:0035FA84
.text:0035FA88
.text:0035FA88                                # =============== S U B R O U T I N E =======================================
.text:0035FA88
.text:0035FA88                                # Attributes: bp-based frame fpd=0x10
.text:0035FA88
.text:0035FA88                                               .globl CRunningScript & operator<<<int>(CRunningScript &, int *)  # weak
.text:0035FA88                               CRunningScript & operator<<<int>(CRunningScript &, int *):
.text:0035FA88
.text:0035FA88                               var_10          = -0x10
.text:0035FA88                               var_C           = -0xC
.text:0035FA88                               var_s0          =  0
.text:0035FA88                               var_s8          =  8
.text:0035FA88
.text:0035FA88                                # __unwind {
.text:0035FA88 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FA8C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035FA90 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035FA94 25 F0 A0 03                                   move    $fp, $sp
.text:0035FA98 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035FA9C 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035FAA0 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035FAA4 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035FAA8 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035FAAC 01 00 05 24                                   li      $a1, 1
.text:0035FAB0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FAB4 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035FAB8 00 00 00 00                                   nop
.text:0035FABC 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FAC0 25 E8 C0 03                                   move    $sp, $fp
.text:0035FAC4 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FAC8 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FACC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FAD0 08 00 E0 03                                   jr      $ra
.text:0035FAD4 00 00 00 00                                   nop
.text:0035FAD4                                # } // starts at 35FA88
.text:0035FAD4                                # End of function operator<<<int>(CRunningScript &,int *)
.text:0035FAD4
.text:0035FAD8
.text:0035FAD8                                # =============== S U B R O U T I N E =======================================
.text:0035FAD8
.text:0035FAD8                                # Attributes: bp-based frame fpd=0x10
.text:0035FAD8
.text:0035FAD8                                               .globl CRunningScript & operator>><void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035FAD8                               CRunningScript & operator>><void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035FAD8
.text:0035FAD8                               var_10          = -0x10
.text:0035FAD8                               var_C           = -0xC
.text:0035FAD8                               var_s0          =  0
.text:0035FAD8                               var_s8          =  8
.text:0035FAD8
.text:0035FAD8                                # __unwind {
.text:0035FAD8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FADC 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035FAE0 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035FAE4 25 F0 A0 03                                   move    $fp, $sp
.text:0035FAE8 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035FAEC 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035FAF0 01 00 05 24                                   li      $a1, 1
.text:0035FAF4 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FAF8 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035FAFC 00 00 00 00                                   nop
.text:0035FB00 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035FB08 25 18 40 00                                   move    $v1, $v0
.text:0035FB0C 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035FB10 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FB14 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FB18 25 E8 C0 03                                   move    $sp, $fp
.text:0035FB1C 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FB20 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FB24 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FB28 08 00 E0 03                                   jr      $ra
.text:0035FB2C 00 00 00 00                                   nop
.text:0035FB2C                                # } // starts at 35FAD8
.text:0035FB2C                                # End of function operator>><void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035FB2C
.text:0035FB30
.text:0035FB30                                # =============== S U B R O U T I N E =======================================
.text:0035FB30
.text:0035FB30                                # Attributes: bp-based frame fpd=0x10
.text:0035FB30
.text:0035FB30                                               .globl CRunningScript & operator>><void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035FB30                               CRunningScript & operator>><void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035FB30
.text:0035FB30                               var_10          = -0x10
.text:0035FB30                               var_C           = -0xC
.text:0035FB30                               var_s0          =  0
.text:0035FB30                               var_s8          =  8
.text:0035FB30
.text:0035FB30                                # __unwind {
.text:0035FB30 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FB34 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035FB38 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035FB3C 25 F0 A0 03                                   move    $fp, $sp
.text:0035FB40 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035FB44 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035FB48 01 00 05 24                                   li      $a1, 1
.text:0035FB4C 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FB50 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035FB54 00 00 00 00                                   nop
.text:0035FB58 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035FB60 25 18 40 00                                   move    $v1, $v0
.text:0035FB64 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035FB68 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FB6C 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FB70 25 E8 C0 03                                   move    $sp, $fp
.text:0035FB74 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FB78 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FB7C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FB80 08 00 E0 03                                   jr      $ra
.text:0035FB84 00 00 00 00                                   nop
.text:0035FB84                                # } // starts at 35FB30
.text:0035FB84                                # End of function operator>><void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035FB84
.text:0035FB88
.text:0035FB88                                # =============== S U B R O U T I N E =======================================
.text:0035FB88
.text:0035FB88                                # Attributes: bp-based frame fpd=0x10
.text:0035FB88
.text:0035FB88                                               .globl CRunningScript & operator>><unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035FB88                               CRunningScript & operator>><unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035FB88
.text:0035FB88                               var_10          = -0x10
.text:0035FB88                               var_C           = -0xC
.text:0035FB88                               var_s0          =  0
.text:0035FB88                               var_s8          =  8
.text:0035FB88
.text:0035FB88                                # __unwind {
.text:0035FB88 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FB8C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035FB90 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035FB94 25 F0 A0 03                                   move    $fp, $sp
.text:0035FB98 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035FB9C 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035FBA0 01 00 05 24                                   li      $a1, 1
.text:0035FBA4 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FBA8 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035FBAC 00 00 00 00                                   nop
.text:0035FBB0 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035FBB8 25 18 40 00                                   move    $v1, $v0
.text:0035FBBC 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035FBC0 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FBC4 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FBC8 25 E8 C0 03                                   move    $sp, $fp
.text:0035FBCC 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FBD0 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FBD4 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FBD8 08 00 E0 03                                   jr      $ra
.text:0035FBDC 00 00 00 00                                   nop
.text:0035FBDC                                # } // starts at 35FB88
.text:0035FBDC                                # End of function operator>><ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035FBDC
.text:0035FBE0
.text:0035FBE0                                # =============== S U B R O U T I N E =======================================
.text:0035FBE0
.text:0035FBE0                                # Attributes: bp-based frame fpd=0x10
.text:0035FBE0
.text:0035FBE0                                               .globl CRunningScript & operator>><unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035FBE0                               CRunningScript & operator>><unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035FBE0
.text:0035FBE0                               var_10          = -0x10
.text:0035FBE0                               var_C           = -0xC
.text:0035FBE0                               var_s0          =  0
.text:0035FBE0                               var_s8          =  8
.text:0035FBE0
.text:0035FBE0                                # __unwind {
.text:0035FBE0 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FBE4 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035FBE8 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035FBEC 25 F0 A0 03                                   move    $fp, $sp
.text:0035FBF0 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035FBF4 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035FBF8 01 00 05 24                                   li      $a1, 1
.text:0035FBFC 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FC00 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035FC04 00 00 00 00                                   nop
.text:0035FC08 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035FC10 25 18 40 00                                   move    $v1, $v0
.text:0035FC14 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035FC18 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035FC1C 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FC20 25 E8 C0 03                                   move    $sp, $fp
.text:0035FC24 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FC28 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FC2C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FC30 08 00 E0 03                                   jr      $ra
.text:0035FC34 00 00 00 00                                   nop
.text:0035FC34                                # } // starts at 35FBE0
.text:0035FC34                                # End of function operator>><ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035FC34
.text:0035FC38
.text:0035FC38                                # =============== S U B R O U T I N E =======================================
.text:0035FC38
.text:0035FC38                                # Attributes: bp-based frame fpd=0x10
.text:0035FC38
.text:0035FC38                                               .globl CRunningScript & operator<<<unsigned char>(CRunningScript &, unsigned char *)  # weak
.text:0035FC38                               CRunningScript & operator<<<unsigned char>(CRunningScript &, unsigned char *):
.text:0035FC38
.text:0035FC38                               var_10          = -0x10
.text:0035FC38                               var_C           = -0xC
.text:0035FC38                               var_s0          =  0
.text:0035FC38                               var_s8          =  8
.text:0035FC38
.text:0035FC38                                # __unwind {
.text:0035FC38 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FC3C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035FC40 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035FC44 25 F0 A0 03                                   move    $fp, $sp
.text:0035FC48 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035FC4C 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035FC50 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035FC54 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035FC58 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035FC5C 01 00 05 24                                   li      $a1, 1
.text:0035FC60 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FC64 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035FC68 00 00 00 00                                   nop
.text:0035FC6C 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FC70 25 E8 C0 03                                   move    $sp, $fp
.text:0035FC74 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FC78 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FC7C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FC80 08 00 E0 03                                   jr      $ra
.text:0035FC84 00 00 00 00                                   nop
.text:0035FC84                                # } // starts at 35FC38
.text:0035FC84                                # End of function operator<<<uchar>(CRunningScript &,uchar *)
.text:0035FC84
.text:0035FC88
.text:0035FC88                                # =============== S U B R O U T I N E =======================================
.text:0035FC88
.text:0035FC88                                # Attributes: bp-based frame fpd=0x10
.text:0035FC88
.text:0035FC88                                               .globl CRunningScript & operator<<<SCRIPT_VAR>(CRunningScript &, SCRIPT_VAR *)  # weak
.text:0035FC88                               CRunningScript & operator<<<SCRIPT_VAR>(CRunningScript &, SCRIPT_VAR *):
.text:0035FC88
.text:0035FC88                               var_10          = -0x10
.text:0035FC88                               var_C           = -0xC
.text:0035FC88                               var_s0          =  0
.text:0035FC88                               var_s8          =  8
.text:0035FC88
.text:0035FC88                                # __unwind {
.text:0035FC88 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FC8C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035FC90 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035FC94 25 F0 A0 03                                   move    $fp, $sp
.text:0035FC98 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035FC9C 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035FCA0 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035FCA4 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035FCA8 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035FCAC 01 00 05 24                                   li      $a1, 1
.text:0035FCB0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FCB4 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035FCB8 00 00 00 00                                   nop
.text:0035FCBC 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FCC0 25 E8 C0 03                                   move    $sp, $fp
.text:0035FCC4 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FCC8 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FCCC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FCD0 08 00 E0 03                                   jr      $ra
.text:0035FCD4 00 00 00 00                                   nop
.text:0035FCD4                                # } // starts at 35FC88
.text:0035FCD4                                # End of function operator<<<SCRIPT_VAR>(CRunningScript &,SCRIPT_VAR *)
.text:0035FCD4
.text:0035FCD8
.text:0035FCD8                                # =============== S U B R O U T I N E =======================================
.text:0035FCD8
.text:0035FCD8                                # Attributes: bp-based frame fpd=0x10
.text:0035FCD8
.text:0035FCD8                                               .globl CRunningScript & operator<<<void>(CRunningScript &, void *)  # weak
.text:0035FCD8                               CRunningScript & operator<<<void>(CRunningScript &, void *):
.text:0035FCD8
.text:0035FCD8                               var_10          = -0x10
.text:0035FCD8                               var_C           = -0xC
.text:0035FCD8                               var_s0          =  0
.text:0035FCD8                               var_s8          =  8
.text:0035FCD8
.text:0035FCD8                                # __unwind {
.text:0035FCD8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FCDC 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035FCE0 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035FCE4 25 F0 A0 03                                   move    $fp, $sp
.text:0035FCE8 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035FCEC 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035FCF0 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035FCF4 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035FCF8 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035FCFC 01 00 05 24                                   li      $a1, 1
.text:0035FD00 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FD04 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035FD08 00 00 00 00                                   nop
.text:0035FD0C 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FD10 25 E8 C0 03                                   move    $sp, $fp
.text:0035FD14 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FD18 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FD1C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FD20 08 00 E0 03                                   jr      $ra
.text:0035FD24 00 00 00 00                                   nop
.text:0035FD24                                # } // starts at 35FCD8
.text:0035FD24                                # End of function operator<<<void>(CRunningScript &,void *)
.text:0035FD24
.text:0035FD28
.text:0035FD28                                # =============== S U B R O U T I N E =======================================
.text:0035FD28
.text:0035FD28                                # Attributes: bp-based frame fpd=0x10
.text:0035FD28
.text:0035FD28                                               .globl CRunningScript & operator<<<char const>(CRunningScript &, char const *)  # weak
.text:0035FD28                               CRunningScript & operator<<<char const>(CRunningScript &, char const *):
.text:0035FD28
.text:0035FD28                               var_10          = -0x10
.text:0035FD28                               var_C           = -0xC
.text:0035FD28                               var_s0          =  0
.text:0035FD28                               var_s8          =  8
.text:0035FD28
.text:0035FD28                                # __unwind {
.text:0035FD28 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035FD2C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035FD30 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035FD34 25 F0 A0 03                                   move    $fp, $sp
.text:0035FD38 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035FD3C 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035FD40 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035FD44 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035FD48 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035FD4C 01 00 05 24                                   li      $a1, 1
.text:0035FD50 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035FD54 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035FD58 00 00 00 00                                   nop
.text:0035FD5C 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035FD60 25 E8 C0 03                                   move    $sp, $fp
.text:0035FD64 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035FD68 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035FD6C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035FD70 08 00 E0 03                                   jr      $ra
.text:0035FD74 00 00 00 00                                   nop
.text:0035FD74                                # } // starts at 35FD28
.text:0035FD74                                # End of function operator<<<char const>(CRunningScript &,char const *)
.text:0035FD74
.text:0035FD74                                # ---------------------------------------------------------------------------
.text:0035FD78 25 64 00 00                   int_fmt:        .word byte_6425
.text:0035FD7C 00 00 00 00                                   .align 4
.text:0035FD80 25 30 38 58                   ptrstr:         .word 0x58383025
.text:0035FD84 00 00 00 00                                   .word 0
.text:0035FD88 25 66 00 00                   fltstr:         .word byte_6625
.text:0035FD8C 00 00 00 00                                   .align 4
.text:0035FD90 28 6E 75 6C                   none:           .word 0x6C756E28
.text:0035FD94 6C 29 00 00                                   .word 0x296C
.text:0035FD98 E4 DC 35 00                   jpt_35DB18:     .word 0x35DCE4           # jump table for switch statement
.text:0035FD9C 64 DC 35 00                                   .word 3529828
.text:0035FDA0 64 DC 35 00                                   .word 3529828
.text:0035FDA4 64 DC 35 00                                   .word 3529828
.text:0035FDA8 64 DC 35 00                                   .word 3529828
.text:0035FDAC 64 DC 35 00                                   .word 3529828
.text:0035FDB0 20 DB 35 00                                   .word 3529504
.text:0035FDB4 64 DC 35 00                                   .word 3529828
.text:0035FDB8 64 DC 35 00                                   .word 3529828
.text:0035FDBC A4 DC 35 00                                   .word 3529892
.text:0035FDC0 80 DC 35 00                                   .word 3529856
.text:0035FDC4 80 DC 35 00                                   .word 3529856
.text:0035FDC8 E4 DC 35 00                                   .word 3529956
.text:0035FDCC E4 DC 35 00                                   .word 3529956
.text:0035FDD0 A4 DC 35 00                                   .word 3529892
.text:0035FDD4 E4 DC 35 00                                   .word 3529956
.text:0035FDD8 80 DC 35 00                                   .word 3529856
.text:0035FDDC 80 DC 35 00                                   .word 3529856
.text:0035FDE0 64 DB 35 00                   jpt_35DB5C:     .word 3529572            # jump table for switch statement
.text:0035FDE4 74 DB 35 00                                   .word 3529588
.text:0035FDE8 84 DB 35 00                                   .word 3529604
.text:0035FDEC 94 DB 35 00                                   .word 3529620
.text:0035FDF0 A4 DB 35 00                                   .word 3529636
.text:0035FDF4 B4 DB 35 00                                   .word 3529652
.text:0035FDF8 C4 DB 35 00                                   .word 3529668
.text:0035FDFC D4 DB 35 00                                   .word 3529684
.text:0035FE00 E4 DB 35 00                                   .word 3529700
.text:0035FE04 F4 DB 35 00                                   .word 3529716
.text:0035FE08 04 DC 35 00                                   .word 3529732
.text:0035FE0C 14 DC 35 00                                   .word 3529748
.text:0035FE10 24 DC 35 00                                   .word 3529764
.text:0035FE14 34 DC 35 00                                   .word 3529780
.text:0035FE18 44 DC 35 00                                   .word 3529796
.text:0035FE1C B4 E0 35 00                   jpt_35DEE8:     .word 3530932            # jump table for switch statement
.text:0035FE20 34 E0 35 00                                   .word 3530804
.text:0035FE24 34 E0 35 00                                   .word 3530804
.text:0035FE28 34 E0 35 00                                   .word 3530804
.text:0035FE2C 34 E0 35 00                                   .word 3530804
.text:0035FE30 34 E0 35 00                                   .word 3530804
.text:0035FE34 F0 DE 35 00                                   .word 3530480
.text:0035FE38 34 E0 35 00                                   .word 3530804
.text:0035FE3C 34 E0 35 00                                   .word 3530804
.text:0035FE40 74 E0 35 00                                   .word 3530868
.text:0035FE44 50 E0 35 00                                   .word 3530832
.text:0035FE48 50 E0 35 00                                   .word 3530832
.text:0035FE4C B4 E0 35 00                                   .word 3530932
.text:0035FE50 B4 E0 35 00                                   .word 3530932
.text:0035FE54 74 E0 35 00                                   .word 3530868
.text:0035FE58 B4 E0 35 00                                   .word 3530932
.text:0035FE5C 50 E0 35 00                                   .word 3530832
.text:0035FE60 50 E0 35 00                                   .word 3530832
.text:0035FE64 34 DF 35 00                   jpt_35DF2C:     .word 3530548            # jump table for switch statement
.text:0035FE68 44 DF 35 00                                   .word 3530564
.text:0035FE6C 54 DF 35 00                                   .word 3530580
.text:0035FE70 64 DF 35 00                                   .word 0x35DF64
.text:0035FE74 74 DF 35 00                                   .word 3530612
.text:0035FE78 84 DF 35 00                                   .word 3530628
.text:0035FE7C 94 DF 35 00                                   .word 3530644
.text:0035FE80 A4 DF 35 00                                   .word 3530660
.text:0035FE84 B4 DF 35 00                                   .word 3530676
.text:0035FE88 C4 DF 35 00                                   .word 3530692
.text:0035FE8C D4 DF 35 00                                   .word 3530708
.text:0035FE90 E4 DF 35 00                                   .word 3530724
.text:0035FE94 F4 DF 35 00                                   .word 3530740
.text:0035FE98 04 E0 35 00                                   .word 3530756
.text:0035FE9C 14 E0 35 00                                   .word 3530772
.text:0035FEA0 7C E4 35 00                   jpt_35E2B0:     .word 3531900            # jump table for switch statement
.text:0035FEA4 FC E3 35 00                                   .word 3531772
.text:0035FEA8 FC E3 35 00                                   .word 3531772
.text:0035FEAC FC E3 35 00                                   .word 3531772
.text:0035FEB0 FC E3 35 00                                   .word 3531772
.text:0035FEB4 FC E3 35 00                                   .word 3531772
.text:0035FEB8 B8 E2 35 00                                   .word 3531448
.text:0035FEBC FC E3 35 00                                   .word 3531772
.text:0035FEC0 FC E3 35 00                                   .word 3531772
.text:0035FEC4 3C E4 35 00                                   .word 3531836
.text:0035FEC8 18 E4 35 00                                   .word 3531800
.text:0035FECC 18 E4 35 00                                   .word 3531800
.text:0035FED0 7C E4 35 00                                   .word 3531900
.text:0035FED4 7C E4 35 00                                   .word 3531900
.text:0035FED8 3C E4 35 00                                   .word 3531836
.text:0035FEDC 7C E4 35 00                                   .word 3531900
.text:0035FEE0 18 E4 35 00                                   .word 3531800
.text:0035FEE4 18 E4 35 00                                   .word 3531800
.text:0035FEE8 FC E2 35 00                   jpt_35E2F4:     .word 3531516            # jump table for switch statement
.text:0035FEEC 0C E3 35 00                                   .word 3531532
.text:0035FEF0 1C E3 35 00                                   .word 3531548
.text:0035FEF4 2C E3 35 00                                   .word 3531564
.text:0035FEF8 3C E3 35 00                                   .word 3531580
.text:0035FEFC 4C E3 35 00                                   .word 3531596
.text:0035FF00 5C E3 35 00                                   .word 3531612
.text:0035FF04 6C E3 35 00                                   .word 3531628
.text:0035FF08 7C E3 35 00                                   .word 3531644
.text:0035FF0C 8C E3 35 00                                   .word 3531660
.text:0035FF10 9C E3 35 00                                   .word 3531676
.text:0035FF14 AC E3 35 00                                   .word 3531692
.text:0035FF18 BC E3 35 00                                   .word 3531708
.text:0035FF1C CC E3 35 00                                   .word 3531724
.text:0035FF20 DC E3 35 00                                   .word 3531740
.text:0035FF24 60 E8 35 00                   jpt_35E694:     .word 3532896            # jump table for switch statement
.text:0035FF28 E0 E7 35 00                                   .word 3532768
.text:0035FF2C E0 E7 35 00                                   .word 3532768
.text:0035FF30 E0 E7 35 00                                   .word 3532768
.text:0035FF34 E0 E7 35 00                                   .word 3532768
.text:0035FF38 E0 E7 35 00                                   .word 3532768
.text:0035FF3C 9C E6 35 00                                   .word 3532444
.text:0035FF40 E0 E7 35 00                                   .word 3532768
.text:0035FF44 E0 E7 35 00                                   .word 3532768
.text:0035FF48 20 E8 35 00                                   .word 3532832
.text:0035FF4C FC E7 35 00                                   .word 3532796
.text:0035FF50 FC E7 35 00                                   .word 3532796
.text:0035FF54 60 E8 35 00                                   .word 3532896
.text:0035FF58 60 E8 35 00                                   .word 3532896
.text:0035FF5C 20 E8 35 00                                   .word 3532832
.text:0035FF60 60 E8 35 00                                   .word 3532896
.text:0035FF64 FC E7 35 00                                   .word 3532796
.text:0035FF68 FC E7 35 00                                   .word 3532796
.text:0035FF6C E0 E6 35 00                   jpt_35E6D8:     .word 3532512            # jump table for switch statement
.text:0035FF70 F0 E6 35 00                                   .word 3532528
.text:0035FF74 00 E7 35 00                                   .word 3532544
.text:0035FF78 10 E7 35 00                                   .word 3532560
.text:0035FF7C 20 E7 35 00                                   .word 3532576
.text:0035FF80 30 E7 35 00                                   .word 3532592
.text:0035FF84 40 E7 35 00                                   .word 3532608
.text:0035FF88 50 E7 35 00                                   .word 3532624
.text:0035FF8C 60 E7 35 00                                   .word 3532640
.text:0035FF90 70 E7 35 00                                   .word 3532656
.text:0035FF94 80 E7 35 00                                   .word 3532672
.text:0035FF98 90 E7 35 00                                   .word 3532688
.text:0035FF9C A0 E7 35 00                                   .word 3532704
.text:0035FFA0 B0 E7 35 00                                   .word 3532720
.text:0035FFA4 C0 E7 35 00                                   .word 3532736
.text:0035FFA8                                               .globl _fdata
.text:0035FFA8 10 32 23 00                   _fdata:         .word sub_233210         # Alternative name is '_fdata'
.text:0035FFA8                                                                        # rw_open
.text:0035FFAC                                               .globl rw_read
.text:0035FFAC 50 32 23 00                   rw_read:        .word loc_233250
.text:0035FFB0                                               .globl rw_seek
.text:0035FFB0 B0 32 23 00                   rw_seek:        .word loc_2332B0
.text:0035FFB4                                               .globl rw_close
.text:0035FFB4 70 33 23 00                   rw_close:       .word loc_233370
.text:0035FFB8                                               .globl printf
.text:0035FFB8 D0 F7 54 00                   printf:         .word loc_54F7D0
.text:0035FFBC                                               .globl malloc
.text:0035FFBC 10 70 33 00                   malloc:         .word sub_337010
.text:0035FFC0                                               .globl free
.text:0035FFC0 38 D8 54 00                   free:           .word sub_54D838
.text:0035FFC4                                               .globl memset
.text:0035FFC4 68 E5 54 00                   memset:         .word sub_54E568
.text:0035FFC8                                               .globl memcpy
.text:0035FFC8 B0 E3 54 00                   memcpy:         .word loc_54E3B0
.text:0035FFCC                                               .globl memcmp
.text:0035FFCC 18 E3 54 00                   memcmp:         .word loc_54E318
.text:0035FFD0                                               .globl strlen
.text:0035FFD0 B8 17 55 00                   strlen:         .word loc_5517B8
.text:0035FFD4                                               .globl strcmp
.text:0035FFD4 58 15 55 00                   strcmp:         .word dword_551558
.text:0035FFD8                                               .globl strcpy
.text:0035FFD8 A0 16 55 00                   strcpy:         .word sub_5516A0
.text:0035FFDC                                               .globl strcat
.text:0035FFDC 98 12 55 00                   strcat:         .word dword_551298
.text:0035FFE0                                               .globl SetScriptCondResult
.text:0035FFE0 F0 77 30 00                   SetScriptCondResult:.word sub_3077F0
.text:0035FFE4                                               .globl PrintBig
.text:0035FFE4 D0 BC 18 00                   PrintBig:       .word sub_18BCD0
.text:0035FFE8                                               .globl Print
.text:0035FFE8 70 B5 18 00                   Print:          .word sub_18B570
.text:0035FFEC                                               .globl PrintNow
.text:0035FFEC B0 B8 18 00                   PrintNow:       .word loc_18B8B0
.text:0035FFF0                                               .globl GetPedHandle
.text:0035FFF0 20 FA 19 00                   GetPedHandle:   .word loc_19FA20
.text:0035FFF4                                               .globl GetVehHandle
.text:0035FFF4 20 EF 17 00                   GetVehHandle:   .word sub_17EF20
.text:0035FFF8                                               .globl GetObjHandle
.text:0035FFF8 C0 2C 13 00                   GetObjHandle:   .word sub_132CC0
.text:0035FFFC                                               .globl CText_Get
.text:0035FFFC 90 ED 18 00                   CText_Get:      .word loc_18ED90
.text:00360000                                               .globl gameTexts
.text:00360000 90 F2 69 00                   gameTexts:      .word dword_69F290
.text:00360004 00 00 00 00                                   .align 3
.text:00360008                                               .globl customOpcodeHandlers
.text:00360008 08 D2 35 00                   customOpcodeHandlers:.word opcode_0A8C(CRunningScript *)
.text:0036000C DC D2 35 00                                   .word opcode_0A8D(CRunningScript *)
.text:00360010                                # ---------------------------------------------------------------------------
.text:00360010 A8 D3 35 00                                   mfsa    $k0
.text:00360014 18 D4 35 00                                   mult    $k0, $at, $s5
.text:00360018 88 D4 35 00                                   jr.hb   $at
.text:0036001C F8 D4 35 00                                   dsll    $k0, $s5, 19
.text:0036001C                                # ---------------------------------------------------------------------------
.text:00360020 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360024 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360028 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036002C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360030 74 D5 35 00                                   .word opcode_0A96(CRunningScript *)
.text:00360034 EC D5 35 00                                   .word opcode_0A97(CRunningScript *)
.text:00360038 64 D6 35 00                                   .word opcode_0A98(CRunningScript *)
.text:0036003C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360040 DC D6 35 00                                   .word opcode_0A9A(CRunningScript *)
.text:00360044 C0 D7 35 00                                   .word opcode_0A9B(CRunningScript *)
.text:00360048 18 D8 35 00                                   .word opcode_0A9C(CRunningScript *)
.text:0036004C 54 D8 35 00                                   .word opcode_0A9D(CRunningScript *)
.text:00360050 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360054 E4 D8 35 00                                   .word opcode_0A9F(CRunningScript *)
.text:00360058 30 D9 35 00                                   .word opcode_0AA0(CRunningScript *)
.text:0036005C CC D9 35 00                                   .word opcode_0AA1(CRunningScript *)
.text:00360060 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360064 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360068 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036006C 44 DA 35 00                                   .word opcode_0AA5(CRunningScript *)
.text:00360070 00 DE 35 00                                   .word opcode_0AA6(CRunningScript *)
.text:00360074 DC E1 35 00                                   .word opcode_0AA7(CRunningScript *)
.text:00360078 AC E5 35 00                                   .word opcode_0AA8(CRunningScript *)
.text:0036007C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360080 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360084 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360088 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036008C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360090 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360094 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360098 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036009C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600A0 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600A4 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600A8 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600AC E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600B0 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600B4 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600B8 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600BC E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600C0 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600C4 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600C8 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600CC E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600D0 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600D4 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600D8 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600DC E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600E0 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600E4 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600E8 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600EC E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:003600F0 90 E9 35 00                                   .word opcode_0AC6(CRunningScript *)
.text:003600F4 2C EA 35 00                                   .word opcode_0AC7(CRunningScript *)
.text:003600F8 88 EA 35 00                                   .word opcode_0AC8(CRunningScript *)
.text:003600FC 1C EB 35 00                                   .word opcode_0AC9(CRunningScript *)
.text:00360100 74 EB 35 00                                   .word opcode_0ACA(CRunningScript *)
.text:00360104 D0 EB 35 00                                   .word opcode_0ACB(CRunningScript *)
.text:00360108 94 EC 35 00                                   .word opcode_0ACC(CRunningScript *)
.text:0036010C 34 ED 35 00                                   .word opcode_0ACD(CRunningScript *)
.text:00360110 D4 ED 35 00                                   .word opcode_0ACE(CRunningScript *)
.text:00360114 5C EE 35 00                                   .word opcode_0ACF(CRunningScript *)
.text:00360118                                # ---------------------------------------------------------------------------
.text:00360118 48 EF 35 00                                   jr.hb   $at
.text:0036011C 10 F0 35 00                                   mfhi    $fp, $ac1
.text:0036011C                                # ---------------------------------------------------------------------------
.text:00360120 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360124 D8 F0 35 00                                   .word opcode_0AD3(CRunningScript *)
.text:00360128 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036012C C0 F1 35 00                                   .word opcode_0AD5(CRunningScript *)
.text:00360130 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360134 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360138 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036013C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360140 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360144 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360148 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036014C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360150 7C F2 35 00                                   .word opcode_0ADE(CRunningScript *)
.text:00360154 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360158 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036015C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360160 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360164 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360168 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036016C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360170 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360174 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360178 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0036017C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360180 A8 F3 35 00                                   .word opcode_0AEA(CRunningScript *)
.text:00360184 28 F4 35 00                                   .word opcode_0AEB(CRunningScript *)
.text:00360188 A8 F4 35 00                                   .word opcode_0AEC(CRunningScript *)
.text:0036018C E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360190 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360194 E0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:00360198                                               .globl message_buf
.text:00360198 00 00 00 00                   message_buf:    .word 0
.text:0036019C 00 00 00 00                                   .word 0
.text:003601A0 00 00 00 00                                   .word 0
.text:003601A4 00 00 00 00                                   .word 0
.text:003601A8 00 00 00 00                                   .word 0
.text:003601AC 00 00 00 00                                   .word 0
.text:003601B0 00 00 00 00                                   .word 0
.text:003601B4 00 00 00 00                                   .word 0
.text:003601B8 00 00 00 00                                   .word 0
.text:003601BC 00 00 00 00                                   .word 0
.text:003601C0 00 00 00 00                                   .word 0
.text:003601C4 00 00 00 00                                   .word 0
.text:003601C8 00 00 00 00                                   .word 0
.text:003601CC 00 00 00 00                                   .word 0
.text:003601D0 00 00 00 00                                   .word 0
.text:003601D4 00 00 00 00                                   .word 0
.text:003601D8 00 00 00 00                                   .word 0
.text:003601DC 00 00 00 00                                   .word 0
.text:003601E0 00 00 00 00                                   .word 0
.text:003601E4 00 00 00 00                                   .word 0
.text:003601E8 00 00 00 00                                   .word 0
.text:003601EC 00 00 00 00                                   .word 0
.text:003601F0 00 00 00 00                                   .word 0
.text:003601F4 00 00 00 00                                   .word 0
.text:003601F8 00 00 00 00                                   .word 0
.text:003601FC 00 00 00 00                                   .word 0
.text:00360200 00 00 00 00                                   .word 0
.text:00360204 00 00 00 00                                   .word 0
.text:00360208 00 00 00 00                                   .word 0
.text:0036020C 00 00 00 00                                   .word 0
.text:00360210 00 00 00 00                                   .word 0
.text:00360214 00 00 00 00                                   .word 0
.text:00360218 00 00 00 00                   readString(CRunningScript *, char *, unsigned char)::result:.word 0
.text:0036021C 00 00 00 00                                   .word 0
.text:00360220 00 00 00 00                                   .word 0
.text:00360224 00 00 00 00                                   .word 0
.text:00360228 00 00 00 00                                   .word 0
.text:0036022C 00 00 00 00                                   .word 0
.text:00360230 00 00 00 00                                   .word 0
.text:00360234 00 00 00 00                                   .word 0
.text:00360238 00 00 00 00                                   .word 0
.text:0036023C 00 00 00 00                                   .word 0
.text:00360240 00 00 00 00                                   .word 0
.text:00360244 00 00 00 00                                   .word 0
.text:00360248 00 00 00 00                                   .word 0
.text:0036024C 00 00 00 00                                   .word 0
.text:00360250 00 00 00 00                                   .word 0
.text:00360254 00 00 00 00                                   .word 0
.text:00360258 00 00 00 00                                   .word 0
.text:0036025C 00 00 00 00                                   .word 0
.text:00360260 00 00 00 00                                   .word 0
.text:00360264 00 00 00 00                                   .word 0
.text:00360268 00 00 00 00                                   .word 0
.text:0036026C 00 00 00 00                                   .word 0
.text:00360270 00 00 00 00                                   .word 0
.text:00360274 00 00 00 00                                   .word 0
.text:00360278 00 00 00 00                                   .word 0
.text:0036027C 00 00 00 00                                   .word 0
.text:00360280 00 00 00 00                                   .word 0
.text:00360284 00 00 00 00                                   .word 0
.text:00360288 00 00 00 00                                   .word 0
.text:0036028C 00 00 00 00                                   .word 0
.text:00360290 00 00 00 00                                   .word 0
.text:00360294 00 00 00 00                                   .word 0
.text:00360298 00 00 00 00                   textParams:     .word 0
.text:0036029C 00 00 00 00                                   .word 0
.text:003602A0 00 00 00 00                                   .word 0
.text:003602A4 00 00 00 00                                   .word 0
.text:003602A8 00 00 00 00                                   .word 0
.text:003602AC 00 00 00 00                                   .word 0
.text:003602B0 00 00 00 00                                   .word 0
.text:003602B4 00 00 00 00                                   .word 0
.text:003602B8 00 00 00 00                                   .word 0
.text:003602BC 00 00 00 00                                   .word 0
.text:003602C0 00 00 00 00                                   .word 0
.text:003602C4 00 00 00 00                                   .word 0
.text:003602C8 00 00 00 00                                   .word 0
.text:003602CC 00 00 00 00                                   .word 0
.text:003602D0 00 00 00 00                                   .word 0
.text:003602D4 00 00 00 00                                   .word 0
.text:003602D8 00 00 00 00                                   .word 0
.text:003602DC 00 00 00 00                                   .word 0
.text:003602E0 00 00 00 00                                   .word 0
.text:003602E4 00 00 00 00                                   .word 0
.text:003602E8 00 00 00 00                                   .word 0
.text:003602EC 00 00 00 00                                   .word 0
.text:003602F0 00 00 00 00                                   .word 0
.text:003602F4 00 00 00 00                                   .word 0
.text:003602F8 00 00 00 00                                   .word 0
.text:003602FC 00 00 00 00                                   .word 0
.text:00360300 00 00 00 00                                   .word 0
.text:00360304 00 00 00 00                                   .word 0
.text:00360308 00 00 00 00                                   .word 0
.text:0036030C 00 00 00 00                                   .word 0
.text:00360310 00 00 00 00                                   .word 0
.text:00360314 00 00 00 00                                   .word 0
.text:00360318 00 00 00 00                                   .word 0
.text:0036031C 00 00 00 00                                   .word 0
.text:00360320 00 00 00 00                                   .word 0
.text:00360324 00 00 00 00                                   .word 0
.text:00360328 00 00 00 00                                   .word 0
.text:0036032C 00 00 00 00                                   .word 0
.text:00360330 00 00 00 00                                   .word 0
.text:00360334 00 00 00 00                                   .word 0
.text:00360338 00 00 00 00                                   .word 0
.text:0036033C 00 00 00 00                                   .word 0
.text:00360340 00 00 00 00                                   .word 0
.text:00360344 00 00 00 00                                   .word 0
.text:00360348 00 00 00 00                                   .word 0
.text:0036034C 00 00 00 00                                   .word 0
.text:00360350 00 00 00 00                                   .word 0
.text:00360354 00 00 00 00                                   .word 0
.text:00360358 00 00 00 00                                   .word 0
.text:0036035C 00 00 00 00                                   .word 0
.text:00360360 00 00 00 00                                   .word 0
.text:00360364 00 00 00 00                                   .word 0
.text:00360368 00 00 00 00                                   .word 0
.text:0036036C 00 00 00 00                                   .word 0
.text:00360370 00 00 00 00                                   .word 0
.text:00360374 00 00 00 00                                   .word 0
.text:00360378 00 00 00 00                                   .word 0
.text:0036037C 00 00 00 00                                   .word 0
.text:00360380 00 00 00 00                                   .word 0
.text:00360384 00 00 00 00                                   .word 0
.text:00360388 00 00 00 00                                   .word 0
.text:0036038C 00 00 00 00                                   .word 0
.text:00360390 00 00 00 00                                   .word 0
.text:00360394 00 00 00 00                                   .word 0
.text:00360398 00 00 00 00                   arguments:      .word 0
.text:0036039C 00 00 00 00                   dword_36039C:   .word 0
.text:003603A0 00 00 00 00                   dword_3603A0:   .word 0
.text:003603A4 00 00 00 00                   dword_3603A4:   .word 0
.text:003603A8 00 00 00 00                   dword_3603A8:   .word 0
.text:003603AC 00 00 00 00                   dword_3603AC:   .word 0
.text:003603B0 00 00 00 00                   dword_3603B0:   .word 0
.text:003603B4 00 00 00 00                   dword_3603B4:   .word 0
.text:003603B8 00 00 00 00                   dword_3603B8:   .word 0
.text:003603BC 00 00 00 00                   dword_3603BC:   .word 0
.text:003603C0 00 00 00 00                   dword_3603C0:   .word 0
.text:003603C4 00 00 00 00                   dword_3603C4:   .word 0
.text:003603C8 00 00 00 00                   dword_3603C8:   .word 0
.text:003603CC 00 00 00 00                   dword_3603CC:   .word 0
.text:003603D0 00 00 00 00                   dword_3603D0:   .word 0
.text:003603D4 00 00 00 00                                   .word 0
.text:003603D8 00 00 00 00                                   .word 0