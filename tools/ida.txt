.text:0035C7E8                                # ===========================================================================
.text:0035C7E8
.text:0035C7E8                                # Segment type: Pure code
.text:0035C7E8                                               .text
.text:0035C7E8
.text:0035C7E8                                # =============== S U B R O U T I N E =======================================
.text:0035C7E8
.text:0035C7E8                                # Attributes: bp-based frame fpd=0x20
.text:0035C7E8
.text:0035C7E8                                # _DWORD __fastcall readString(CRunningScript *, char *, unsigned __int8)
.text:0035C7E8                                               .globl readString(CRunningScript *, char *, unsigned char)
.text:0035C7E8                               readString(CRunningScript *, char *, unsigned char):
.text:0035C7E8
.text:0035C7E8                               var_20          = -0x20
.text:0035C7E8                               var_10          = -0x10
.text:0035C7E8                               var_C           = -0xC
.text:0035C7E8                               var_8           = -8
.text:0035C7E8                               var_s0          =  0
.text:0035C7E8                               var_s8          =  8
.text:0035C7E8
.text:0035C7E8                                # __unwind {
.text:0035C7E8 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035C7EC 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035C7F0 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035C7F4 25 F0 A0 03                                   move    $fp, $sp
.text:0035C7F8 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035C7FC 14 00 C5 AF                                   sw      $a1, 0x20+var_C($fp)
.text:0035C800 25 10 C0 00                                   move    $v0, $a2
.text:0035C804 18 00 C2 A3                                   sb      $v0, 0x20+var_8($fp)
.text:0035C808 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)  # this
.text:0035C80C 9A 7A 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035C810 00 00 00 00                                   nop
.text:0035C814 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035C818 00 00 C2 A3                                   sb      $v0, 0x20+var_20($fp)
.text:0035C81C 00 00 C2 93                                   lbu     $v0, 0x20+var_20($fp)
.text:0035C820 04 00 40 14                                   bnez    $v0, loc_35C834
.text:0035C824 00 00 00 00                                   nop
.text:0035C828 25 10 00 00                                   move    $v0, $zero
.text:0035C82C 59 00 00 10                                   b       loc_35C994
.text:0035C830 00 00 00 00                                   nop
.text:0035C834                                # ---------------------------------------------------------------------------
.text:0035C834
.text:0035C834                               loc_35C834:
.text:0035C834 00 00 C2 93                                   lbu     $v0, 0x20+var_20($fp)
.text:0035C838 2A 00 40 10                                   beqz    $v0, loc_35C8E4
.text:0035C83C 00 00 00 00                                   nop
.text:0035C840 00 00 C2 93                                   lbu     $v0, 0x20+var_20($fp)
.text:0035C844 09 00 42 2C                                   sltiu   $v0, 9
.text:0035C848 26 00 40 10                                   beqz    $v0, loc_35C8E4
.text:0035C84C 00 00 00 00                                   nop
.text:0035C850 01 00 05 24                                   li      $a1, 1
.text:0035C854 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035C858 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035C85C 00 00 00 00                                   nop
.text:0035C860 14 00 C2 8F                                   lw      $v0, 0x20+var_C($fp)
.text:0035C864 1B 00 40 10                                   beqz    $v0, loc_35C8D4
.text:0035C868 00 00 00 00                                   nop
.text:0035C86C 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C870 81 00 42 2C                                   sltiu   $v0, 0x81
.text:0035C874 07 00 40 10                                   beqz    $v0, loc_35C894
.text:0035C878 00 00 00 00                                   nop
.text:0035C87C 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C880 04 00 40 10                                   beqz    $v0, loc_35C894
.text:0035C884 00 00 00 00                                   nop
.text:0035C888 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C88C 02 00 00 10                                   b       loc_35C898
.text:0035C890 00 00 00 00                                   nop
.text:0035C894                                # ---------------------------------------------------------------------------
.text:0035C894
.text:0035C894                               loc_35C894:
.text:0035C894 80 00 02 24                                   li      $v0, 0x80
.text:0035C898
.text:0035C898                               loc_35C898:
.text:0035C898 18 00 C2 A3                                   sb      $v0, 0x20+var_8($fp)
.text:0035C89C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035C8A0 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035C8A4 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C8A8 FF FF 42 24                                   addiu   $v0, -1
.text:0035C8AC 25 30 40 00                                   move    $a2, $v0         # unsigned int
.text:0035C8B0 25 28 60 00                                   move    $a1, $v1         # char *
.text:0035C8B4 14 00 C4 8F                                   lw      $a0, 0x20+var_C($fp)  # char *
.text:0035C8B8 60 47 15 0C                                   jal     strncpy(char *,char const*,uint)
.text:0035C8BC 00 00 00 00                                   nop
.text:0035C8C0 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C8C4 FF FF 42 24                                   addiu   $v0, -1
.text:0035C8C8 14 00 C3 8F                                   lw      $v1, 0x20+var_C($fp)
.text:0035C8CC 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035C8D0 00 00 40 A0                                   sb      $zero, 0($v0)
.text:0035C8D4
.text:0035C8D4                               loc_35C8D4:
.text:0035C8D4 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035C8DC 2D 00 00 10                                   b       loc_35C994
.text:0035C8E0 00 00 00 00                                   nop
.text:0035C8E4                                # ---------------------------------------------------------------------------
.text:0035C8E4
.text:0035C8E4                               loc_35C8E4:
.text:0035C8E4 14 00 C2 8F                                   lw      $v0, 0x20+var_C($fp)
.text:0035C8E8 11 00 40 14                                   bnez    $v0, loc_35C930
.text:0035C8EC 00 00 00 00                                   nop
.text:0035C8F0 80 00 06 24                                   li      $a2, 0x80        # unsigned int
.text:0035C8F4 25 28 00 00                                   move    $a1, $zero       # int
.text:0035C8F8 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035C8FC 60 F5 44 24                                   addiu   $a0, $v0, (readString(CRunningScript *,char *,uchar)::result - 0x360000)  # void *
.text:0035C900 5A 39 15 0C                                   jal     memset(void *,int,uint)
.text:0035C904 00 00 00 00                                   nop
.text:0035C908 80 00 06 24                                   li      $a2, 0x80
.text:0035C90C 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035C910 60 F5 45 24                                   addiu   $a1, $v0, (readString(CRunningScript *,char *,uchar)::result - 0x360000)
.text:0035C914 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035C918 80 DC 07 0C                                   jal     GetScriptStringParam(CRunningScript *,char *,uchar)
.text:0035C91C 00 00 00 00                                   nop
.text:0035C920 36 00 02 3C 60 F5 42 24                       li      $v0, readString(CRunningScript *,char *,uchar)::result
.text:0035C928 1A 00 00 10                                   b       loc_35C994
.text:0035C92C 00 00 00 00                                   nop
.text:0035C930                                # ---------------------------------------------------------------------------
.text:0035C930
.text:0035C930                               loc_35C930:
.text:0035C930 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C934 81 00 42 2C                                   sltiu   $v0, 0x81
.text:0035C938 07 00 40 10                                   beqz    $v0, loc_35C958
.text:0035C93C 00 00 00 00                                   nop
.text:0035C940 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C944 04 00 40 10                                   beqz    $v0, loc_35C958
.text:0035C948 00 00 00 00                                   nop
.text:0035C94C 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C950 02 00 00 10                                   b       loc_35C95C
.text:0035C954 00 00 00 00                                   nop
.text:0035C958                                # ---------------------------------------------------------------------------
.text:0035C958
.text:0035C958                               loc_35C958:
.text:0035C958 80 00 02 24                                   li      $v0, 0x80
.text:0035C95C
.text:0035C95C                               loc_35C95C:
.text:0035C95C 18 00 C2 A3                                   sb      $v0, 0x20+var_8($fp)
.text:0035C960 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C964 25 30 40 00                                   move    $a2, $v0         # unsigned int
.text:0035C968 25 28 00 00                                   move    $a1, $zero       # int
.text:0035C96C 14 00 C4 8F                                   lw      $a0, 0x20+var_C($fp)  # void *
.text:0035C970 5A 39 15 0C                                   jal     memset(void *,int,uint)
.text:0035C974 00 00 00 00                                   nop
.text:0035C978 18 00 C2 93                                   lbu     $v0, 0x20+var_8($fp)
.text:0035C97C 25 30 40 00                                   move    $a2, $v0
.text:0035C980 14 00 C5 8F                                   lw      $a1, 0x20+var_C($fp)
.text:0035C984 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035C988 80 DC 07 0C                                   jal     GetScriptStringParam(CRunningScript *,char *,uchar)
.text:0035C98C 00 00 00 00                                   nop
.text:0035C990 14 00 C2 8F                                   lw      $v0, 0x20+var_C($fp)
.text:0035C994
.text:0035C994                               loc_35C994:
.text:0035C994 25 E8 C0 03                                   move    $sp, $fp
.text:0035C998 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035C99C 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035C9A0 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035C9A4 08 00 E0 03                                   jr      $ra
.text:0035C9A8 00 00 00 00                                   nop
.text:0035C9A8                                # } // starts at 35C7E8
.text:0035C9A8                                # End of function readString(CRunningScript *,char *,uchar)
.text:0035C9A8
.text:0035C9AC
.text:0035C9AC                                # =============== S U B R O U T I N E =======================================
.text:0035C9AC
.text:0035C9AC                                # Attributes: bp-based frame fpd=0x170
.text:0035C9AC
.text:0035C9AC                                # _DWORD __fastcall format(CRunningScript *, char *, unsigned int, const char *)
.text:0035C9AC                                               .globl format(CRunningScript *, char *, unsigned int, char const*)
.text:0035C9AC                               format(CRunningScript *, char *, unsigned int, char const*):
.text:0035C9AC
.text:0035C9AC                               var_170         = -0x170
.text:0035C9AC                               var_16C         = -0x16C
.text:0035C9AC                               var_168         = -0x168
.text:0035C9AC                               var_164         = -0x164
.text:0035C9AC                               var_160         = -0x160
.text:0035C9AC                               var_15C         = -0x15C
.text:0035C9AC                               var_158         = -0x158
.text:0035C9AC                               var_154         = -0x154
.text:0035C9AC                               var_150         = -0x150
.text:0035C9AC                               var_50          = -0x50
.text:0035C9AC                               var_10          = -0x10
.text:0035C9AC                               var_C           = -0xC
.text:0035C9AC                               var_8           = -8
.text:0035C9AC                               var_4           = -4
.text:0035C9AC                               var_s0          =  0
.text:0035C9AC                               var_s8          =  8
.text:0035C9AC
.text:0035C9AC                                # __unwind {
.text:0035C9AC 80 FE BD 27                                   addiu   $sp, -0x180
.text:0035C9B0 78 01 BF FF                                   sd      $ra, 0x170+var_s8($sp)
.text:0035C9B4 70 01 BE FF                                   sd      $fp, 0x170+var_s0($sp)
.text:0035C9B8 25 F0 A0 03                                   move    $fp, $sp
.text:0035C9BC 60 01 C4 AF                                   sw      $a0, 0x170+var_10($fp)
.text:0035C9C0 64 01 C5 AF                                   sw      $a1, 0x170+var_C($fp)
.text:0035C9C4 68 01 C6 AF                                   sw      $a2, 0x170+var_8($fp)
.text:0035C9C8 6C 01 C7 AF                                   sw      $a3, 0x170+var_4($fp)
.text:0035C9CC 00 00 C0 AF                                   sw      $zero, 0x170+var_170($fp)
.text:0035C9D0 6C 01 C2 8F                                   lw      $v0, 0x170+var_4($fp)
.text:0035C9D4 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035C9D8 CF 01 00 10                                   b       loc_35D118
.text:0035C9DC 00 00 00 00                                   nop
.text:0035C9E0                                # ---------------------------------------------------------------------------
.text:0035C9E0
.text:0035C9E0                               loc_35C9E0:
.text:0035C9E0 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035C9E4 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035C9E8 00 00 C3 AF                                   sw      $v1, 0x170+var_170($fp)
.text:0035C9EC 68 01 C3 8F                                   lw      $v1, 0x170+var_8($fp)
.text:0035C9F0 2B 10 43 00                                   sltu    $v0, $v1
.text:0035C9F4 01 00 42 38                                   xori    $v0, 1
.text:0035C9F8 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035C9FC 04 00 40 10                                   beqz    $v0, loc_35CA10
.text:0035CA00 00 00 00 00                                   nop
.text:0035CA04 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035CA08 D4 01 00 10                                   b       loc_35D15C
.text:0035CA0C 00 00 00 00                                   nop
.text:0035CA10                                # ---------------------------------------------------------------------------
.text:0035CA10
.text:0035CA10                               loc_35CA10:
.text:0035CA10 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CA14 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CA18 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CA1C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CA20 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035CA24 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CA28 64 01 C4 AF                                   sw      $a0, 0x170+var_C($fp)
.text:0035CA2C 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CA30
.text:0035CA30                               loc_35CA30:
.text:0035CA30 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CA34 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CA38 06 00 40 10                                   beqz    $v0, loc_35CA54
.text:0035CA3C 00 00 00 00                                   nop
.text:0035CA40 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CA44 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CA48 25 00 02 24                                   li      $v0, 0x25  # '%'
.text:0035CA4C E4 FF 62 14                                   bne     $v1, $v0, loc_35C9E0
.text:0035CA50 00 00 00 00                                   nop
.text:0035CA54
.text:0035CA54                               loc_35CA54:
.text:0035CA54 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CA58 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CA5C 25 00 02 24                                   li      $v0, 0x25  # '%'
.text:0035CA60 AD 01 62 14                                   bne     $v1, $v0, loc_35D118
.text:0035CA64 00 00 00 00                                   nop
.text:0035CA68 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CA6C 01 00 42 24                                   addiu   $v0, 1
.text:0035CA70 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CA74 25 00 02 24                                   li      $v0, 0x25  # '%'
.text:0035CA78 17 00 62 14                                   bne     $v1, $v0, loc_35CAD8
.text:0035CA7C 00 00 00 00                                   nop
.text:0035CA80 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035CA84 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CA88 00 00 C3 AF                                   sw      $v1, 0x170+var_170($fp)
.text:0035CA8C 68 01 C3 8F                                   lw      $v1, 0x170+var_8($fp)
.text:0035CA90 2B 10 43 00                                   sltu    $v0, $v1
.text:0035CA94 01 00 42 38                                   xori    $v0, 1
.text:0035CA98 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CA9C 04 00 40 10                                   beqz    $v0, loc_35CAB0
.text:0035CAA0 00 00 00 00                                   nop
.text:0035CAA4 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035CAA8 AC 01 00 10                                   b       loc_35D15C
.text:0035CAAC 00 00 00 00                                   nop
.text:0035CAB0                                # ---------------------------------------------------------------------------
.text:0035CAB0
.text:0035CAB0                               loc_35CAB0:
.text:0035CAB0 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035CAB4 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CAB8 64 01 C3 AF                                   sw      $v1, 0x170+var_C($fp)
.text:0035CABC 25 00 03 24                                   li      $v1, 0x25  # '%'
.text:0035CAC0 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CAC4 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CAC8 02 00 42 24                                   addiu   $v0, 2
.text:0035CACC 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035CAD0 91 01 00 10                                   b       loc_35D118
.text:0035CAD4 00 00 00 00                                   nop
.text:0035CAD8                                # ---------------------------------------------------------------------------
.text:0035CAD8
.text:0035CAD8                               loc_35CAD8:
.text:0035CAD8 20 01 C2 27                                   addiu   $v0, $fp, 0x170+var_50
.text:0035CADC 08 00 C2 AF                                   sw      $v0, 0x170+var_168($fp)
.text:0035CAE0 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CAE4 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CAE8 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CAEC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CAF0 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CAF4 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CAF8 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CAFC 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CB00 2D 00 00 10                                   b       loc_35CBB8
.text:0035CB04 00 00 00 00                                   nop
.text:0035CB08                                # ---------------------------------------------------------------------------
.text:0035CB08
.text:0035CB08                               loc_35CB08:
.text:0035CB08 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CB0C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CB10 2A 00 02 24                                   li      $v0, 0x2A  # '*'
.text:0035CB14 1F 00 62 14                                   bne     $v1, $v0, loc_35CB94
.text:0035CB18 00 00 00 00                                   nop
.text:0035CB1C 20 00 C2 27                                   addiu   $v0, $fp, 0x170+var_150
.text:0035CB20 0C 00 C2 AF                                   sw      $v0, 0x170+var_164($fp)
.text:0035CB24 01 00 05 24                                   li      $a1, 1
.text:0035CB28 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035CB2C F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035CB30 00 00 00 00                                   nop
.text:0035CB34 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035CB3C 25 30 40 00                                   move    $a2, $v0
.text:0035CB40 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035CB44 A0 F1 45 24                                   addiu   $a1, $v0, (int_fmt - 0x360000)  # char *
.text:0035CB48 0C 00 C4 8F                                   lw      $a0, 0x170+var_164($fp)  # char *
.text:0035CB4C C4 43 15 0C                                   jal     sprintf(char *,char const*,...)
.text:0035CB50 00 00 00 00                                   nop
.text:0035CB54 09 00 00 10                                   b       loc_35CB7C
.text:0035CB58 00 00 00 00                                   nop
.text:0035CB5C                                # ---------------------------------------------------------------------------
.text:0035CB5C
.text:0035CB5C                               loc_35CB5C:
.text:0035CB5C 0C 00 C2 8F                                   lw      $v0, 0x170+var_164($fp)
.text:0035CB60 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CB64 0C 00 C3 AF                                   sw      $v1, 0x170+var_164($fp)
.text:0035CB68 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CB6C 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CB70 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CB74 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CB78 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CB7C
.text:0035CB7C                               loc_35CB7C:
.text:0035CB7C 0C 00 C2 8F                                   lw      $v0, 0x170+var_164($fp)
.text:0035CB80 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CB84 F5 FF 40 14                                   bnez    $v0, loc_35CB5C
.text:0035CB88 00 00 00 00                                   nop
.text:0035CB8C 07 00 00 10                                   b       loc_35CBAC
.text:0035CB90 00 00 00 00                                   nop
.text:0035CB94                                # ---------------------------------------------------------------------------
.text:0035CB94
.text:0035CB94                               loc_35CB94:
.text:0035CB94 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CB98 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CB9C 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CBA0 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CBA4 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CBA8 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CBAC
.text:0035CBAC                               loc_35CBAC:
.text:0035CBAC 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CBB0 01 00 42 24                                   addiu   $v0, 1
.text:0035CBB4 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035CBB8
.text:0035CBB8                               loc_35CBB8:
.text:0035CBB8 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CBBC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CBC0 30 00 02 24                                   li      $v0, 0x30  # '0'
.text:0035CBC4 D0 FF 62 10                                   beq     $v1, $v0, loc_35CB08
.text:0035CBC8 00 00 00 00                                   nop
.text:0035CBCC 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CBD0 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CBD4 2B 00 02 24                                   li      $v0, 0x2B  # '+'
.text:0035CBD8 CB FF 62 10                                   beq     $v1, $v0, loc_35CB08
.text:0035CBDC 00 00 00 00                                   nop
.text:0035CBE0 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CBE4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CBE8 2D 00 02 24                                   li      $v0, 0x2D  # '-'
.text:0035CBEC C6 FF 62 10                                   beq     $v1, $v0, loc_35CB08
.text:0035CBF0 00 00 00 00                                   nop
.text:0035CBF4 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CBF8 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CBFC 20 00 02 24                                   li      $v0, 0x20  # ' '
.text:0035CC00 C1 FF 62 10                                   beq     $v1, $v0, loc_35CB08
.text:0035CC04 00 00 00 00                                   nop
.text:0035CC08 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC0C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC10 2A 00 02 24                                   li      $v0, 0x2A  # '*'
.text:0035CC14 BC FF 62 10                                   beq     $v1, $v0, loc_35CB08
.text:0035CC18 00 00 00 00                                   nop
.text:0035CC1C 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC20 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC24 23 00 02 24                                   li      $v0, 0x23  # '#'
.text:0035CC28 B7 FF 62 10                                   beq     $v1, $v0, loc_35CB08
.text:0035CC2C 00 00 00 00                                   nop
.text:0035CC30 09 00 00 10                                   b       loc_35CC58
.text:0035CC34 00 00 00 00                                   nop
.text:0035CC38                                # ---------------------------------------------------------------------------
.text:0035CC38
.text:0035CC38                               loc_35CC38:
.text:0035CC38 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC3C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CC40 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CC44 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC48 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CC4C 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CC50 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CC54 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CC58
.text:0035CC58                               loc_35CC58:
.text:0035CC58 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC5C 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CC60 D0 FF 42 24                                   addiu   $v0, -0x30
.text:0035CC64 0A 00 42 2C                                   sltiu   $v0, 0xA
.text:0035CC68 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CC6C F2 FF 40 14                                   bnez    $v0, loc_35CC38
.text:0035CC70 00 00 00 00                                   nop
.text:0035CC74 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC78 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC7C 2E 00 02 24                                   li      $v0, 0x2E  # '.'
.text:0035CC80 3B 00 62 14                                   bne     $v1, $v0, loc_35CD70
.text:0035CC84 00 00 00 00                                   nop
.text:0035CC88 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CC8C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CC90 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CC94 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CC98 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CC9C 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CCA0 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CCA4 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CCA8 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CCAC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CCB0 2A 00 02 24                                   li      $v0, 0x2A  # '*'
.text:0035CCB4 27 00 62 14                                   bne     $v1, $v0, loc_35CD54
.text:0035CCB8 00 00 00 00                                   nop
.text:0035CCBC 20 00 C2 27                                   addiu   $v0, $fp, 0x170+var_150
.text:0035CCC0 10 00 C2 AF                                   sw      $v0, 0x170+var_160($fp)
.text:0035CCC4 01 00 05 24                                   li      $a1, 1
.text:0035CCC8 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035CCCC F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035CCD0 00 00 00 00                                   nop
.text:0035CCD4 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035CCDC 25 30 40 00                                   move    $a2, $v0
.text:0035CCE0 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035CCE4 A0 F1 45 24                                   addiu   $a1, $v0, (int_fmt - 0x360000)  # char *
.text:0035CCE8 10 00 C4 8F                                   lw      $a0, 0x170+var_160($fp)  # char *
.text:0035CCEC C4 43 15 0C                                   jal     sprintf(char *,char const*,...)
.text:0035CCF0 00 00 00 00                                   nop
.text:0035CCF4 09 00 00 10                                   b       loc_35CD1C
.text:0035CCF8 00 00 00 00                                   nop
.text:0035CCFC                                # ---------------------------------------------------------------------------
.text:0035CCFC
.text:0035CCFC                               loc_35CCFC:
.text:0035CCFC 10 00 C2 8F                                   lw      $v0, 0x170+var_160($fp)
.text:0035CD00 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CD04 10 00 C3 AF                                   sw      $v1, 0x170+var_160($fp)
.text:0035CD08 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CD0C 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CD10 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CD14 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CD18 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CD1C
.text:0035CD1C                               loc_35CD1C:
.text:0035CD1C 10 00 C2 8F                                   lw      $v0, 0x170+var_160($fp)
.text:0035CD20 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CD24 F5 FF 40 14                                   bnez    $v0, loc_35CCFC
.text:0035CD28 00 00 00 00                                   nop
.text:0035CD2C 10 00 00 10                                   b       loc_35CD70
.text:0035CD30 00 00 00 00                                   nop
.text:0035CD34                                # ---------------------------------------------------------------------------
.text:0035CD34
.text:0035CD34                               loc_35CD34:
.text:0035CD34 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CD38 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CD3C 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CD40 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CD44 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CD48 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CD4C 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CD50 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CD54
.text:0035CD54                               loc_35CD54:
.text:0035CD54 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CD58 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CD5C D0 FF 42 24                                   addiu   $v0, -0x30
.text:0035CD60 0A 00 42 2C                                   sltiu   $v0, 0xA
.text:0035CD64 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CD68 F2 FF 40 14                                   bnez    $v0, loc_35CD34
.text:0035CD6C 00 00 00 00                                   nop
.text:0035CD70
.text:0035CD70                               loc_35CD70:
.text:0035CD70 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CD74 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CD78 68 00 02 24                                   li      $v0, 0x68  # 'h'
.text:0035CD7C 06 00 62 10                                   beq     $v1, $v0, loc_35CD98
.text:0035CD80 00 00 00 00                                   nop
.text:0035CD84 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CD88 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CD8C 6C 00 02 24                                   li      $v0, 0x6C  # 'l'
.text:0035CD90 09 00 62 14                                   bne     $v1, $v0, loc_35CDB8
.text:0035CD94 00 00 00 00                                   nop
.text:0035CD98
.text:0035CD98                               loc_35CD98:
.text:0035CD98 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CD9C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CDA0 04 00 C3 AF                                   sw      $v1, 0x170+var_16C($fp)
.text:0035CDA4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CDA8 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CDAC 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CDB0 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CDB4 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CDB8
.text:0035CDB8                               loc_35CDB8:
.text:0035CDB8 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CDBC 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CDC0 63 00 03 24                                   li      $v1, 0x63  # 'c'
.text:0035CDC4 32 00 43 10                                   beq     $v0, $v1, loc_35CE90
.text:0035CDC8 00 00 00 00                                   nop
.text:0035CDCC 73 00 03 24                                   li      $v1, 0x73  # 's'
.text:0035CDD0 4C 00 43 14                                   bne     $v0, $v1, loc_35CF04
.text:0035CDD4 00 00 00 00                                   nop
.text:0035CDD8 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035CDDC 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035CDE0 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)  # CRunningScript *
.text:0035CDE4 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035CDE8 00 00 00 00                                   nop
.text:0035CDEC 1C 00 C2 AF                                   sw      $v0, 0x170+var_154($fp)
.text:0035CDF0 1C 00 C2 8F                                   lw      $v0, 0x170+var_154($fp)
.text:0035CDF4 04 00 40 10                                   beqz    $v0, loc_35CE08
.text:0035CDF8 00 00 00 00                                   nop
.text:0035CDFC 1C 00 C2 8F                                   lw      $v0, 0x170+var_154($fp)
.text:0035CE00 03 00 00 10                                   b       loc_35CE10
.text:0035CE04 00 00 00 00                                   nop
.text:0035CE08                                # ---------------------------------------------------------------------------
.text:0035CE08
.text:0035CE08                               loc_35CE08:
.text:0035CE08 36 00 02 3C B8 F1 42 24                       li      $v0, none
.text:0035CE10
.text:0035CE10                               loc_35CE10:
.text:0035CE10 14 00 C2 AF                                   sw      $v0, 0x170+var_15C($fp)
.text:0035CE14 15 00 00 10                                   b       loc_35CE6C
.text:0035CE18 00 00 00 00                                   nop
.text:0035CE1C                                # ---------------------------------------------------------------------------
.text:0035CE1C
.text:0035CE1C                               loc_35CE1C:
.text:0035CE1C 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035CE20 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CE24 00 00 C3 AF                                   sw      $v1, 0x170+var_170($fp)
.text:0035CE28 68 01 C3 8F                                   lw      $v1, 0x170+var_8($fp)
.text:0035CE2C 2B 10 43 00                                   sltu    $v0, $v1
.text:0035CE30 01 00 42 38                                   xori    $v0, 1
.text:0035CE34 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CE38 04 00 40 10                                   beqz    $v0, loc_35CE4C
.text:0035CE3C 00 00 00 00                                   nop
.text:0035CE40 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035CE44 C5 00 00 10                                   b       loc_35D15C
.text:0035CE48 00 00 00 00                                   nop
.text:0035CE4C                                # ---------------------------------------------------------------------------
.text:0035CE4C
.text:0035CE4C                               loc_35CE4C:
.text:0035CE4C 14 00 C2 8F                                   lw      $v0, 0x170+var_15C($fp)
.text:0035CE50 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CE54 14 00 C3 AF                                   sw      $v1, 0x170+var_15C($fp)
.text:0035CE58 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CE5C 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035CE60 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CE64 64 01 C4 AF                                   sw      $a0, 0x170+var_C($fp)
.text:0035CE68 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CE6C
.text:0035CE6C                               loc_35CE6C:
.text:0035CE6C 14 00 C2 8F                                   lw      $v0, 0x170+var_15C($fp)
.text:0035CE70 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035CE74 E9 FF 40 14                                   bnez    $v0, loc_35CE1C
.text:0035CE78 00 00 00 00                                   nop
.text:0035CE7C 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CE80 01 00 42 24                                   addiu   $v0, 1
.text:0035CE84 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035CE88 A3 00 00 10                                   b       loc_35D118
.text:0035CE8C 00 00 00 00                                   nop
.text:0035CE90                                # ---------------------------------------------------------------------------
.text:0035CE90
.text:0035CE90                               loc_35CE90:
.text:0035CE90 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035CE94 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035CE98 00 00 C3 AF                                   sw      $v1, 0x170+var_170($fp)
.text:0035CE9C 68 01 C3 8F                                   lw      $v1, 0x170+var_8($fp)
.text:0035CEA0 2B 10 43 00                                   sltu    $v0, $v1
.text:0035CEA4 01 00 42 38                                   xori    $v0, 1
.text:0035CEA8 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035CEAC 04 00 40 10                                   beqz    $v0, loc_35CEC0
.text:0035CEB0 00 00 00 00                                   nop
.text:0035CEB4 FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035CEB8 A8 00 00 10                                   b       loc_35D15C
.text:0035CEBC 00 00 00 00                                   nop
.text:0035CEC0                                # ---------------------------------------------------------------------------
.text:0035CEC0
.text:0035CEC0                               loc_35CEC0:
.text:0035CEC0 01 00 05 24                                   li      $a1, 1
.text:0035CEC4 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035CEC8 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035CECC 00 00 00 00                                   nop
.text:0035CED0 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035CED8 00 1E 02 00                                   sll     $v1, $v0, 24
.text:0035CEDC 03 1E 03 00                                   sra     $v1, 24
.text:0035CEE0 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035CEE4 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CEE8 64 01 C4 AF                                   sw      $a0, 0x170+var_C($fp)
.text:0035CEEC 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CEF0 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CEF4 01 00 42 24                                   addiu   $v0, 1
.text:0035CEF8 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035CEFC 86 00 00 10                                   b       loc_35D118
.text:0035CF00 00 00 00 00                                   nop
.text:0035CF04                                # ---------------------------------------------------------------------------
.text:0035CF04
.text:0035CF04                               loc_35CF04:
.text:0035CF04 20 00 C2 27                                   addiu   $v0, $fp, 0x170+var_150
.text:0035CF08 18 00 C2 AF                                   sw      $v0, 0x170+var_158($fp)
.text:0035CF0C 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CF10 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CF14 70 00 02 24                                   li      $v0, 0x70  # 'p'
.text:0035CF18 06 00 62 10                                   beq     $v1, $v0, loc_35CF34
.text:0035CF1C 00 00 00 00                                   nop
.text:0035CF20 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CF24 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CF28 50 00 02 24                                   li      $v0, 0x50  # 'P'
.text:0035CF2C 0F 00 62 14                                   bne     $v1, $v0, loc_35CF6C
.text:0035CF30 00 00 00 00                                   nop
.text:0035CF34
.text:0035CF34                               loc_35CF34:
.text:0035CF34 01 00 05 24                                   li      $a1, 1
.text:0035CF38 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035CF3C F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035CF40 00 00 00 00                                   nop
.text:0035CF44 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035CF4C 25 30 40 00                                   move    $a2, $v0
.text:0035CF50 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035CF54 A8 F1 45 24                                   addiu   $a1, $v0, (ptrstr - 0x360000)
.text:0035CF58 18 00 C4 8F                                   lw      $a0, 0x170+var_158($fp)  # char *
.text:0035CF5C C4 43 15 0C                                   jal     sprintf(char *,char const*,...)
.text:0035CF60 00 00 00 00                                   nop
.text:0035CF64 4E 00 00 10                                   b       loc_35D0A0
.text:0035CF68 00 00 00 00                                   nop
.text:0035CF6C                                # ---------------------------------------------------------------------------
.text:0035CF6C
.text:0035CF6C                               loc_35CF6C:
.text:0035CF6C 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CF70 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CF74 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CF78 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035CF7C 08 00 C4 AF                                   sw      $a0, 0x170+var_168($fp)
.text:0035CF80 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035CF84 08 00 C2 8F                                   lw      $v0, 0x170+var_168($fp)
.text:0035CF88 00 00 40 A0                                   sb      $zero, 0($v0)
.text:0035CF8C 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CF90 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CF94 61 00 02 24                                   li      $v0, 0x61  # 'a'
.text:0035CF98 24 00 62 10                                   beq     $v1, $v0, loc_35D02C
.text:0035CF9C 00 00 00 00                                   nop
.text:0035CFA0 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CFA4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFA8 41 00 02 24                                   li      $v0, 0x41  # 'A'
.text:0035CFAC 1F 00 62 10                                   beq     $v1, $v0, loc_35D02C
.text:0035CFB0 00 00 00 00                                   nop
.text:0035CFB4 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CFB8 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFBC 65 00 02 24                                   li      $v0, 0x65  # 'e'
.text:0035CFC0 1A 00 62 10                                   beq     $v1, $v0, loc_35D02C
.text:0035CFC4 00 00 00 00                                   nop
.text:0035CFC8 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CFCC 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFD0 45 00 02 24                                   li      $v0, 0x45  # 'E'
.text:0035CFD4 15 00 62 10                                   beq     $v1, $v0, loc_35D02C
.text:0035CFD8 00 00 00 00                                   nop
.text:0035CFDC 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CFE0 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFE4 66 00 02 24                                   li      $v0, 0x66  # 'f'
.text:0035CFE8 10 00 62 10                                   beq     $v1, $v0, loc_35D02C
.text:0035CFEC 00 00 00 00                                   nop
.text:0035CFF0 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035CFF4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035CFF8 46 00 02 24                                   li      $v0, 0x46  # 'F'
.text:0035CFFC 0B 00 62 10                                   beq     $v1, $v0, loc_35D02C
.text:0035D000 00 00 00 00                                   nop
.text:0035D004 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035D008 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D00C 67 00 02 24                                   li      $v0, 0x67  # 'g'
.text:0035D010 06 00 62 10                                   beq     $v1, $v0, loc_35D02C
.text:0035D014 00 00 00 00                                   nop
.text:0035D018 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035D01C 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D020 47 00 02 24                                   li      $v0, 0x47  # 'G'
.text:0035D024 12 00 62 14                                   bne     $v1, $v0, loc_35D070
.text:0035D028 00 00 00 00                                   nop
.text:0035D02C
.text:0035D02C                               loc_35D02C:
.text:0035D02C 01 00 05 24                                   li      $a1, 1
.text:0035D030 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035D034 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D038 00 00 00 00                                   nop
.text:0035D03C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D040 B0 DF 40 C4                                   lwc1    $f0, opcodeParams
.text:0035D044 06 03 00 46                                   mov.s   $f12, $f0        # float
.text:0035D048 50 C4 14 0C                                   jal     __extendsfdf2(float)
.text:0035D04C 00 00 00 00                                   nop
.text:0035D050 25 30 40 00                                   move    $a2, $v0
.text:0035D054 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035D058 B0 F1 45 24                                   addiu   $a1, $v0, (fltstr - 0x360000)  # char *
.text:0035D05C 18 00 C4 8F                                   lw      $a0, 0x170+var_158($fp)  # char *
.text:0035D060 C4 43 15 0C                                   jal     sprintf(char *,char const*,...)
.text:0035D064 00 00 00 00                                   nop
.text:0035D068 0D 00 00 10                                   b       loc_35D0A0
.text:0035D06C 00 00 00 00                                   nop
.text:0035D070                                # ---------------------------------------------------------------------------
.text:0035D070
.text:0035D070                               loc_35D070:
.text:0035D070 01 00 05 24                                   li      $a1, 1
.text:0035D074 60 01 C4 8F                                   lw      $a0, 0x170+var_10($fp)
.text:0035D078 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D07C 00 00 00 00                                   nop
.text:0035D080 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035D088 20 01 C3 27                                   addiu   $v1, $fp, 0x170+var_50
.text:0035D08C 25 30 40 00                                   move    $a2, $v0
.text:0035D090 25 28 60 00                                   move    $a1, $v1         # char *
.text:0035D094 18 00 C4 8F                                   lw      $a0, 0x170+var_158($fp)  # char *
.text:0035D098 C4 43 15 0C                                   jal     sprintf(char *,char const*,...)
.text:0035D09C 00 00 00 00                                   nop
.text:0035D0A0
.text:0035D0A0                               loc_35D0A0:
.text:0035D0A0 15 00 00 10                                   b       loc_35D0F8
.text:0035D0A4 00 00 00 00                                   nop
.text:0035D0A8                                # ---------------------------------------------------------------------------
.text:0035D0A8
.text:0035D0A8                               loc_35D0A8:
.text:0035D0A8 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035D0AC 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D0B0 00 00 C3 AF                                   sw      $v1, 0x170+var_170($fp)
.text:0035D0B4 68 01 C3 8F                                   lw      $v1, 0x170+var_8($fp)
.text:0035D0B8 2B 10 43 00                                   sltu    $v0, $v1
.text:0035D0BC 01 00 42 38                                   xori    $v0, 1
.text:0035D0C0 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035D0C4 04 00 40 10                                   beqz    $v0, loc_35D0D8
.text:0035D0C8 00 00 00 00                                   nop
.text:0035D0CC FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035D0D0 22 00 00 10                                   b       loc_35D15C
.text:0035D0D4 00 00 00 00                                   nop
.text:0035D0D8                                # ---------------------------------------------------------------------------
.text:0035D0D8
.text:0035D0D8                               loc_35D0D8:
.text:0035D0D8 18 00 C2 8F                                   lw      $v0, 0x170+var_158($fp)
.text:0035D0DC 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D0E0 18 00 C3 AF                                   sw      $v1, 0x170+var_158($fp)
.text:0035D0E4 00 00 43 80                                   lb      $v1, 0($v0)
.text:0035D0E8 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035D0EC 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035D0F0 64 01 C4 AF                                   sw      $a0, 0x170+var_C($fp)
.text:0035D0F4 00 00 43 A0                                   sb      $v1, 0($v0)
.text:0035D0F8
.text:0035D0F8                               loc_35D0F8:
.text:0035D0F8 18 00 C2 8F                                   lw      $v0, 0x170+var_158($fp)
.text:0035D0FC 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035D100 E9 FF 40 14                                   bnez    $v0, loc_35D0A8
.text:0035D104 00 00 00 00                                   nop
.text:0035D108 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035D10C 01 00 42 24                                   addiu   $v0, 1
.text:0035D110 04 00 C2 AF                                   sw      $v0, 0x170+var_16C($fp)
.text:0035D114 00 00 00 00                                   nop
.text:0035D118
.text:0035D118                               loc_35D118:
.text:0035D118 04 00 C2 8F                                   lw      $v0, 0x170+var_16C($fp)
.text:0035D11C 00 00 42 80                                   lb      $v0, 0($v0)
.text:0035D120 43 FE 40 14                                   bnez    $v0, loc_35CA30
.text:0035D124 00 00 00 00                                   nop
.text:0035D128 00 00 C3 8F                                   lw      $v1, 0x170+var_170($fp)
.text:0035D12C 68 01 C2 8F                                   lw      $v0, 0x170+var_8($fp)
.text:0035D130 2B 10 62 00                                   sltu    $v0, $v1, $v0
.text:0035D134 04 00 40 14                                   bnez    $v0, loc_35D148
.text:0035D138 00 00 00 00                                   nop
.text:0035D13C FF FF 02 24                                   li      $v0, 0xFFFFFFFF
.text:0035D140 06 00 00 10                                   b       loc_35D15C
.text:0035D144 00 00 00 00                                   nop
.text:0035D148                                # ---------------------------------------------------------------------------
.text:0035D148
.text:0035D148                               loc_35D148:
.text:0035D148 64 01 C2 8F                                   lw      $v0, 0x170+var_C($fp)
.text:0035D14C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035D150 64 01 C3 AF                                   sw      $v1, 0x170+var_C($fp)
.text:0035D154 00 00 40 A0                                   sb      $zero, 0($v0)
.text:0035D158 00 00 C2 8F                                   lw      $v0, 0x170+var_170($fp)
.text:0035D15C
.text:0035D15C                               loc_35D15C:
.text:0035D15C 25 E8 C0 03                                   move    $sp, $fp
.text:0035D160 78 01 BF DF                                   ld      $ra, 0x170+var_s8($sp)
.text:0035D164 70 01 BE DF                                   ld      $fp, 0x170+var_s0($sp)
.text:0035D168 80 01 BD 27                                   addiu   $sp, 0x180
.text:0035D16C 08 00 E0 03                                   jr      $ra
.text:0035D170 00 00 00 00                                   nop
.text:0035D170                                # } // starts at 35C9AC
.text:0035D170                                # End of function format(CRunningScript *,char *,uint,char const*)
.text:0035D170
.text:0035D174
.text:0035D174                                # =============== S U B R O U T I N E =======================================
.text:0035D174
.text:0035D174                                # Attributes: bp-based frame fpd=0x10
.text:0035D174
.text:0035D174                                               .globl customOpcodeHandler(CRunningScript *, unsigned short)
.text:0035D174                               customOpcodeHandler(CRunningScript *, unsigned short):
.text:0035D174
.text:0035D174                               var_10          = -0x10
.text:0035D174                               var_C           = -0xC
.text:0035D174                               var_s0          =  0
.text:0035D174                               var_s8          =  8
.text:0035D174
.text:0035D174                                # __unwind {
.text:0035D174 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D178 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D17C 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D180 25 F0 A0 03                                   move    $fp, $sp
.text:0035D184 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D188 25 10 A0 00                                   move    $v0, $a1
.text:0035D18C 04 00 C2 A7                                   sh      $v0, 0x10+var_C($fp)
.text:0035D190 04 00 C2 97                                   lhu     $v0, 0x10+var_C($fp)
.text:0035D194 74 F5 43 24                                   addiu   $v1, $v0, -0xA8C
.text:0035D198 36 00 02 3C                                   lui     $v0, 0x36  # '6'
.text:0035D19C 80 18 03 00                                   sll     $v1, 2
.text:0035D1A0 D0 F3 42 24                                   li      $v0, _fdata
.text:0035D1A4 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035D1A8 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035D1AC 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D1B0 09 F8 40 00                                   jalr    $v0
.text:0035D1B4 00 00 00 00                                   nop
.text:0035D1B8 25 E8 C0 03                                   move    $sp, $fp
.text:0035D1BC 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D1C0 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D1C4 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D1C8 08 00 E0 03                                   jr      $ra
.text:0035D1CC 00 00 00 00                                   nop
.text:0035D1CC                                # } // starts at 35D174
.text:0035D1CC                                # End of function customOpcodeHandler(CRunningScript *,ushort)
.text:0035D1CC
.text:0035D1D0
.text:0035D1D0                                # =============== S U B R O U T I N E =======================================
.text:0035D1D0
.text:0035D1D0                                # Attributes: bp-based frame fpd=0x18
.text:0035D1D0
.text:0035D1D0                                               .globl opcode_defa(CRunningScript *)
.text:0035D1D0                               opcode_defa(CRunningScript *):
.text:0035D1D0
.text:0035D1D0                               var_18          = -0x18
.text:0035D1D0                               var_s0          =  0
.text:0035D1D0
.text:0035D1D0                                # __unwind {
.text:0035D1D0 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D1D4 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035D1D8 25 F0 A0 03                                   move    $fp, $sp
.text:0035D1DC 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035D1E0 25 10 00 00                                   move    $v0, $zero
.text:0035D1E4 25 E8 C0 03                                   move    $sp, $fp
.text:0035D1E8 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035D1EC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D1F0 08 00 E0 03                                   jr      $ra
.text:0035D1F4 00 00 00 00                                   nop
.text:0035D1F4                                # } // starts at 35D1D0
.text:0035D1F4                                # End of function opcode_defa(CRunningScript *)
.text:0035D1F4
.text:0035D1F8
.text:0035D1F8                                # =============== S U B R O U T I N E =======================================
.text:0035D1F8
.text:0035D1F8                                # Attributes: bp-based frame fpd=0x20
.text:0035D1F8
.text:0035D1F8                                               .globl opcode_0A8C(CRunningScript *)
.text:0035D1F8                               opcode_0A8C(CRunningScript *):
.text:0035D1F8
.text:0035D1F8                               var_20          = -0x20
.text:0035D1F8                               var_1C          = -0x1C
.text:0035D1F8                               var_10          = -0x10
.text:0035D1F8                               var_s0          =  0
.text:0035D1F8                               var_s8          =  8
.text:0035D1F8
.text:0035D1F8                                # __unwind {
.text:0035D1F8 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D1FC 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035D200 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035D204 25 F0 A0 03                                   move    $fp, $sp
.text:0035D208 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035D20C 03 00 05 24                                   li      $a1, 3
.text:0035D210 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035D214 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D218 00 00 00 00                                   nop
.text:0035D21C 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035D224 00 00 C2 AF                                   sw      $v0, 0x20+var_20($fp)
.text:0035D228 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D230 04 00 42 8C                                   lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
.text:0035D234 04 00 C2 AF                                   sw      $v0, 0x20+var_1C($fp)
.text:0035D238 04 00 C3 8F                                   lw      $v1, 0x20+var_1C($fp)
.text:0035D23C 02 00 02 24                                   li      $v0, 2
.text:0035D240 0D 00 62 10                                   beq     $v1, $v0, loc_35D278
.text:0035D244 00 00 00 00                                   nop
.text:0035D248 04 00 C3 8F                                   lw      $v1, 0x20+var_1C($fp)
.text:0035D24C 04 00 02 24                                   li      $v0, 4
.text:0035D250 11 00 62 10                                   beq     $v1, $v0, loc_35D298
.text:0035D254 00 00 00 00                                   nop
.text:0035D258 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D260 08 00 42 90                                   lbu     $v0, (dword_6FDFB8 - 0x6FDFB0)($v0)
.text:0035D264 25 18 40 00                                   move    $v1, $v0
.text:0035D268 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D26C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D270 0F 00 00 10                                   b       loc_35D2B0
.text:0035D274 00 00 00 00                                   nop
.text:0035D278                                # ---------------------------------------------------------------------------
.text:0035D278
.text:0035D278                               loc_35D278:
.text:0035D278 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D280 08 00 42 84                                   lh      $v0, (dword_6FDFB8 - 0x6FDFB0)($v0)
.text:0035D284 25 18 40 00                                   move    $v1, $v0
.text:0035D288 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D28C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D290 07 00 00 10                                   b       loc_35D2B0
.text:0035D294 00 00 00 00                                   nop
.text:0035D298                                # ---------------------------------------------------------------------------
.text:0035D298
.text:0035D298                               loc_35D298:
.text:0035D298 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D2A0 08 00 43 8C                                   lw      $v1, (dword_6FDFB8 - 0x6FDFB0)($v0)
.text:0035D2A4 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D2A8 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035D2AC 00 00 00 00                                   nop
.text:0035D2B0
.text:0035D2B0                               loc_35D2B0:
.text:0035D2B0 25 10 00 00                                   move    $v0, $zero
.text:0035D2B4 25 E8 C0 03                                   move    $sp, $fp
.text:0035D2B8 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035D2BC 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035D2C0 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D2C4 08 00 E0 03                                   jr      $ra
.text:0035D2C8 00 00 00 00                                   nop
.text:0035D2C8                                # } // starts at 35D1F8
.text:0035D2C8                                # End of function opcode_0A8C(CRunningScript *)
.text:0035D2C8
.text:0035D2CC
.text:0035D2CC                                # =============== S U B R O U T I N E =======================================
.text:0035D2CC
.text:0035D2CC                                # Attributes: bp-based frame fpd=0x20
.text:0035D2CC
.text:0035D2CC                                # _DWORD __fastcall opcode_0A8D(CRunningScript *)
.text:0035D2CC                                               .globl opcode_0A8D(CRunningScript *)
.text:0035D2CC                               opcode_0A8D(CRunningScript *):
.text:0035D2CC
.text:0035D2CC                               var_20          = -0x20
.text:0035D2CC                               var_1C          = -0x1C
.text:0035D2CC                               var_10          = -0x10
.text:0035D2CC                               var_s0          =  0
.text:0035D2CC                               var_s8          =  8
.text:0035D2CC
.text:0035D2CC                                # __unwind {
.text:0035D2CC D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D2D0 28 00 BF FF                                   sd      $ra, 0x20+var_s8($sp)
.text:0035D2D4 20 00 BE FF                                   sd      $fp, 0x20+var_s0($sp)
.text:0035D2D8 25 F0 A0 03                                   move    $fp, $sp
.text:0035D2DC 10 00 C4 AF                                   sw      $a0, 0x20+var_10($fp)
.text:0035D2E0 25 28 C0 03                                   move    $a1, $fp
.text:0035D2E4 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035D2E8 D2 7B 0D 0C                                   jal     operator>><ulong>(CRunningScript &,ulong *&)
.text:0035D2EC 00 00 00 00                                   nop
.text:0035D2F0 04 00 C3 27                                   addiu   $v1, $fp, 0x20+var_1C
.text:0035D2F4 25 28 60 00                                   move    $a1, $v1
.text:0035D2F8 25 20 40 00                                   move    $a0, $v0
.text:0035D2FC 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D300 00 00 00 00                                   nop
.text:0035D304 04 00 C2 8F                                   lw      $v0, 0x20+var_1C($fp)
.text:0035D308 02 00 03 24                                   li      $v1, 2
.text:0035D30C 0A 00 43 10                                   beq     $v0, $v1, loc_35D338
.text:0035D310 00 00 00 00                                   nop
.text:0035D314 04 00 03 24                                   li      $v1, 4
.text:0035D318 0F 00 43 10                                   beq     $v0, $v1, loc_35D358
.text:0035D31C 00 00 00 00                                   nop
.text:0035D320 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D324 00 00 43 90                                   lbu     $v1, 0($v0)
.text:0035D328 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D32C B0 DF 43 A0                                   sb      $v1, opcodeParams
.text:0035D330 0E 00 00 10                                   b       loc_35D36C
.text:0035D334 00 00 00 00                                   nop
.text:0035D338                                # ---------------------------------------------------------------------------
.text:0035D338
.text:0035D338                               loc_35D338:
.text:0035D338 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D33C 00 00 42 94                                   lhu     $v0, 0($v0)
.text:0035D340 00 1C 02 00                                   sll     $v1, $v0, 16
.text:0035D344 03 1C 03 00                                   sra     $v1, 16
.text:0035D348 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D34C B0 DF 43 A4                                   sh      $v1, opcodeParams
.text:0035D350 06 00 00 10                                   b       loc_35D36C
.text:0035D354 00 00 00 00                                   nop
.text:0035D358                                # ---------------------------------------------------------------------------
.text:0035D358
.text:0035D358                               loc_35D358:
.text:0035D358 00 00 C2 8F                                   lw      $v0, 0x20+var_20($fp)
.text:0035D35C 00 00 43 8C                                   lw      $v1, 0($v0)
.text:0035D360 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D364 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D368 00 00 00 00                                   nop
.text:0035D36C
.text:0035D36C                               loc_35D36C:
.text:0035D36C 01 00 05 24                                   li      $a1, 1
.text:0035D370 10 00 C4 8F                                   lw      $a0, 0x20+var_10($fp)
.text:0035D374 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D378 00 00 00 00                                   nop
.text:0035D37C 25 10 00 00                                   move    $v0, $zero
.text:0035D380 25 E8 C0 03                                   move    $sp, $fp
.text:0035D384 28 00 BF DF                                   ld      $ra, 0x20+var_s8($sp)
.text:0035D388 20 00 BE DF                                   ld      $fp, 0x20+var_s0($sp)
.text:0035D38C 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D390 08 00 E0 03                                   jr      $ra
.text:0035D394 00 00 00 00                                   nop
.text:0035D394                                # } // starts at 35D2CC
.text:0035D394                                # End of function opcode_0A8D(CRunningScript *)
.text:0035D394
.text:0035D398
.text:0035D398                                # =============== S U B R O U T I N E =======================================
.text:0035D398
.text:0035D398                                # Attributes: bp-based frame fpd=0x10
.text:0035D398
.text:0035D398                                               .globl opcode_0A8E(CRunningScript *)
.text:0035D398                               opcode_0A8E(CRunningScript *):
.text:0035D398
.text:0035D398                               var_10          = -0x10
.text:0035D398                               var_s0          =  0
.text:0035D398                               var_s8          =  8
.text:0035D398
.text:0035D398                                # __unwind {
.text:0035D398 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D39C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D3A0 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D3A4 25 F0 A0 03                                   move    $fp, $sp
.text:0035D3A8 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D3AC 02 00 05 24                                   li      $a1, 2
.text:0035D3B0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D3B4 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D3B8 00 00 00 00                                   nop
.text:0035D3BC 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D3C0 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035D3C4 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D3CC 04 00 42 8C                                   lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
.text:0035D3D0 21 18 62 00                                   addu    $v1, $v0
.text:0035D3D4 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D3D8 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D3DC 01 00 05 24                                   li      $a1, 1
.text:0035D3E0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D3E4 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D3E8 00 00 00 00                                   nop
.text:0035D3EC 25 10 00 00                                   move    $v0, $zero
.text:0035D3F0 25 E8 C0 03                                   move    $sp, $fp
.text:0035D3F4 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D3F8 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D3FC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D400 08 00 E0 03                                   jr      $ra
.text:0035D404 00 00 00 00                                   nop
.text:0035D404                                # } // starts at 35D398
.text:0035D404                                # End of function opcode_0A8E(CRunningScript *)
.text:0035D404
.text:0035D408
.text:0035D408                                # =============== S U B R O U T I N E =======================================
.text:0035D408
.text:0035D408                                # Attributes: bp-based frame fpd=0x10
.text:0035D408
.text:0035D408                                               .globl opcode_0A8F(CRunningScript *)
.text:0035D408                               opcode_0A8F(CRunningScript *):
.text:0035D408
.text:0035D408                               var_10          = -0x10
.text:0035D408                               var_s0          =  0
.text:0035D408                               var_s8          =  8
.text:0035D408
.text:0035D408                                # __unwind {
.text:0035D408 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D40C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D410 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D414 25 F0 A0 03                                   move    $fp, $sp
.text:0035D418 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D41C 02 00 05 24                                   li      $a1, 2
.text:0035D420 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D424 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D428 00 00 00 00                                   nop
.text:0035D42C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D430 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035D434 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D43C 04 00 42 8C                                   lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
.text:0035D440 23 18 62 00                                   subu    $v1, $v0
.text:0035D444 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D448 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D44C 01 00 05 24                                   li      $a1, 1
.text:0035D450 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D454 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D458 00 00 00 00                                   nop
.text:0035D45C 25 10 00 00                                   move    $v0, $zero
.text:0035D460 25 E8 C0 03                                   move    $sp, $fp
.text:0035D464 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D468 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D46C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D470 08 00 E0 03                                   jr      $ra
.text:0035D474 00 00 00 00                                   nop
.text:0035D474                                # } // starts at 35D408
.text:0035D474                                # End of function opcode_0A8F(CRunningScript *)
.text:0035D474
.text:0035D478
.text:0035D478                                # =============== S U B R O U T I N E =======================================
.text:0035D478
.text:0035D478                                # Attributes: bp-based frame fpd=0x10
.text:0035D478
.text:0035D478                                               .globl opcode_0A90(CRunningScript *)
.text:0035D478                               opcode_0A90(CRunningScript *):
.text:0035D478
.text:0035D478                               var_10          = -0x10
.text:0035D478                               var_s0          =  0
.text:0035D478                               var_s8          =  8
.text:0035D478
.text:0035D478                                # __unwind {
.text:0035D478 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D47C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D480 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D484 25 F0 A0 03                                   move    $fp, $sp
.text:0035D488 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D48C 02 00 05 24                                   li      $a1, 2
.text:0035D490 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D494 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D498 00 00 00 00                                   nop
.text:0035D49C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D4A0 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035D4A4 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D4AC 04 00 42 8C                                   lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
.text:0035D4B0 18 18 62 00                                   mult    $v1, $v0
.text:0035D4B4 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D4B8 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D4BC 01 00 05 24                                   li      $a1, 1
.text:0035D4C0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D4C4 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D4C8 00 00 00 00                                   nop
.text:0035D4CC 25 10 00 00                                   move    $v0, $zero
.text:0035D4D0 25 E8 C0 03                                   move    $sp, $fp
.text:0035D4D4 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D4D8 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D4DC 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D4E0 08 00 E0 03                                   jr      $ra
.text:0035D4E4 00 00 00 00                                   nop
.text:0035D4E4                                # } // starts at 35D478
.text:0035D4E4                                # End of function opcode_0A90(CRunningScript *)
.text:0035D4E4
.text:0035D4E8
.text:0035D4E8                                # =============== S U B R O U T I N E =======================================
.text:0035D4E8
.text:0035D4E8                                # Attributes: bp-based frame fpd=0x10
.text:0035D4E8
.text:0035D4E8                                               .globl opcode_0A91(CRunningScript *)
.text:0035D4E8                               opcode_0A91(CRunningScript *):
.text:0035D4E8
.text:0035D4E8                               var_10          = -0x10
.text:0035D4E8                               var_s0          =  0
.text:0035D4E8                               var_s8          =  8
.text:0035D4E8
.text:0035D4E8                                # __unwind {
.text:0035D4E8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D4EC 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D4F0 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D4F4 25 F0 A0 03                                   move    $fp, $sp
.text:0035D4F8 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D4FC 02 00 05 24                                   li      $a1, 2
.text:0035D500 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D504 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035D508 00 00 00 00                                   nop
.text:0035D50C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D510 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035D514 70 00 02 3C B0 DF 42 24                       li      $v0, opcodeParams
.text:0035D51C 04 00 42 8C                                   lw      $v0, (dword_6FDFB4 - 0x6FDFB0)($v0)
.text:0035D520 1A 00 62 00                                   div     $v1, $v0
.text:0035D524 F4 01 40 00                                   teq     $v0, $zero  #7
.text:0035D528 10 10 00 00                                   mfhi    $v0
.text:0035D52C 12 18 00 00                                   mflo    $v1
.text:0035D530 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D534 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D538 01 00 05 24                                   li      $a1, 1
.text:0035D53C 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D540 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D544 00 00 00 00                                   nop
.text:0035D548 25 10 00 00                                   move    $v0, $zero
.text:0035D54C 25 E8 C0 03                                   move    $sp, $fp
.text:0035D550 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D554 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D558 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D55C 08 00 E0 03                                   jr      $ra
.text:0035D560 00 00 00 00                                   nop
.text:0035D560                                # } // starts at 35D4E8
.text:0035D560                                # End of function opcode_0A91(CRunningScript *)
.text:0035D560
.text:0035D564
.text:0035D564                                # =============== S U B R O U T I N E =======================================
.text:0035D564
.text:0035D564                                # Attributes: bp-based frame fpd=0x28
.text:0035D564
.text:0035D564                                # _DWORD __fastcall opcode_0A96(CRunningScript *)
.text:0035D564                                               .globl opcode_0A96(CRunningScript *)
.text:0035D564                               opcode_0A96(CRunningScript *):
.text:0035D564
.text:0035D564                               var_28          = -0x28
.text:0035D564                               var_18          = -0x18
.text:0035D564                               var_s0          =  0
.text:0035D564                               var_s8          =  8
.text:0035D564                               var_s10         =  0x10
.text:0035D564
.text:0035D564                                # __unwind {
.text:0035D564 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035D568 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035D56C 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035D570 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035D574 25 F0 A0 03                                   move    $fp, $sp
.text:0035D578 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035D57C 25 28 C0 03                                   move    $a1, $fp
.text:0035D580 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035D584 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D588 00 00 00 00                                   nop
.text:0035D58C 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035D590 67 00 02 3C 18 B9 42 8C                       lw      $v0, pedPool
.text:0035D598 00 00 C3 8F                                   lw      $v1, 0x28+var_28($fp)
.text:0035D59C 25 28 60 00                                   move    $a1, $v1         # int
.text:0035D5A0 25 20 40 00                                   move    $a0, $v0         # unsigned int *
.text:0035D5A4 EC FE 07 0C                                   jal     GetPedStruct(ulong *,int)
.text:0035D5A8 00 00 00 00                                   nop
.text:0035D5AC 25 28 40 00                                   move    $a1, $v0
.text:0035D5B0 25 20 00 02                                   move    $a0, $s0
.text:0035D5B4 7F 7B 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035D5B8 00 00 00 00                                   nop
.text:0035D5BC 25 10 00 00                                   move    $v0, $zero
.text:0035D5C0 25 E8 C0 03                                   move    $sp, $fp
.text:0035D5C4 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035D5C8 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035D5CC 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035D5D0 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035D5D4 08 00 E0 03                                   jr      $ra
.text:0035D5D8 00 00 00 00                                   nop
.text:0035D5D8                                # } // starts at 35D564
.text:0035D5D8                                # End of function opcode_0A96(CRunningScript *)
.text:0035D5D8
.text:0035D5DC
.text:0035D5DC                                # =============== S U B R O U T I N E =======================================
.text:0035D5DC
.text:0035D5DC                                # Attributes: bp-based frame fpd=0x28
.text:0035D5DC
.text:0035D5DC                                # _DWORD __fastcall opcode_0A97(CRunningScript *)
.text:0035D5DC                                               .globl opcode_0A97(CRunningScript *)
.text:0035D5DC                               opcode_0A97(CRunningScript *):
.text:0035D5DC
.text:0035D5DC                               var_28          = -0x28
.text:0035D5DC                               var_18          = -0x18
.text:0035D5DC                               var_s0          =  0
.text:0035D5DC                               var_s8          =  8
.text:0035D5DC                               var_s10         =  0x10
.text:0035D5DC
.text:0035D5DC                                # __unwind {
.text:0035D5DC C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035D5E0 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035D5E4 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035D5E8 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035D5EC 25 F0 A0 03                                   move    $fp, $sp
.text:0035D5F0 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035D5F4 25 28 C0 03                                   move    $a1, $fp
.text:0035D5F8 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035D5FC 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D600 00 00 00 00                                   nop
.text:0035D604 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035D608 67 00 02 3C 1C B9 42 8C                       lw      $v0, vehPool
.text:0035D610 00 00 C3 8F                                   lw      $v1, 0x28+var_28($fp)
.text:0035D614 25 28 60 00                                   move    $a1, $v1         # int
.text:0035D618 25 20 40 00                                   move    $a0, $v0         # unsigned int *
.text:0035D61C DC FE 07 0C                                   jal     GetVehStruct(ulong *,int)
.text:0035D620 00 00 00 00                                   nop
.text:0035D624 25 28 40 00                                   move    $a1, $v0
.text:0035D628 25 20 00 02                                   move    $a0, $s0
.text:0035D62C 7F 7B 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035D630 00 00 00 00                                   nop
.text:0035D634 25 10 00 00                                   move    $v0, $zero
.text:0035D638 25 E8 C0 03                                   move    $sp, $fp
.text:0035D63C 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035D640 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035D644 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035D648 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035D64C 08 00 E0 03                                   jr      $ra
.text:0035D650 00 00 00 00                                   nop
.text:0035D650                                # } // starts at 35D5DC
.text:0035D650                                # End of function opcode_0A97(CRunningScript *)
.text:0035D650
.text:0035D654
.text:0035D654                                # =============== S U B R O U T I N E =======================================
.text:0035D654
.text:0035D654                                # Attributes: bp-based frame fpd=0x28
.text:0035D654
.text:0035D654                                # _DWORD __fastcall opcode_0A98(CRunningScript *)
.text:0035D654                                               .globl opcode_0A98(CRunningScript *)
.text:0035D654                               opcode_0A98(CRunningScript *):
.text:0035D654
.text:0035D654                               var_28          = -0x28
.text:0035D654                               var_18          = -0x18
.text:0035D654                               var_s0          =  0
.text:0035D654                               var_s8          =  8
.text:0035D654                               var_s10         =  0x10
.text:0035D654
.text:0035D654                                # __unwind {
.text:0035D654 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035D658 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035D65C 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035D660 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035D664 25 F0 A0 03                                   move    $fp, $sp
.text:0035D668 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035D66C 25 28 C0 03                                   move    $a1, $fp
.text:0035D670 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035D674 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D678 00 00 00 00                                   nop
.text:0035D67C 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035D680 67 00 02 3C 24 B9 42 8C                       lw      $v0, objPool
.text:0035D688 00 00 C3 8F                                   lw      $v1, 0x28+var_28($fp)
.text:0035D68C 25 28 60 00                                   move    $a1, $v1         # int
.text:0035D690 25 20 40 00                                   move    $a0, $v0         # unsigned int *
.text:0035D694 CC FE 07 0C                                   jal     GetObjStruct(ulong *,int)
.text:0035D698 00 00 00 00                                   nop
.text:0035D69C 25 28 40 00                                   move    $a1, $v0
.text:0035D6A0 25 20 00 02                                   move    $a0, $s0
.text:0035D6A4 7F 7B 0D 0C                                   jal     operator<<(CRunningScript &,int)
.text:0035D6A8 00 00 00 00                                   nop
.text:0035D6AC 25 10 00 00                                   move    $v0, $zero
.text:0035D6B0 25 E8 C0 03                                   move    $sp, $fp
.text:0035D6B4 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035D6B8 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035D6BC 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035D6C0 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035D6C4 08 00 E0 03                                   jr      $ra
.text:0035D6C8 00 00 00 00                                   nop
.text:0035D6C8                                # } // starts at 35D654
.text:0035D6C8                                # End of function opcode_0A98(CRunningScript *)
.text:0035D6C8
.text:0035D6CC
.text:0035D6CC                                # =============== S U B R O U T I N E =======================================
.text:0035D6CC
.text:0035D6CC                                # Attributes: bp-based frame fpd=0x10
.text:0035D6CC
.text:0035D6CC                                               .globl opcode_0A9F(CRunningScript *)
.text:0035D6CC                               opcode_0A9F(CRunningScript *):
.text:0035D6CC
.text:0035D6CC                               var_10          = -0x10
.text:0035D6CC                               var_s0          =  0
.text:0035D6CC                               var_s8          =  8
.text:0035D6CC
.text:0035D6CC                                # __unwind {
.text:0035D6CC E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035D6D0 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035D6D4 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035D6D8 25 F0 A0 03                                   move    $fp, $sp
.text:0035D6DC 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035D6E0 00 00 C3 8F                                   lw      $v1, 0x10+var_10($fp)
.text:0035D6E4 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035D6E8 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035D6EC 01 00 05 24                                   li      $a1, 1
.text:0035D6F0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035D6F4 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035D6F8 00 00 00 00                                   nop
.text:0035D6FC 25 10 00 00                                   move    $v0, $zero
.text:0035D700 25 E8 C0 03                                   move    $sp, $fp
.text:0035D704 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035D708 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035D70C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035D710 08 00 E0 03                                   jr      $ra
.text:0035D714 00 00 00 00                                   nop
.text:0035D714                                # } // starts at 35D6CC
.text:0035D714                                # End of function opcode_0A9F(CRunningScript *)
.text:0035D714
.text:0035D718
.text:0035D718                                # =============== S U B R O U T I N E =======================================
.text:0035D718
.text:0035D718                                # Attributes: bp-based frame fpd=0x28
.text:0035D718
.text:0035D718                                # _DWORD __fastcall opcode_0AA0(CRunningScript *)
.text:0035D718                                               .globl opcode_0AA0(CRunningScript *)
.text:0035D718                               opcode_0AA0(CRunningScript *):
.text:0035D718
.text:0035D718                               var_28          = -0x28
.text:0035D718                               var_18          = -0x18
.text:0035D718                               var_s0          =  0
.text:0035D718                               var_s8          =  8
.text:0035D718                               var_s10         =  0x10
.text:0035D718
.text:0035D718                                # __unwind {
.text:0035D718 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035D71C 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035D720 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035D724 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035D728 25 F0 A0 03                                   move    $fp, $sp
.text:0035D72C 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035D730 25 28 C0 03                                   move    $a1, $fp
.text:0035D734 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035D738 6A 7B 0D 0C                                   jal     operator>>(CRunningScript &,int &)
.text:0035D73C 00 00 00 00                                   nop
.text:0035D740 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)  # this
.text:0035D744 B3 7A 0D 0C                                   jal     CRunningScript::GetConditionResult(void)
.text:0035D748 00 00 00 00                                   nop
.text:0035D74C 04 00 40 10                                   beqz    $v0, loc_35D760
.text:0035D750 00 00 00 00                                   nop
.text:0035D754 25 10 00 00                                   move    $v0, $zero
.text:0035D758 0F 00 00 10                                   b       loc_35D798
.text:0035D75C 00 00 00 00                                   nop
.text:0035D760                                # ---------------------------------------------------------------------------
.text:0035D760
.text:0035D760                               loc_35D760:
.text:0035D760 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035D764 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)  # this
.text:0035D768 9A 7A 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035D76C 00 00 00 00                                   nop
.text:0035D770 25 28 40 00                                   move    $a1, $v0         # unsigned __int8 *
.text:0035D774 25 20 00 02                                   move    $a0, $s0         # this
.text:0035D778 D3 7A 0D 0C                                   jal     CRunningScript::PushStack(uchar *)
.text:0035D77C 00 00 00 00                                   nop
.text:0035D780 00 00 C2 8F                                   lw      $v0, 0x28+var_28($fp)
.text:0035D784 25 28 40 00                                   move    $a1, $v0         # int
.text:0035D788 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)  # CRunningScript *
.text:0035D78C 1D 7B 0D 0C                                   jal     ThreadJump(CRunningScript *,int)
.text:0035D790 00 00 00 00                                   nop
.text:0035D794 25 10 00 00                                   move    $v0, $zero
.text:0035D798
.text:0035D798                               loc_35D798:
.text:0035D798 25 E8 C0 03                                   move    $sp, $fp
.text:0035D79C 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035D7A0 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035D7A4 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035D7A8 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035D7AC 08 00 E0 03                                   jr      $ra
.text:0035D7B0 00 00 00 00                                   nop
.text:0035D7B0                                # } // starts at 35D718
.text:0035D7B0                                # End of function opcode_0AA0(CRunningScript *)
.text:0035D7B0
.text:0035D7B4
.text:0035D7B4                                # =============== S U B R O U T I N E =======================================
.text:0035D7B4
.text:0035D7B4                                # Attributes: bp-based frame fpd=0x18
.text:0035D7B4
.text:0035D7B4                                # _DWORD __fastcall opcode_0AA1(CRunningScript *)
.text:0035D7B4                                               .globl opcode_0AA1(CRunningScript *)
.text:0035D7B4                               opcode_0AA1(CRunningScript *):
.text:0035D7B4
.text:0035D7B4                               var_18          = -0x18
.text:0035D7B4                               var_s0          =  0
.text:0035D7B4                               var_s8          =  8
.text:0035D7B4                               var_s10         =  0x10
.text:0035D7B4
.text:0035D7B4                                # __unwind {
.text:0035D7B4 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035D7B8 28 00 BF FF                                   sd      $ra, 0x18+var_s10($sp)
.text:0035D7BC 20 00 BE FF                                   sd      $fp, 0x18+var_s8($sp)
.text:0035D7C0 18 00 B0 FF                                   sd      $s0, 0x18+var_s0($sp)
.text:0035D7C4 25 F0 A0 03                                   move    $fp, $sp
.text:0035D7C8 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035D7CC 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)  # this
.text:0035D7D0 B3 7A 0D 0C                                   jal     CRunningScript::GetConditionResult(void)
.text:0035D7D4 00 00 00 00                                   nop
.text:0035D7D8 04 00 40 10                                   beqz    $v0, loc_35D7EC
.text:0035D7DC 00 00 00 00                                   nop
.text:0035D7E0 25 10 00 00                                   move    $v0, $zero
.text:0035D7E4 0A 00 00 10                                   b       loc_35D810
.text:0035D7E8 00 00 00 00                                   nop
.text:0035D7EC                                # ---------------------------------------------------------------------------
.text:0035D7EC
.text:0035D7EC                               loc_35D7EC:
.text:0035D7EC 00 00 D0 8F                                   lw      $s0, 0x18+var_18($fp)
.text:0035D7F0 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)  # this
.text:0035D7F4 EA 7A 0D 0C                                   jal     CRunningScript::PopStack(void)
.text:0035D7F8 00 00 00 00                                   nop
.text:0035D7FC 25 28 40 00                                   move    $a1, $v0         # void *
.text:0035D800 25 20 00 02                                   move    $a0, $s0         # this
.text:0035D804 A5 7A 0D 0C                                   jal     CRunningScript::SetIp(void *)
.text:0035D808 00 00 00 00                                   nop
.text:0035D80C 25 10 00 00                                   move    $v0, $zero
.text:0035D810
.text:0035D810                               loc_35D810:
.text:0035D810 25 E8 C0 03                                   move    $sp, $fp
.text:0035D814 28 00 BF DF                                   ld      $ra, 0x18+var_s10($sp)
.text:0035D818 20 00 BE DF                                   ld      $fp, 0x18+var_s8($sp)
.text:0035D81C 18 00 B0 DF                                   ld      $s0, 0x18+var_s0($sp)
.text:0035D820 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035D824 08 00 E0 03                                   jr      $ra
.text:0035D828 00 00 00 00                                   nop
.text:0035D828                                # } // starts at 35D7B4
.text:0035D828                                # End of function opcode_0AA1(CRunningScript *)
.text:0035D828
.text:0035D82C
.text:0035D82C                                # =============== S U B R O U T I N E =======================================
.text:0035D82C
.text:0035D82C                                # Attributes: bp-based frame fpd=0x70
.text:0035D82C
.text:0035D82C                                # _DWORD __fastcall opcode_0AA5(CRunningScript *)
.text:0035D82C                                               .globl opcode_0AA5(CRunningScript *)
.text:0035D82C                               opcode_0AA5(CRunningScript *):
.text:0035D82C
.text:0035D82C                               var_70          = -0x70
.text:0035D82C                               var_68          = -0x68
.text:0035D82C                               var_60          = -0x60
.text:0035D82C                               var_58          = -0x58
.text:0035D82C                               var_50          = -0x50
.text:0035D82C                               var_48          = -0x48
.text:0035D82C                               var_40          = -0x40
.text:0035D82C                               var_30          = -0x30
.text:0035D82C                               var_2C          = -0x2C
.text:0035D82C                               var_28          = -0x28
.text:0035D82C                               var_24          = -0x24
.text:0035D82C                               var_20          = -0x20
.text:0035D82C                               var_1C          = -0x1C
.text:0035D82C                               var_10          = -0x10
.text:0035D82C                               var_s0          =  0
.text:0035D82C                               var_s8          =  8
.text:0035D82C
.text:0035D82C                                # __unwind {
.text:0035D82C 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035D830 78 00 BF FF                                   sd      $ra, 0x70+var_s8($sp)
.text:0035D834 70 00 BE FF                                   sd      $fp, 0x70+var_s0($sp)
.text:0035D838 25 F0 A0 03                                   move    $fp, $sp
.text:0035D83C 60 00 C4 AF                                   sw      $a0, 0x70+var_10($fp)
.text:0035D840 4C 00 C2 27                                   addiu   $v0, $fp, 0x70+var_24
.text:0035D844 25 28 40 00                                   move    $a1, $v0
.text:0035D848 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035D84C E7 7B 0D 0C                                   jal     operator>><void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035D850 00 00 00 00                                   nop
.text:0035D854 50 00 C3 27                                   addiu   $v1, $fp, 0x70+var_20
.text:0035D858 25 28 60 00                                   move    $a1, $v1
.text:0035D85C 25 20 40 00                                   move    $a0, $v0
.text:0035D860 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D864 00 00 00 00                                   nop
.text:0035D868 54 00 C3 27                                   addiu   $v1, $fp, 0x70+var_1C
.text:0035D86C 25 28 60 00                                   move    $a1, $v1
.text:0035D870 25 20 40 00                                   move    $a0, $v0
.text:0035D874 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035D878 00 00 00 00                                   nop
.text:0035D87C 50 00 C2 8F                                   lw      $v0, 0x70+var_20($fp)
.text:0035D880 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035D884 03 00 40 14                                   bnez    $v0, loc_35D894
.text:0035D888 00 00 00 00                                   nop
.text:0035D88C 0F 00 02 24                                   li      $v0, 0xF
.text:0035D890 50 00 C2 AF                                   sw      $v0, 0x70+var_20($fp)
.text:0035D894
.text:0035D894                               loc_35D894:
.text:0035D894 54 00 C2 8F                                   lw      $v0, 0x70+var_1C($fp)
.text:0035D898 80 10 02 00                                   sll     $v0, 2
.text:0035D89C 54 00 C2 AF                                   sw      $v0, 0x70+var_1C($fp)
.text:0035D8A0 50 00 C2 8F                                   lw      $v0, 0x70+var_20($fp)
.text:0035D8A4 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035D8A8 36 00 02 3C 60 F8 42 24                       li      $v0, arguments
.text:0035D8B0 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035D8B4 48 00 C2 AF                                   sw      $v0, 0x70+var_28($fp)
.text:0035D8B8 40 00 C0 AF                                   sw      $zero, 0x70+var_30($fp)
.text:0035D8BC 36 00 02 3C 60 F8 42 24                       li      $v0, arguments
.text:0035D8C4 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035D8C8 83 00 00 10                                   b       loc_35DAD8
.text:0035D8CC 00 00 00 00                                   nop
.text:0035D8D0                                # ---------------------------------------------------------------------------
.text:0035D8D0
.text:0035D8D0                               loc_35D8D0:                              # this
.text:0035D8D0 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035D8D4 9A 7A 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035D8D8 00 00 00 00                                   nop
.text:0035D8DC 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035D8E0 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035D8E4 79 00 60 10                                   beqz    $v1, def_35D900  # jumptable 0035D900 default case, cases 0,12,13,15
.text:0035D8E8 00 00 00 00                                   nop
.text:0035D8EC 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035D8F0 36 00 02 3C C0 F1 42 24                       li      $v0, jpt_35D900
.text:0035D8F8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035D8FC 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035D900 08 00 40 00                                   jr      $v0              # switch jump
.text:0035D904 00 00 00 00                                   nop
.text:0035D908                                # ---------------------------------------------------------------------------
.text:0035D908
.text:0035D908                               loc_35D908:                              # jumptable 0035D900 case 6
.text:0035D908 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D90C 25 28 40 00                                   move    $a1, $v0
.text:0035D910 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035D914 93 7B 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035D918 00 00 00 00                                   nop
.text:0035D91C 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035D920 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035D924 44 00 40 10                                   beqz    $v0, def_35D944  # jumptable 0035D944 default case
.text:0035D928 00 00 00 00                                   nop
.text:0035D92C 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035D930 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035D934 36 00 02 3C 08 F2 42 24                       li      $v0, jpt_35D944
.text:0035D93C 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035D940 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035D944 08 00 40 00                                   jr      $v0              # switch jump
.text:0035D948 00 00 00 00                                   nop
.text:0035D94C                                # ---------------------------------------------------------------------------
.text:0035D94C
.text:0035D94C                               loc_35D94C:                              # jumptable 0035D944 case 0
.text:0035D94C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D950 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035D954 38 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D958 00 00 00 00                                   nop
.text:0035D95C                                # ---------------------------------------------------------------------------
.text:0035D95C
.text:0035D95C                               loc_35D95C:                              # jumptable 0035D944 case 1
.text:0035D95C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D960 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035D964 34 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D968 00 00 00 00                                   nop
.text:0035D96C                                # ---------------------------------------------------------------------------
.text:0035D96C
.text:0035D96C                               loc_35D96C:                              # jumptable 0035D944 case 2
.text:0035D96C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D970 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035D974 30 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D978 00 00 00 00                                   nop
.text:0035D97C                                # ---------------------------------------------------------------------------
.text:0035D97C
.text:0035D97C                               loc_35D97C:                              # jumptable 0035D944 case 3
.text:0035D97C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D980 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035D984 2C 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D988 00 00 00 00                                   nop
.text:0035D98C                                # ---------------------------------------------------------------------------
.text:0035D98C
.text:0035D98C                               loc_35D98C:                              # jumptable 0035D944 case 4
.text:0035D98C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D990 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035D994 28 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D998 00 00 00 00                                   nop
.text:0035D99C                                # ---------------------------------------------------------------------------
.text:0035D99C
.text:0035D99C                               loc_35D99C:                              # jumptable 0035D944 case 5
.text:0035D99C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D9A0 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035D9A4 24 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D9A8 00 00 00 00                                   nop
.text:0035D9AC                                # ---------------------------------------------------------------------------
.text:0035D9AC
.text:0035D9AC                               loc_35D9AC:                              # jumptable 0035D944 case 6
.text:0035D9AC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D9B0 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035D9B4 20 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D9B8 00 00 00 00                                   nop
.text:0035D9BC                                # ---------------------------------------------------------------------------
.text:0035D9BC
.text:0035D9BC                               loc_35D9BC:                              # jumptable 0035D944 case 7
.text:0035D9BC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D9C0 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035D9C4 1C 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D9C8 00 00 00 00                                   nop
.text:0035D9CC                                # ---------------------------------------------------------------------------
.text:0035D9CC
.text:0035D9CC                               loc_35D9CC:                              # jumptable 0035D944 case 8
.text:0035D9CC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D9D0 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035D9D4 18 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D9D8 00 00 00 00                                   nop
.text:0035D9DC                                # ---------------------------------------------------------------------------
.text:0035D9DC
.text:0035D9DC                               loc_35D9DC:                              # jumptable 0035D944 case 9
.text:0035D9DC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D9E0 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035D9E4 14 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D9E8 00 00 00 00                                   nop
.text:0035D9EC                                # ---------------------------------------------------------------------------
.text:0035D9EC
.text:0035D9EC                               loc_35D9EC:                              # jumptable 0035D944 case 10
.text:0035D9EC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035D9F0 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035D9F4 10 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035D9F8 00 00 00 00                                   nop
.text:0035D9FC                                # ---------------------------------------------------------------------------
.text:0035D9FC
.text:0035D9FC                               loc_35D9FC:                              # jumptable 0035D944 case 11
.text:0035D9FC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DA00 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035DA04 0C 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035DA08 00 00 00 00                                   nop
.text:0035DA0C                                # ---------------------------------------------------------------------------
.text:0035DA0C
.text:0035DA0C                               loc_35DA0C:                              # jumptable 0035D944 case 12
.text:0035DA0C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DA10 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035DA14 08 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035DA18 00 00 00 00                                   nop
.text:0035DA1C                                # ---------------------------------------------------------------------------
.text:0035DA1C
.text:0035DA1C                               loc_35DA1C:                              # jumptable 0035D944 case 13
.text:0035DA1C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DA20 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035DA24 04 00 00 10                                   b       def_35D944       # jumptable 0035D944 default case
.text:0035DA28 00 00 00 00                                   nop
.text:0035DA2C                                # ---------------------------------------------------------------------------
.text:0035DA2C
.text:0035DA2C                               loc_35DA2C:                              # jumptable 0035D944 case 14
.text:0035DA2C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DA30 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035DA34 00 00 00 00                                   nop
.text:0035DA38
.text:0035DA38                               def_35D944:                              # jumptable 0035D944 default case
.text:0035DA38 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035DA3C 01 00 42 24                                   addiu   $v0, 1
.text:0035DA40 40 00 C2 AF                                   sw      $v0, 0x70+var_30($fp)
.text:0035DA44 21 00 00 10                                   b       def_35D900       # jumptable 0035D900 default case, cases 0,12,13,15
.text:0035DA48 00 00 00 00                                   nop
.text:0035DA4C                                # ---------------------------------------------------------------------------
.text:0035DA4C
.text:0035DA4C                               loc_35DA4C:                              # jumptable 0035D900 cases 1-5,7,8
.text:0035DA4C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DA50 25 28 40 00                                   move    $a1, $v0
.text:0035DA54 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DA58 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DA5C 00 00 00 00                                   nop
.text:0035DA60 1A 00 00 10                                   b       def_35D900       # jumptable 0035D900 default case, cases 0,12,13,15
.text:0035DA64 00 00 00 00                                   nop
.text:0035DA68                                # ---------------------------------------------------------------------------
.text:0035DA68
.text:0035DA68                               loc_35DA68:                              # jumptable 0035D900 cases 10,11,16,17
.text:0035DA68 01 00 05 24                                   li      $a1, 1
.text:0035DA6C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DA70 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035DA74 00 00 00 00                                   nop
.text:0035DA78 25 18 40 00                                   move    $v1, $v0
.text:0035DA7C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DA80 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035DA84 11 00 00 10                                   b       def_35D900       # jumptable 0035D900 default case, cases 0,12,13,15
.text:0035DA88 00 00 00 00                                   nop
.text:0035DA8C                                # ---------------------------------------------------------------------------
.text:0035DA8C
.text:0035DA8C                               loc_35DA8C:                              # jumptable 0035D900 cases 9,14
.text:0035DA8C 98 80 82 93                                   lbu     $v0, currTextParam
.text:0035DA90 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035DA94 FF 00 63 30                                   andi    $v1, 0xFF
.text:0035DA98 98 80 83 A3                                   sb      $v1, currTextParam
.text:0035DA9C C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035DAA0 36 00 02 3C E0 F5 42 24                       li      $v0, textParams
.text:0035DAA8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DAAC 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035DAB0 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035DAB4 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035DAB8 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035DABC 00 00 00 00                                   nop
.text:0035DAC0 25 18 40 00                                   move    $v1, $v0
.text:0035DAC4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DAC8 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035DACC
.text:0035DACC                               def_35D900:                              # jumptable 0035D900 default case, cases 0,12,13,15
.text:0035DACC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DAD0 04 00 42 24                                   addiu   $v0, 4
.text:0035DAD4 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035DAD8
.text:0035DAD8                               loc_35DAD8:
.text:0035DAD8 44 00 C3 8F                                   lw      $v1, 0x70+var_2C($fp)
.text:0035DADC 48 00 C2 8F                                   lw      $v0, 0x70+var_28($fp)
.text:0035DAE0 7B FF 62 14                                   bne     $v1, $v0, loc_35D8D0
.text:0035DAE4 00 00 00 00                                   nop
.text:0035DAE8 4C 00 C2 8F                                   lw      $v0, 0x70+var_24($fp)
.text:0035DAEC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DAF0 60 F8 6A 24                                   addiu   $a6, $v1, (arguments - 0x360000)
.text:0035DAF4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DAF8 60 F8 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035DAFC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DB00 60 F8 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035DB04 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DB08 60 F8 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035DB0C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DB10 60 F8 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035DB14 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DB18 60 F8 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035DB1C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DB20 60 F8 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035DB24 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DB28 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035DB30 38 00 6B 8D                                   lw      $a7, (dword_35F898 - 0x35F860)($a7)
.text:0035DB34 30 00 AB AF                                   sw      $a7, 0x70+var_40($sp)
.text:0035DB38 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035DB40 34 00 6B 8D                                   lw      $a7, (dword_35F894 - 0x35F860)($a7)
.text:0035DB44 28 00 AB AF                                   sw      $a7, 0x70+var_48($sp)
.text:0035DB48 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035DB50 30 00 6B 8D                                   lw      $a7, (dword_35F890 - 0x35F860)($a7)
.text:0035DB54 20 00 AB AF                                   sw      $a7, 0x70+var_50($sp)
.text:0035DB58 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035DB60 2C 00 6B 8D                                   lw      $a7, (dword_35F88C - 0x35F860)($a7)
.text:0035DB64 18 00 AB AF                                   sw      $a7, 0x70+var_58($sp)
.text:0035DB68 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035DB70 28 00 6B 8D                                   lw      $a7, (dword_35F888 - 0x35F860)($a7)
.text:0035DB74 10 00 AB AF                                   sw      $a7, 0x70+var_60($sp)
.text:0035DB78 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035DB80 24 00 6B 8D                                   lw      $a7, (dword_35F884 - 0x35F860)($a7)
.text:0035DB84 08 00 AB AF                                   sw      $a7, 0x70+var_68($sp)
.text:0035DB88 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035DB90 20 00 6B 8D                                   lw      $a7, (dword_35F880 - 0x35F860)($a7)
.text:0035DB94 00 00 AB AF                                   sw      $a7, 0x70+var_70($sp)
.text:0035DB98 1C 00 4B 8D                                   lw      $a7, (dword_35F87C - 0x35F860)($a6)
.text:0035DB9C 18 00 2A 8D                                   lw      $a6, (dword_35F878 - 0x35F860)($a5)
.text:0035DBA0 14 00 09 8D                                   lw      $a5, (dword_35F874 - 0x35F860)($a4)
.text:0035DBA4 10 00 E8 8C                                   lw      $a4, (dword_35F870 - 0x35F860)($a3)
.text:0035DBA8 0C 00 C7 8C                                   lw      $a3, (dword_35F86C - 0x35F860)($a2)
.text:0035DBAC 08 00 A6 8C                                   lw      $a2, (dword_35F868 - 0x35F860)($a1)
.text:0035DBB0 04 00 85 8C                                   lw      $a1, (dword_35F864 - 0x35F860)($a0)
.text:0035DBB4 60 F8 64 8C                                   lw      $a0, (arguments - 0x360000)($v1)
.text:0035DBB8 09 F8 40 00                                   jalr    $v0
.text:0035DBBC 00 00 00 00                                   nop
.text:0035DBC0 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035DBC4 00 7B 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035DBC8 00 00 00 00                                   nop
.text:0035DBCC 25 10 00 00                                   move    $v0, $zero
.text:0035DBD0 25 E8 C0 03                                   move    $sp, $fp
.text:0035DBD4 78 00 BF DF                                   ld      $ra, 0x70+var_s8($sp)
.text:0035DBD8 70 00 BE DF                                   ld      $fp, 0x70+var_s0($sp)
.text:0035DBDC 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035DBE0 08 00 E0 03                                   jr      $ra
.text:0035DBE4 00 00 00 00                                   nop
.text:0035DBE4                                # } // starts at 35D82C
.text:0035DBE4                                # End of function opcode_0AA5(CRunningScript *)
.text:0035DBE4
.text:0035DBE8
.text:0035DBE8                                # =============== S U B R O U T I N E =======================================
.text:0035DBE8
.text:0035DBE8                                # Attributes: bp-based frame fpd=0x70
.text:0035DBE8
.text:0035DBE8                                # _DWORD __fastcall opcode_0AA6(CRunningScript *)
.text:0035DBE8                                               .globl opcode_0AA6(CRunningScript *)
.text:0035DBE8                               opcode_0AA6(CRunningScript *):
.text:0035DBE8
.text:0035DBE8                               var_70          = -0x70
.text:0035DBE8                               var_68          = -0x68
.text:0035DBE8                               var_60          = -0x60
.text:0035DBE8                               var_58          = -0x58
.text:0035DBE8                               var_50          = -0x50
.text:0035DBE8                               var_48          = -0x48
.text:0035DBE8                               var_40          = -0x40
.text:0035DBE8                               var_38          = -0x38
.text:0035DBE8                               var_30          = -0x30
.text:0035DBE8                               var_2C          = -0x2C
.text:0035DBE8                               var_28          = -0x28
.text:0035DBE8                               var_24          = -0x24
.text:0035DBE8                               var_20          = -0x20
.text:0035DBE8                               var_1C          = -0x1C
.text:0035DBE8                               var_18          = -0x18
.text:0035DBE8                               var_10          = -0x10
.text:0035DBE8                               var_s0          =  0
.text:0035DBE8                               var_s8          =  8
.text:0035DBE8
.text:0035DBE8                                # __unwind {
.text:0035DBE8 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035DBEC 78 00 BF FF                                   sd      $ra, 0x70+var_s8($sp)
.text:0035DBF0 70 00 BE FF                                   sd      $fp, 0x70+var_s0($sp)
.text:0035DBF4 25 F0 A0 03                                   move    $fp, $sp
.text:0035DBF8 60 00 C4 AF                                   sw      $a0, 0x70+var_10($fp)
.text:0035DBFC 4C 00 C2 27                                   addiu   $v0, $fp, 0x70+var_24
.text:0035DC00 25 28 40 00                                   move    $a1, $v0
.text:0035DC04 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DC08 FD 7B 0D 0C                                   jal     operator>><void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035DC0C 00 00 00 00                                   nop
.text:0035DC10 50 00 C3 27                                   addiu   $v1, $fp, 0x70+var_20
.text:0035DC14 25 28 60 00                                   move    $a1, $v1
.text:0035DC18 25 20 40 00                                   move    $a0, $v0
.text:0035DC1C BD 7B 0D 0C                                   jal     operator>>(CRunningScript &,void *&)
.text:0035DC20 00 00 00 00                                   nop
.text:0035DC24 54 00 C3 27                                   addiu   $v1, $fp, 0x70+var_1C
.text:0035DC28 25 28 60 00                                   move    $a1, $v1
.text:0035DC2C 25 20 40 00                                   move    $a0, $v0
.text:0035DC30 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DC34 00 00 00 00                                   nop
.text:0035DC38 58 00 C3 27                                   addiu   $v1, $fp, 0x70+var_18
.text:0035DC3C 25 28 60 00                                   move    $a1, $v1
.text:0035DC40 25 20 40 00                                   move    $a0, $v0
.text:0035DC44 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DC48 00 00 00 00                                   nop
.text:0035DC4C 54 00 C2 8F                                   lw      $v0, 0x70+var_1C($fp)
.text:0035DC50 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035DC54 03 00 40 14                                   bnez    $v0, loc_35DC64
.text:0035DC58 00 00 00 00                                   nop
.text:0035DC5C 0F 00 02 24                                   li      $v0, 0xF
.text:0035DC60 54 00 C2 AF                                   sw      $v0, 0x70+var_1C($fp)
.text:0035DC64
.text:0035DC64                               loc_35DC64:
.text:0035DC64 58 00 C2 8F                                   lw      $v0, 0x70+var_18($fp)
.text:0035DC68 80 10 02 00                                   sll     $v0, 2
.text:0035DC6C 58 00 C2 AF                                   sw      $v0, 0x70+var_18($fp)
.text:0035DC70 54 00 C2 8F                                   lw      $v0, 0x70+var_1C($fp)
.text:0035DC74 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DC78 36 00 02 3C 60 F8 42 24                       li      $v0, arguments
.text:0035DC80 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DC84 48 00 C2 AF                                   sw      $v0, 0x70+var_28($fp)
.text:0035DC88 40 00 C0 AF                                   sw      $zero, 0x70+var_30($fp)
.text:0035DC8C 36 00 02 3C 60 F8 42 24                       li      $v0, arguments
.text:0035DC94 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035DC98 83 00 00 10                                   b       loc_35DEA8
.text:0035DC9C 00 00 00 00                                   nop
.text:0035DCA0                                # ---------------------------------------------------------------------------
.text:0035DCA0
.text:0035DCA0                               loc_35DCA0:                              # this
.text:0035DCA0 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DCA4 9A 7A 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035DCA8 00 00 00 00                                   nop
.text:0035DCAC 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035DCB0 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035DCB4 79 00 60 10                                   beqz    $v1, def_35DCD0  # jumptable 0035DCD0 default case, cases 0,12,13,15
.text:0035DCB8 00 00 00 00                                   nop
.text:0035DCBC 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DCC0 36 00 02 3C 44 F2 42 24                       li      $v0, jpt_35DCD0
.text:0035DCC8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DCCC 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035DCD0 08 00 40 00                                   jr      $v0              # switch jump
.text:0035DCD4 00 00 00 00                                   nop
.text:0035DCD8                                # ---------------------------------------------------------------------------
.text:0035DCD8
.text:0035DCD8                               loc_35DCD8:                              # jumptable 0035DCD0 case 6
.text:0035DCD8 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DCDC 25 28 40 00                                   move    $a1, $v0
.text:0035DCE0 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DCE4 93 7B 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035DCE8 00 00 00 00                                   nop
.text:0035DCEC 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035DCF0 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035DCF4 44 00 40 10                                   beqz    $v0, def_35DD14  # jumptable 0035DD14 default case
.text:0035DCF8 00 00 00 00                                   nop
.text:0035DCFC 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035DD00 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035DD04 36 00 02 3C 8C F2 42 24                       li      $v0, jpt_35DD14
.text:0035DD0C 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DD10 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035DD14 08 00 40 00                                   jr      $v0              # switch jump
.text:0035DD18 00 00 00 00                                   nop
.text:0035DD1C                                # ---------------------------------------------------------------------------
.text:0035DD1C
.text:0035DD1C                               loc_35DD1C:                              # jumptable 0035DD14 case 0
.text:0035DD1C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DD20 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035DD24 38 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DD28 00 00 00 00                                   nop
.text:0035DD2C                                # ---------------------------------------------------------------------------
.text:0035DD2C
.text:0035DD2C                               loc_35DD2C:                              # jumptable 0035DD14 case 1
.text:0035DD2C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DD30 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035DD34 34 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DD38 00 00 00 00                                   nop
.text:0035DD3C                                # ---------------------------------------------------------------------------
.text:0035DD3C
.text:0035DD3C                               loc_35DD3C:                              # jumptable 0035DD14 case 2
.text:0035DD3C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DD40 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035DD44 30 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DD48 00 00 00 00                                   nop
.text:0035DD4C                                # ---------------------------------------------------------------------------
.text:0035DD4C
.text:0035DD4C                               loc_35DD4C:                              # jumptable 0035DD14 case 3
.text:0035DD4C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DD50 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035DD54 2C 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DD58 00 00 00 00                                   nop
.text:0035DD5C                                # ---------------------------------------------------------------------------
.text:0035DD5C
.text:0035DD5C                               loc_35DD5C:                              # jumptable 0035DD14 case 4
.text:0035DD5C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DD60 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035DD64 28 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DD68 00 00 00 00                                   nop
.text:0035DD6C                                # ---------------------------------------------------------------------------
.text:0035DD6C
.text:0035DD6C                               loc_35DD6C:                              # jumptable 0035DD14 case 5
.text:0035DD6C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DD70 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035DD74 24 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DD78 00 00 00 00                                   nop
.text:0035DD7C                                # ---------------------------------------------------------------------------
.text:0035DD7C
.text:0035DD7C                               loc_35DD7C:                              # jumptable 0035DD14 case 6
.text:0035DD7C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DD80 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035DD84 20 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DD88 00 00 00 00                                   nop
.text:0035DD8C                                # ---------------------------------------------------------------------------
.text:0035DD8C
.text:0035DD8C                               loc_35DD8C:                              # jumptable 0035DD14 case 7
.text:0035DD8C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DD90 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035DD94 1C 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DD98 00 00 00 00                                   nop
.text:0035DD9C                                # ---------------------------------------------------------------------------
.text:0035DD9C
.text:0035DD9C                               loc_35DD9C:                              # jumptable 0035DD14 case 8
.text:0035DD9C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DDA0 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035DDA4 18 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DDA8 00 00 00 00                                   nop
.text:0035DDAC                                # ---------------------------------------------------------------------------
.text:0035DDAC
.text:0035DDAC                               loc_35DDAC:                              # jumptable 0035DD14 case 9
.text:0035DDAC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DDB0 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035DDB4 14 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DDB8 00 00 00 00                                   nop
.text:0035DDBC                                # ---------------------------------------------------------------------------
.text:0035DDBC
.text:0035DDBC                               loc_35DDBC:                              # jumptable 0035DD14 case 10
.text:0035DDBC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DDC0 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035DDC4 10 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DDC8 00 00 00 00                                   nop
.text:0035DDCC                                # ---------------------------------------------------------------------------
.text:0035DDCC
.text:0035DDCC                               loc_35DDCC:                              # jumptable 0035DD14 case 11
.text:0035DDCC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DDD0 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035DDD4 0C 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DDD8 00 00 00 00                                   nop
.text:0035DDDC                                # ---------------------------------------------------------------------------
.text:0035DDDC
.text:0035DDDC                               loc_35DDDC:                              # jumptable 0035DD14 case 12
.text:0035DDDC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DDE0 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035DDE4 08 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DDE8 00 00 00 00                                   nop
.text:0035DDEC                                # ---------------------------------------------------------------------------
.text:0035DDEC
.text:0035DDEC                               loc_35DDEC:                              # jumptable 0035DD14 case 13
.text:0035DDEC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DDF0 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035DDF4 04 00 00 10                                   b       def_35DD14       # jumptable 0035DD14 default case
.text:0035DDF8 00 00 00 00                                   nop
.text:0035DDFC                                # ---------------------------------------------------------------------------
.text:0035DDFC
.text:0035DDFC                               loc_35DDFC:                              # jumptable 0035DD14 case 14
.text:0035DDFC 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DE00 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035DE04 00 00 00 00                                   nop
.text:0035DE08
.text:0035DE08                               def_35DD14:                              # jumptable 0035DD14 default case
.text:0035DE08 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035DE0C 01 00 42 24                                   addiu   $v0, 1
.text:0035DE10 40 00 C2 AF                                   sw      $v0, 0x70+var_30($fp)
.text:0035DE14 21 00 00 10                                   b       def_35DCD0       # jumptable 0035DCD0 default case, cases 0,12,13,15
.text:0035DE18 00 00 00 00                                   nop
.text:0035DE1C                                # ---------------------------------------------------------------------------
.text:0035DE1C
.text:0035DE1C                               loc_35DE1C:                              # jumptable 0035DCD0 cases 1-5,7,8
.text:0035DE1C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DE20 25 28 40 00                                   move    $a1, $v0
.text:0035DE24 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DE28 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DE2C 00 00 00 00                                   nop
.text:0035DE30 1A 00 00 10                                   b       def_35DCD0       # jumptable 0035DCD0 default case, cases 0,12,13,15
.text:0035DE34 00 00 00 00                                   nop
.text:0035DE38                                # ---------------------------------------------------------------------------
.text:0035DE38
.text:0035DE38                               loc_35DE38:                              # jumptable 0035DCD0 cases 10,11,16,17
.text:0035DE38 01 00 05 24                                   li      $a1, 1
.text:0035DE3C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DE40 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035DE44 00 00 00 00                                   nop
.text:0035DE48 25 18 40 00                                   move    $v1, $v0
.text:0035DE4C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DE50 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035DE54 11 00 00 10                                   b       def_35DCD0       # jumptable 0035DCD0 default case, cases 0,12,13,15
.text:0035DE58 00 00 00 00                                   nop
.text:0035DE5C                                # ---------------------------------------------------------------------------
.text:0035DE5C
.text:0035DE5C                               loc_35DE5C:                              # jumptable 0035DCD0 cases 9,14
.text:0035DE5C 98 80 82 93                                   lbu     $v0, currTextParam
.text:0035DE60 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035DE64 FF 00 63 30                                   andi    $v1, 0xFF
.text:0035DE68 98 80 83 A3                                   sb      $v1, currTextParam
.text:0035DE6C C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035DE70 36 00 02 3C E0 F5 42 24                       li      $v0, textParams
.text:0035DE78 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035DE7C 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035DE80 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035DE84 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035DE88 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035DE8C 00 00 00 00                                   nop
.text:0035DE90 25 18 40 00                                   move    $v1, $v0
.text:0035DE94 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DE98 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035DE9C
.text:0035DE9C                               def_35DCD0:                              # jumptable 0035DCD0 default case, cases 0,12,13,15
.text:0035DE9C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035DEA0 04 00 42 24                                   addiu   $v0, 4
.text:0035DEA4 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035DEA8
.text:0035DEA8                               loc_35DEA8:
.text:0035DEA8 44 00 C3 8F                                   lw      $v1, 0x70+var_2C($fp)
.text:0035DEAC 48 00 C2 8F                                   lw      $v0, 0x70+var_28($fp)
.text:0035DEB0 7B FF 62 14                                   bne     $v1, $v0, loc_35DCA0
.text:0035DEB4 00 00 00 00                                   nop
.text:0035DEB8 4C 00 C2 8F                                   lw      $v0, 0x70+var_24($fp)
.text:0035DEBC 50 00 CC 8F                                   lw      $t4, 0x70+var_20($fp)
.text:0035DEC0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DEC4 60 F8 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035DEC8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DECC 60 F8 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035DED0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DED4 60 F8 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035DED8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DEDC 60 F8 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035DEE0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DEE4 60 F8 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035DEE8 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DEEC 60 F8 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035DEF0 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035DEF4 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035DEFC 38 00 4A 8D                                   lw      $a6, (dword_35F898 - 0x35F860)($a6)
.text:0035DF00 38 00 AA AF                                   sw      $a6, 0x70+var_38($sp)
.text:0035DF04 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035DF0C 34 00 4A 8D                                   lw      $a6, (dword_35F894 - 0x35F860)($a6)
.text:0035DF10 30 00 AA AF                                   sw      $a6, 0x70+var_40($sp)
.text:0035DF14 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035DF1C 30 00 4A 8D                                   lw      $a6, (dword_35F890 - 0x35F860)($a6)
.text:0035DF20 28 00 AA AF                                   sw      $a6, 0x70+var_48($sp)
.text:0035DF24 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035DF2C 2C 00 4A 8D                                   lw      $a6, (dword_35F88C - 0x35F860)($a6)
.text:0035DF30 20 00 AA AF                                   sw      $a6, 0x70+var_50($sp)
.text:0035DF34 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035DF3C 28 00 4A 8D                                   lw      $a6, (dword_35F888 - 0x35F860)($a6)
.text:0035DF40 18 00 AA AF                                   sw      $a6, 0x70+var_58($sp)
.text:0035DF44 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035DF4C 24 00 4A 8D                                   lw      $a6, (dword_35F884 - 0x35F860)($a6)
.text:0035DF50 10 00 AA AF                                   sw      $a6, 0x70+var_60($sp)
.text:0035DF54 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035DF5C 20 00 4A 8D                                   lw      $a6, (dword_35F880 - 0x35F860)($a6)
.text:0035DF60 08 00 AA AF                                   sw      $a6, 0x70+var_68($sp)
.text:0035DF64 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035DF6C 1C 00 4A 8D                                   lw      $a6, (dword_35F87C - 0x35F860)($a6)
.text:0035DF70 00 00 AA AF                                   sw      $a6, 0x70+var_70($sp)
.text:0035DF74 18 00 2B 8D                                   lw      $a7, (dword_35F878 - 0x35F860)($a5)
.text:0035DF78 14 00 0A 8D                                   lw      $a6, (dword_35F874 - 0x35F860)($a4)
.text:0035DF7C 10 00 E9 8C                                   lw      $a5, (dword_35F870 - 0x35F860)($a3)
.text:0035DF80 0C 00 C8 8C                                   lw      $a4, (dword_35F86C - 0x35F860)($a2)
.text:0035DF84 08 00 A7 8C                                   lw      $a3, (dword_35F868 - 0x35F860)($a1)
.text:0035DF88 04 00 86 8C                                   lw      $a2, (dword_35F864 - 0x35F860)($a0)
.text:0035DF8C 60 F8 65 8C                                   lw      $a1, (arguments - 0x360000)($v1)
.text:0035DF90 25 20 80 01                                   move    $a0, $t4
.text:0035DF94 09 F8 40 00                                   jalr    $v0
.text:0035DF98 00 00 00 00                                   nop
.text:0035DF9C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035DFA0 00 7B 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035DFA4 00 00 00 00                                   nop
.text:0035DFA8 25 10 00 00                                   move    $v0, $zero
.text:0035DFAC 25 E8 C0 03                                   move    $sp, $fp
.text:0035DFB0 78 00 BF DF                                   ld      $ra, 0x70+var_s8($sp)
.text:0035DFB4 70 00 BE DF                                   ld      $fp, 0x70+var_s0($sp)
.text:0035DFB8 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035DFBC 08 00 E0 03                                   jr      $ra
.text:0035DFC0 00 00 00 00                                   nop
.text:0035DFC0                                # } // starts at 35DBE8
.text:0035DFC0                                # End of function opcode_0AA6(CRunningScript *)
.text:0035DFC0
.text:0035DFC4
.text:0035DFC4                                # =============== S U B R O U T I N E =======================================
.text:0035DFC4
.text:0035DFC4                                # Attributes: bp-based frame fpd=0x70
.text:0035DFC4
.text:0035DFC4                                # _DWORD __fastcall opcode_0AA7(CRunningScript *)
.text:0035DFC4                                               .globl opcode_0AA7(CRunningScript *)
.text:0035DFC4                               opcode_0AA7(CRunningScript *):
.text:0035DFC4
.text:0035DFC4                               var_70          = -0x70
.text:0035DFC4                               var_68          = -0x68
.text:0035DFC4                               var_60          = -0x60
.text:0035DFC4                               var_58          = -0x58
.text:0035DFC4                               var_50          = -0x50
.text:0035DFC4                               var_48          = -0x48
.text:0035DFC4                               var_40          = -0x40
.text:0035DFC4                               var_30          = -0x30
.text:0035DFC4                               var_2C          = -0x2C
.text:0035DFC4                               var_28          = -0x28
.text:0035DFC4                               var_24          = -0x24
.text:0035DFC4                               var_20          = -0x20
.text:0035DFC4                               var_1C          = -0x1C
.text:0035DFC4                               var_18          = -0x18
.text:0035DFC4                               var_10          = -0x10
.text:0035DFC4                               var_s0          =  0
.text:0035DFC4                               var_s8          =  8
.text:0035DFC4
.text:0035DFC4                                # __unwind {
.text:0035DFC4 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035DFC8 78 00 BF FF                                   sd      $ra, 0x70+var_s8($sp)
.text:0035DFCC 70 00 BE FF                                   sd      $fp, 0x70+var_s0($sp)
.text:0035DFD0 25 F0 A0 03                                   move    $fp, $sp
.text:0035DFD4 60 00 C4 AF                                   sw      $a0, 0x70+var_10($fp)
.text:0035DFD8 50 00 C2 27                                   addiu   $v0, $fp, 0x70+var_20
.text:0035DFDC 25 28 40 00                                   move    $a1, $v0
.text:0035DFE0 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035DFE4 13 7C 0D 0C                                   jal     operator>><ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035DFE8 00 00 00 00                                   nop
.text:0035DFEC 54 00 C3 27                                   addiu   $v1, $fp, 0x70+var_1C
.text:0035DFF0 25 28 60 00                                   move    $a1, $v1
.text:0035DFF4 25 20 40 00                                   move    $a0, $v0
.text:0035DFF8 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035DFFC 00 00 00 00                                   nop
.text:0035E000 58 00 C3 27                                   addiu   $v1, $fp, 0x70+var_18
.text:0035E004 25 28 60 00                                   move    $a1, $v1
.text:0035E008 25 20 40 00                                   move    $a0, $v0
.text:0035E00C 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E010 00 00 00 00                                   nop
.text:0035E014 54 00 C2 8F                                   lw      $v0, 0x70+var_1C($fp)
.text:0035E018 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035E01C 03 00 40 14                                   bnez    $v0, loc_35E02C
.text:0035E020 00 00 00 00                                   nop
.text:0035E024 0F 00 02 24                                   li      $v0, 0xF
.text:0035E028 54 00 C2 AF                                   sw      $v0, 0x70+var_1C($fp)
.text:0035E02C
.text:0035E02C                               loc_35E02C:
.text:0035E02C 58 00 C2 8F                                   lw      $v0, 0x70+var_18($fp)
.text:0035E030 80 10 02 00                                   sll     $v0, 2
.text:0035E034 58 00 C2 AF                                   sw      $v0, 0x70+var_18($fp)
.text:0035E038 54 00 C2 8F                                   lw      $v0, 0x70+var_1C($fp)
.text:0035E03C 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E040 36 00 02 3C 60 F8 42 24                       li      $v0, arguments
.text:0035E048 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E04C 48 00 C2 AF                                   sw      $v0, 0x70+var_28($fp)
.text:0035E050 40 00 C0 AF                                   sw      $zero, 0x70+var_30($fp)
.text:0035E054 36 00 02 3C 60 F8 42 24                       li      $v0, arguments
.text:0035E05C 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035E060 83 00 00 10                                   b       loc_35E270
.text:0035E064 00 00 00 00                                   nop
.text:0035E068                                # ---------------------------------------------------------------------------
.text:0035E068
.text:0035E068                               loc_35E068:                              # this
.text:0035E068 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E06C 9A 7A 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035E070 00 00 00 00                                   nop
.text:0035E074 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035E078 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035E07C 79 00 60 10                                   beqz    $v1, def_35E098  # jumptable 0035E098 default case, cases 0,12,13,15
.text:0035E080 00 00 00 00                                   nop
.text:0035E084 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E088 36 00 02 3C C8 F2 42 24                       li      $v0, jpt_35E098
.text:0035E090 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E094 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E098 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E09C 00 00 00 00                                   nop
.text:0035E0A0                                # ---------------------------------------------------------------------------
.text:0035E0A0
.text:0035E0A0                               loc_35E0A0:                              # jumptable 0035E098 case 6
.text:0035E0A0 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E0A4 25 28 40 00                                   move    $a1, $v0
.text:0035E0A8 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E0AC 93 7B 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035E0B0 00 00 00 00                                   nop
.text:0035E0B4 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E0B8 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035E0BC 44 00 40 10                                   beqz    $v0, def_35E0DC  # jumptable 0035E0DC default case
.text:0035E0C0 00 00 00 00                                   nop
.text:0035E0C4 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E0C8 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E0CC 36 00 02 3C 10 F3 42 24                       li      $v0, jpt_35E0DC
.text:0035E0D4 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E0D8 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E0DC 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E0E0 00 00 00 00                                   nop
.text:0035E0E4                                # ---------------------------------------------------------------------------
.text:0035E0E4
.text:0035E0E4                               loc_35E0E4:                              # jumptable 0035E0DC case 0
.text:0035E0E4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E0E8 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035E0EC 38 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E0F0 00 00 00 00                                   nop
.text:0035E0F4                                # ---------------------------------------------------------------------------
.text:0035E0F4
.text:0035E0F4                               loc_35E0F4:                              # jumptable 0035E0DC case 1
.text:0035E0F4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E0F8 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035E0FC 34 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E100 00 00 00 00                                   nop
.text:0035E104                                # ---------------------------------------------------------------------------
.text:0035E104
.text:0035E104                               loc_35E104:                              # jumptable 0035E0DC case 2
.text:0035E104 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E108 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035E10C 30 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E110 00 00 00 00                                   nop
.text:0035E114                                # ---------------------------------------------------------------------------
.text:0035E114
.text:0035E114                               loc_35E114:                              # jumptable 0035E0DC case 3
.text:0035E114 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E118 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035E11C 2C 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E120 00 00 00 00                                   nop
.text:0035E124                                # ---------------------------------------------------------------------------
.text:0035E124
.text:0035E124                               loc_35E124:                              # jumptable 0035E0DC case 4
.text:0035E124 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E128 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035E12C 28 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E130 00 00 00 00                                   nop
.text:0035E134                                # ---------------------------------------------------------------------------
.text:0035E134
.text:0035E134                               loc_35E134:                              # jumptable 0035E0DC case 5
.text:0035E134 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E138 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035E13C 24 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E140 00 00 00 00                                   nop
.text:0035E144                                # ---------------------------------------------------------------------------
.text:0035E144
.text:0035E144                               loc_35E144:                              # jumptable 0035E0DC case 6
.text:0035E144 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E148 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035E14C 20 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E150 00 00 00 00                                   nop
.text:0035E154                                # ---------------------------------------------------------------------------
.text:0035E154
.text:0035E154                               loc_35E154:                              # jumptable 0035E0DC case 7
.text:0035E154 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E158 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035E15C 1C 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E160 00 00 00 00                                   nop
.text:0035E164                                # ---------------------------------------------------------------------------
.text:0035E164
.text:0035E164                               loc_35E164:                              # jumptable 0035E0DC case 8
.text:0035E164 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E168 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035E16C 18 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E170 00 00 00 00                                   nop
.text:0035E174                                # ---------------------------------------------------------------------------
.text:0035E174
.text:0035E174                               loc_35E174:                              # jumptable 0035E0DC case 9
.text:0035E174 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E178 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035E17C 14 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E180 00 00 00 00                                   nop
.text:0035E184                                # ---------------------------------------------------------------------------
.text:0035E184
.text:0035E184                               loc_35E184:                              # jumptable 0035E0DC case 10
.text:0035E184 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E188 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035E18C 10 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E190 00 00 00 00                                   nop
.text:0035E194                                # ---------------------------------------------------------------------------
.text:0035E194
.text:0035E194                               loc_35E194:                              # jumptable 0035E0DC case 11
.text:0035E194 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E198 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035E19C 0C 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E1A0 00 00 00 00                                   nop
.text:0035E1A4                                # ---------------------------------------------------------------------------
.text:0035E1A4
.text:0035E1A4                               loc_35E1A4:                              # jumptable 0035E0DC case 12
.text:0035E1A4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E1A8 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035E1AC 08 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E1B0 00 00 00 00                                   nop
.text:0035E1B4                                # ---------------------------------------------------------------------------
.text:0035E1B4
.text:0035E1B4                               loc_35E1B4:                              # jumptable 0035E0DC case 13
.text:0035E1B4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E1B8 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035E1BC 04 00 00 10                                   b       def_35E0DC       # jumptable 0035E0DC default case
.text:0035E1C0 00 00 00 00                                   nop
.text:0035E1C4                                # ---------------------------------------------------------------------------
.text:0035E1C4
.text:0035E1C4                               loc_35E1C4:                              # jumptable 0035E0DC case 14
.text:0035E1C4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E1C8 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035E1CC 00 00 00 00                                   nop
.text:0035E1D0
.text:0035E1D0                               def_35E0DC:                              # jumptable 0035E0DC default case
.text:0035E1D0 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E1D4 01 00 42 24                                   addiu   $v0, 1
.text:0035E1D8 40 00 C2 AF                                   sw      $v0, 0x70+var_30($fp)
.text:0035E1DC 21 00 00 10                                   b       def_35E098       # jumptable 0035E098 default case, cases 0,12,13,15
.text:0035E1E0 00 00 00 00                                   nop
.text:0035E1E4                                # ---------------------------------------------------------------------------
.text:0035E1E4
.text:0035E1E4                               loc_35E1E4:                              # jumptable 0035E098 cases 1-5,7,8
.text:0035E1E4 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E1E8 25 28 40 00                                   move    $a1, $v0
.text:0035E1EC 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E1F0 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E1F4 00 00 00 00                                   nop
.text:0035E1F8 1A 00 00 10                                   b       def_35E098       # jumptable 0035E098 default case, cases 0,12,13,15
.text:0035E1FC 00 00 00 00                                   nop
.text:0035E200                                # ---------------------------------------------------------------------------
.text:0035E200
.text:0035E200                               loc_35E200:                              # jumptable 0035E098 cases 10,11,16,17
.text:0035E200 01 00 05 24                                   li      $a1, 1
.text:0035E204 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E208 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035E20C 00 00 00 00                                   nop
.text:0035E210 25 18 40 00                                   move    $v1, $v0
.text:0035E214 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E218 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E21C 11 00 00 10                                   b       def_35E098       # jumptable 0035E098 default case, cases 0,12,13,15
.text:0035E220 00 00 00 00                                   nop
.text:0035E224                                # ---------------------------------------------------------------------------
.text:0035E224
.text:0035E224                               loc_35E224:                              # jumptable 0035E098 cases 9,14
.text:0035E224 98 80 82 93                                   lbu     $v0, currTextParam
.text:0035E228 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035E22C FF 00 63 30                                   andi    $v1, 0xFF
.text:0035E230 98 80 83 A3                                   sb      $v1, currTextParam
.text:0035E234 C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035E238 36 00 02 3C E0 F5 42 24                       li      $v0, textParams
.text:0035E240 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E244 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035E248 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035E24C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035E250 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E254 00 00 00 00                                   nop
.text:0035E258 25 18 40 00                                   move    $v1, $v0
.text:0035E25C 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E260 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E264
.text:0035E264                               def_35E098:                              # jumptable 0035E098 default case, cases 0,12,13,15
.text:0035E264 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E268 04 00 42 24                                   addiu   $v0, 4
.text:0035E26C 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035E270
.text:0035E270                               loc_35E270:
.text:0035E270 44 00 C3 8F                                   lw      $v1, 0x70+var_2C($fp)
.text:0035E274 48 00 C2 8F                                   lw      $v0, 0x70+var_28($fp)
.text:0035E278 7B FF 62 14                                   bne     $v1, $v0, loc_35E068
.text:0035E27C 00 00 00 00                                   nop
.text:0035E280 50 00 C2 8F                                   lw      $v0, 0x70+var_20($fp)
.text:0035E284 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E288 60 F8 6A 24                                   addiu   $a6, $v1, (arguments - 0x360000)
.text:0035E28C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E290 60 F8 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035E294 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E298 60 F8 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035E29C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E2A0 60 F8 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035E2A4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E2A8 60 F8 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035E2AC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E2B0 60 F8 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035E2B4 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E2B8 60 F8 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035E2BC 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E2C0 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035E2C8 38 00 6B 8D                                   lw      $a7, (dword_35F898 - 0x35F860)($a7)
.text:0035E2CC 30 00 AB AF                                   sw      $a7, 0x70+var_40($sp)
.text:0035E2D0 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035E2D8 34 00 6B 8D                                   lw      $a7, (dword_35F894 - 0x35F860)($a7)
.text:0035E2DC 28 00 AB AF                                   sw      $a7, 0x70+var_48($sp)
.text:0035E2E0 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035E2E8 30 00 6B 8D                                   lw      $a7, (dword_35F890 - 0x35F860)($a7)
.text:0035E2EC 20 00 AB AF                                   sw      $a7, 0x70+var_50($sp)
.text:0035E2F0 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035E2F8 2C 00 6B 8D                                   lw      $a7, (dword_35F88C - 0x35F860)($a7)
.text:0035E2FC 18 00 AB AF                                   sw      $a7, 0x70+var_58($sp)
.text:0035E300 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035E308 28 00 6B 8D                                   lw      $a7, (dword_35F888 - 0x35F860)($a7)
.text:0035E30C 10 00 AB AF                                   sw      $a7, 0x70+var_60($sp)
.text:0035E310 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035E318 24 00 6B 8D                                   lw      $a7, (dword_35F884 - 0x35F860)($a7)
.text:0035E31C 08 00 AB AF                                   sw      $a7, 0x70+var_68($sp)
.text:0035E320 36 00 0B 3C 60 F8 6B 25                       li      $a7, arguments
.text:0035E328 20 00 6B 8D                                   lw      $a7, (dword_35F880 - 0x35F860)($a7)
.text:0035E32C 00 00 AB AF                                   sw      $a7, 0x70+var_70($sp)
.text:0035E330 1C 00 4B 8D                                   lw      $a7, (dword_35F87C - 0x35F860)($a6)
.text:0035E334 18 00 2A 8D                                   lw      $a6, (dword_35F878 - 0x35F860)($a5)
.text:0035E338 14 00 09 8D                                   lw      $a5, (dword_35F874 - 0x35F860)($a4)
.text:0035E33C 10 00 E8 8C                                   lw      $a4, (dword_35F870 - 0x35F860)($a3)
.text:0035E340 0C 00 C7 8C                                   lw      $a3, (dword_35F86C - 0x35F860)($a2)
.text:0035E344 08 00 A6 8C                                   lw      $a2, (dword_35F868 - 0x35F860)($a1)
.text:0035E348 04 00 85 8C                                   lw      $a1, (dword_35F864 - 0x35F860)($a0)
.text:0035E34C 60 F8 64 8C                                   lw      $a0, (arguments - 0x360000)($v1)
.text:0035E350 09 F8 40 00                                   jalr    $v0
.text:0035E354 00 00 00 00                                   nop
.text:0035E358 4C 00 C2 AF                                   sw      $v0, 0x70+var_24($fp)
.text:0035E35C 4C 00 C5 8F                                   lw      $a1, 0x70+var_24($fp)
.text:0035E360 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E364 56 7B 0D 0C                                   jal     operator<<(CRunningScript &,ulong)
.text:0035E368 00 00 00 00                                   nop
.text:0035E36C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035E370 00 7B 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035E374 00 00 00 00                                   nop
.text:0035E378 25 10 00 00                                   move    $v0, $zero
.text:0035E37C 25 E8 C0 03                                   move    $sp, $fp
.text:0035E380 78 00 BF DF                                   ld      $ra, 0x70+var_s8($sp)
.text:0035E384 70 00 BE DF                                   ld      $fp, 0x70+var_s0($sp)
.text:0035E388 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035E38C 08 00 E0 03                                   jr      $ra
.text:0035E390 00 00 00 00                                   nop
.text:0035E390                                # } // starts at 35DFC4
.text:0035E390                                # End of function opcode_0AA7(CRunningScript *)
.text:0035E390
.text:0035E394
.text:0035E394                                # =============== S U B R O U T I N E =======================================
.text:0035E394
.text:0035E394                                # Attributes: bp-based frame fpd=0x70
.text:0035E394
.text:0035E394                                # _DWORD __fastcall opcode_0AA8(CRunningScript *)
.text:0035E394                                               .globl opcode_0AA8(CRunningScript *)
.text:0035E394                               opcode_0AA8(CRunningScript *):
.text:0035E394
.text:0035E394                               var_70          = -0x70
.text:0035E394                               var_68          = -0x68
.text:0035E394                               var_60          = -0x60
.text:0035E394                               var_58          = -0x58
.text:0035E394                               var_50          = -0x50
.text:0035E394                               var_48          = -0x48
.text:0035E394                               var_40          = -0x40
.text:0035E394                               var_38          = -0x38
.text:0035E394                               var_30          = -0x30
.text:0035E394                               var_2C          = -0x2C
.text:0035E394                               var_28          = -0x28
.text:0035E394                               var_24          = -0x24
.text:0035E394                               var_20          = -0x20
.text:0035E394                               var_1C          = -0x1C
.text:0035E394                               var_18          = -0x18
.text:0035E394                               var_14          = -0x14
.text:0035E394                               var_10          = -0x10
.text:0035E394                               var_s0          =  0
.text:0035E394                               var_s8          =  8
.text:0035E394
.text:0035E394                                # __unwind {
.text:0035E394 80 FF BD 27                                   addiu   $sp, -0x80
.text:0035E398 78 00 BF FF                                   sd      $ra, 0x70+var_s8($sp)
.text:0035E39C 70 00 BE FF                                   sd      $fp, 0x70+var_s0($sp)
.text:0035E3A0 25 F0 A0 03                                   move    $fp, $sp
.text:0035E3A4 60 00 C4 AF                                   sw      $a0, 0x70+var_10($fp)
.text:0035E3A8 50 00 C2 27                                   addiu   $v0, $fp, 0x70+var_20
.text:0035E3AC 25 28 40 00                                   move    $a1, $v0
.text:0035E3B0 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E3B4 29 7C 0D 0C                                   jal     operator>><ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035E3B8 00 00 00 00                                   nop
.text:0035E3BC 54 00 C3 27                                   addiu   $v1, $fp, 0x70+var_1C
.text:0035E3C0 25 28 60 00                                   move    $a1, $v1
.text:0035E3C4 25 20 40 00                                   move    $a0, $v0
.text:0035E3C8 BD 7B 0D 0C                                   jal     operator>>(CRunningScript &,void *&)
.text:0035E3CC 00 00 00 00                                   nop
.text:0035E3D0 58 00 C3 27                                   addiu   $v1, $fp, 0x70+var_18
.text:0035E3D4 25 28 60 00                                   move    $a1, $v1
.text:0035E3D8 25 20 40 00                                   move    $a0, $v0
.text:0035E3DC 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E3E0 00 00 00 00                                   nop
.text:0035E3E4 5C 00 C3 27                                   addiu   $v1, $fp, 0x70+var_14
.text:0035E3E8 25 28 60 00                                   move    $a1, $v1
.text:0035E3EC 25 20 40 00                                   move    $a0, $v0
.text:0035E3F0 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E3F4 00 00 00 00                                   nop
.text:0035E3F8 58 00 C2 8F                                   lw      $v0, 0x70+var_18($fp)
.text:0035E3FC 10 00 42 2C                                   sltiu   $v0, 0x10
.text:0035E400 03 00 40 14                                   bnez    $v0, loc_35E410
.text:0035E404 00 00 00 00                                   nop
.text:0035E408 0F 00 02 24                                   li      $v0, 0xF
.text:0035E40C 58 00 C2 AF                                   sw      $v0, 0x70+var_18($fp)
.text:0035E410
.text:0035E410                               loc_35E410:
.text:0035E410 5C 00 C2 8F                                   lw      $v0, 0x70+var_14($fp)
.text:0035E414 80 10 02 00                                   sll     $v0, 2
.text:0035E418 5C 00 C2 AF                                   sw      $v0, 0x70+var_14($fp)
.text:0035E41C 58 00 C2 8F                                   lw      $v0, 0x70+var_18($fp)
.text:0035E420 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E424 36 00 02 3C 60 F8 42 24                       li      $v0, arguments
.text:0035E42C 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E430 48 00 C2 AF                                   sw      $v0, 0x70+var_28($fp)
.text:0035E434 40 00 C0 AF                                   sw      $zero, 0x70+var_30($fp)
.text:0035E438 36 00 02 3C 60 F8 42 24                       li      $v0, arguments
.text:0035E440 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035E444 83 00 00 10                                   b       loc_35E654
.text:0035E448 00 00 00 00                                   nop
.text:0035E44C                                # ---------------------------------------------------------------------------
.text:0035E44C
.text:0035E44C                               loc_35E44C:                              # this
.text:0035E44C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E450 9A 7A 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035E454 00 00 00 00                                   nop
.text:0035E458 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035E45C 12 00 43 2C                                   sltiu   $v1, $v0, 0x12   # switch 18 cases
.text:0035E460 79 00 60 10                                   beqz    $v1, def_35E47C  # jumptable 0035E47C default case, cases 0,12,13,15
.text:0035E464 00 00 00 00                                   nop
.text:0035E468 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E46C 36 00 02 3C 4C F3 42 24                       li      $v0, jpt_35E47C
.text:0035E474 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E478 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E47C 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E480 00 00 00 00                                   nop
.text:0035E484                                # ---------------------------------------------------------------------------
.text:0035E484
.text:0035E484                               loc_35E484:                              # jumptable 0035E47C case 6
.text:0035E484 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E488 25 28 40 00                                   move    $a1, $v0
.text:0035E48C 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E490 93 7B 0D 0C                                   jal     operator>>(CRunningScript &,float &)
.text:0035E494 00 00 00 00                                   nop
.text:0035E498 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E49C 0F 00 42 2C                                   sltiu   $v0, 0xF         # switch 15 cases
.text:0035E4A0 44 00 40 10                                   beqz    $v0, def_35E4C0  # jumptable 0035E4C0 default case
.text:0035E4A4 00 00 00 00                                   nop
.text:0035E4A8 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E4AC 80 18 02 00                                   sll     $v1, $v0, 2
.text:0035E4B0 36 00 02 3C 94 F3 42 24                       li      $v0, jpt_35E4C0
.text:0035E4B8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E4BC 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035E4C0 08 00 40 00                                   jr      $v0              # switch jump
.text:0035E4C4 00 00 00 00                                   nop
.text:0035E4C8                                # ---------------------------------------------------------------------------
.text:0035E4C8
.text:0035E4C8                               loc_35E4C8:                              # jumptable 0035E4C0 case 0
.text:0035E4C8 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E4CC 00 00 4C C4                                   lwc1    $f12, 0($v0)
.text:0035E4D0 38 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E4D4 00 00 00 00                                   nop
.text:0035E4D8                                # ---------------------------------------------------------------------------
.text:0035E4D8
.text:0035E4D8                               loc_35E4D8:                              # jumptable 0035E4C0 case 1
.text:0035E4D8 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E4DC 00 00 4D C4                                   lwc1    $f13, 0($v0)
.text:0035E4E0 34 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E4E4 00 00 00 00                                   nop
.text:0035E4E8                                # ---------------------------------------------------------------------------
.text:0035E4E8
.text:0035E4E8                               loc_35E4E8:                              # jumptable 0035E4C0 case 2
.text:0035E4E8 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E4EC 00 00 4E C4                                   lwc1    $f14, 0($v0)
.text:0035E4F0 30 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E4F4 00 00 00 00                                   nop
.text:0035E4F8                                # ---------------------------------------------------------------------------
.text:0035E4F8
.text:0035E4F8                               loc_35E4F8:                              # jumptable 0035E4C0 case 3
.text:0035E4F8 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E4FC 00 00 4F C4                                   lwc1    $f15, 0($v0)
.text:0035E500 2C 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E504 00 00 00 00                                   nop
.text:0035E508                                # ---------------------------------------------------------------------------
.text:0035E508
.text:0035E508                               loc_35E508:                              # jumptable 0035E4C0 case 4
.text:0035E508 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E50C 00 00 50 C4                                   lwc1    $f16, 0($v0)
.text:0035E510 28 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E514 00 00 00 00                                   nop
.text:0035E518                                # ---------------------------------------------------------------------------
.text:0035E518
.text:0035E518                               loc_35E518:                              # jumptable 0035E4C0 case 5
.text:0035E518 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E51C 00 00 51 C4                                   lwc1    $f17, 0($v0)
.text:0035E520 24 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E524 00 00 00 00                                   nop
.text:0035E528                                # ---------------------------------------------------------------------------
.text:0035E528
.text:0035E528                               loc_35E528:                              # jumptable 0035E4C0 case 6
.text:0035E528 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E52C 00 00 52 C4                                   lwc1    $f18, 0($v0)
.text:0035E530 20 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E534 00 00 00 00                                   nop
.text:0035E538                                # ---------------------------------------------------------------------------
.text:0035E538
.text:0035E538                               loc_35E538:                              # jumptable 0035E4C0 case 7
.text:0035E538 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E53C 00 00 53 C4                                   lwc1    $f19, 0($v0)
.text:0035E540 1C 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E544 00 00 00 00                                   nop
.text:0035E548                                # ---------------------------------------------------------------------------
.text:0035E548
.text:0035E548                               loc_35E548:                              # jumptable 0035E4C0 case 8
.text:0035E548 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E54C 00 00 54 C4                                   lwc1    $f20, 0($v0)
.text:0035E550 18 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E554 00 00 00 00                                   nop
.text:0035E558                                # ---------------------------------------------------------------------------
.text:0035E558
.text:0035E558                               loc_35E558:                              # jumptable 0035E4C0 case 9
.text:0035E558 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E55C 00 00 55 C4                                   lwc1    $f21, 0($v0)
.text:0035E560 14 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E564 00 00 00 00                                   nop
.text:0035E568                                # ---------------------------------------------------------------------------
.text:0035E568
.text:0035E568                               loc_35E568:                              # jumptable 0035E4C0 case 10
.text:0035E568 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E56C 00 00 56 C4                                   lwc1    $f22, 0($v0)
.text:0035E570 10 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E574 00 00 00 00                                   nop
.text:0035E578                                # ---------------------------------------------------------------------------
.text:0035E578
.text:0035E578                               loc_35E578:                              # jumptable 0035E4C0 case 11
.text:0035E578 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E57C 00 00 57 C4                                   lwc1    $f23, 0($v0)
.text:0035E580 0C 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E584 00 00 00 00                                   nop
.text:0035E588                                # ---------------------------------------------------------------------------
.text:0035E588
.text:0035E588                               loc_35E588:                              # jumptable 0035E4C0 case 12
.text:0035E588 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E58C 00 00 58 C4                                   lwc1    $f24, 0($v0)
.text:0035E590 08 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E594 00 00 00 00                                   nop
.text:0035E598                                # ---------------------------------------------------------------------------
.text:0035E598
.text:0035E598                               loc_35E598:                              # jumptable 0035E4C0 case 13
.text:0035E598 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E59C 00 00 59 C4                                   lwc1    $f25, 0($v0)
.text:0035E5A0 04 00 00 10                                   b       def_35E4C0       # jumptable 0035E4C0 default case
.text:0035E5A4 00 00 00 00                                   nop
.text:0035E5A8                                # ---------------------------------------------------------------------------
.text:0035E5A8
.text:0035E5A8                               loc_35E5A8:                              # jumptable 0035E4C0 case 14
.text:0035E5A8 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E5AC 00 00 5A C4                                   lwc1    $f26, 0($v0)
.text:0035E5B0 00 00 00 00                                   nop
.text:0035E5B4
.text:0035E5B4                               def_35E4C0:                              # jumptable 0035E4C0 default case
.text:0035E5B4 40 00 C2 8F                                   lw      $v0, 0x70+var_30($fp)
.text:0035E5B8 01 00 42 24                                   addiu   $v0, 1
.text:0035E5BC 40 00 C2 AF                                   sw      $v0, 0x70+var_30($fp)
.text:0035E5C0 21 00 00 10                                   b       def_35E47C       # jumptable 0035E47C default case, cases 0,12,13,15
.text:0035E5C4 00 00 00 00                                   nop
.text:0035E5C8                                # ---------------------------------------------------------------------------
.text:0035E5C8
.text:0035E5C8                               loc_35E5C8:                              # jumptable 0035E47C cases 1-5,7,8
.text:0035E5C8 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E5CC 25 28 40 00                                   move    $a1, $v0
.text:0035E5D0 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E5D4 41 7B 0D 0C                                   jal     operator>>(CRunningScript &,ulong &)
.text:0035E5D8 00 00 00 00                                   nop
.text:0035E5DC 1A 00 00 10                                   b       def_35E47C       # jumptable 0035E47C default case, cases 0,12,13,15
.text:0035E5E0 00 00 00 00                                   nop
.text:0035E5E4                                # ---------------------------------------------------------------------------
.text:0035E5E4
.text:0035E5E4                               loc_35E5E4:                              # jumptable 0035E47C cases 10,11,16,17
.text:0035E5E4 01 00 05 24                                   li      $a1, 1
.text:0035E5E8 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E5EC C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035E5F0 00 00 00 00                                   nop
.text:0035E5F4 25 18 40 00                                   move    $v1, $v0
.text:0035E5F8 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E5FC 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E600 11 00 00 10                                   b       def_35E47C       # jumptable 0035E47C default case, cases 0,12,13,15
.text:0035E604 00 00 00 00                                   nop
.text:0035E608                                # ---------------------------------------------------------------------------
.text:0035E608
.text:0035E608                               loc_35E608:                              # jumptable 0035E47C cases 9,14
.text:0035E608 98 80 82 93                                   lbu     $v0, currTextParam
.text:0035E60C 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035E610 FF 00 63 30                                   andi    $v1, 0xFF
.text:0035E614 98 80 83 A3                                   sb      $v1, currTextParam
.text:0035E618 C0 19 02 00                                   sll     $v1, $v0, 7
.text:0035E61C 36 00 02 3C E0 F5 42 24                       li      $v0, textParams
.text:0035E624 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E628 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035E62C 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035E630 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)  # CRunningScript *
.text:0035E634 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E638 00 00 00 00                                   nop
.text:0035E63C 25 18 40 00                                   move    $v1, $v0
.text:0035E640 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E644 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035E648
.text:0035E648                               def_35E47C:                              # jumptable 0035E47C default case, cases 0,12,13,15
.text:0035E648 44 00 C2 8F                                   lw      $v0, 0x70+var_2C($fp)
.text:0035E64C 04 00 42 24                                   addiu   $v0, 4
.text:0035E650 44 00 C2 AF                                   sw      $v0, 0x70+var_2C($fp)
.text:0035E654
.text:0035E654                               loc_35E654:
.text:0035E654 44 00 C3 8F                                   lw      $v1, 0x70+var_2C($fp)
.text:0035E658 48 00 C2 8F                                   lw      $v0, 0x70+var_28($fp)
.text:0035E65C 7B FF 62 14                                   bne     $v1, $v0, loc_35E44C
.text:0035E660 00 00 00 00                                   nop
.text:0035E664 50 00 C2 8F                                   lw      $v0, 0x70+var_20($fp)
.text:0035E668 54 00 CC 8F                                   lw      $t4, 0x70+var_1C($fp)
.text:0035E66C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E670 60 F8 69 24                                   addiu   $a5, $v1, (arguments - 0x360000)
.text:0035E674 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E678 60 F8 68 24                                   addiu   $a4, $v1, (arguments - 0x360000)
.text:0035E67C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E680 60 F8 67 24                                   addiu   $a3, $v1, (arguments - 0x360000)
.text:0035E684 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E688 60 F8 66 24                                   addiu   $a2, $v1, (arguments - 0x360000)
.text:0035E68C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E690 60 F8 65 24                                   addiu   $a1, $v1, (arguments - 0x360000)
.text:0035E694 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E698 60 F8 64 24                                   addiu   $a0, $v1, (arguments - 0x360000)
.text:0035E69C 36 00 03 3C                                   lui     $v1, 0x36  # '6'
.text:0035E6A0 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035E6A8 38 00 4A 8D                                   lw      $a6, (dword_35F898 - 0x35F860)($a6)
.text:0035E6AC 38 00 AA AF                                   sw      $a6, 0x70+var_38($sp)
.text:0035E6B0 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035E6B8 34 00 4A 8D                                   lw      $a6, (dword_35F894 - 0x35F860)($a6)
.text:0035E6BC 30 00 AA AF                                   sw      $a6, 0x70+var_40($sp)
.text:0035E6C0 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035E6C8 30 00 4A 8D                                   lw      $a6, (dword_35F890 - 0x35F860)($a6)
.text:0035E6CC 28 00 AA AF                                   sw      $a6, 0x70+var_48($sp)
.text:0035E6D0 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035E6D8 2C 00 4A 8D                                   lw      $a6, (dword_35F88C - 0x35F860)($a6)
.text:0035E6DC 20 00 AA AF                                   sw      $a6, 0x70+var_50($sp)
.text:0035E6E0 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035E6E8 28 00 4A 8D                                   lw      $a6, (dword_35F888 - 0x35F860)($a6)
.text:0035E6EC 18 00 AA AF                                   sw      $a6, 0x70+var_58($sp)
.text:0035E6F0 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035E6F8 24 00 4A 8D                                   lw      $a6, (dword_35F884 - 0x35F860)($a6)
.text:0035E6FC 10 00 AA AF                                   sw      $a6, 0x70+var_60($sp)
.text:0035E700 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035E708 20 00 4A 8D                                   lw      $a6, (dword_35F880 - 0x35F860)($a6)
.text:0035E70C 08 00 AA AF                                   sw      $a6, 0x70+var_68($sp)
.text:0035E710 36 00 0A 3C 60 F8 4A 25                       li      $a6, arguments
.text:0035E718 1C 00 4A 8D                                   lw      $a6, (dword_35F87C - 0x35F860)($a6)
.text:0035E71C 00 00 AA AF                                   sw      $a6, 0x70+var_70($sp)
.text:0035E720 18 00 2B 8D                                   lw      $a7, (dword_35F878 - 0x35F860)($a5)
.text:0035E724 14 00 0A 8D                                   lw      $a6, (dword_35F874 - 0x35F860)($a4)
.text:0035E728 10 00 E9 8C                                   lw      $a5, (dword_35F870 - 0x35F860)($a3)
.text:0035E72C 0C 00 C8 8C                                   lw      $a4, (dword_35F86C - 0x35F860)($a2)
.text:0035E730 08 00 A7 8C                                   lw      $a3, (dword_35F868 - 0x35F860)($a1)
.text:0035E734 04 00 86 8C                                   lw      $a2, (dword_35F864 - 0x35F860)($a0)
.text:0035E738 60 F8 65 8C                                   lw      $a1, (arguments - 0x360000)($v1)
.text:0035E73C 25 20 80 01                                   move    $a0, $t4
.text:0035E740 09 F8 40 00                                   jalr    $v0
.text:0035E744 00 00 00 00                                   nop
.text:0035E748 4C 00 C2 AF                                   sw      $v0, 0x70+var_24($fp)
.text:0035E74C 4C 00 C5 8F                                   lw      $a1, 0x70+var_24($fp)
.text:0035E750 60 00 C4 8F                                   lw      $a0, 0x70+var_10($fp)
.text:0035E754 56 7B 0D 0C                                   jal     operator<<(CRunningScript &,ulong)
.text:0035E758 00 00 00 00                                   nop
.text:0035E75C 25 10 00 00                                   move    $v0, $zero
.text:0035E760 25 E8 C0 03                                   move    $sp, $fp
.text:0035E764 78 00 BF DF                                   ld      $ra, 0x70+var_s8($sp)
.text:0035E768 70 00 BE DF                                   ld      $fp, 0x70+var_s0($sp)
.text:0035E76C 80 00 BD 27                                   addiu   $sp, 0x80
.text:0035E770 08 00 E0 03                                   jr      $ra
.text:0035E774 00 00 00 00                                   nop
.text:0035E774                                # } // starts at 35E394
.text:0035E774                                # End of function opcode_0AA8(CRunningScript *)
.text:0035E774
.text:0035E778
.text:0035E778                                # =============== S U B R O U T I N E =======================================
.text:0035E778
.text:0035E778                                # Attributes: bp-based frame fpd=0x28
.text:0035E778
.text:0035E778                                # _DWORD __fastcall opcode_0AC6(CRunningScript *)
.text:0035E778                                               .globl opcode_0AC6(CRunningScript *)
.text:0035E778                               opcode_0AC6(CRunningScript *):
.text:0035E778
.text:0035E778                               var_28          = -0x28
.text:0035E778                               var_18          = -0x18
.text:0035E778                               var_s0          =  0
.text:0035E778                               var_s8          =  8
.text:0035E778                               var_s10         =  0x10
.text:0035E778
.text:0035E778                                # __unwind {
.text:0035E778 C0 FF BD 27                                   addiu   $sp, -0x40
.text:0035E77C 38 00 BF FF                                   sd      $ra, 0x28+var_s10($sp)
.text:0035E780 30 00 BE FF                                   sd      $fp, 0x28+var_s8($sp)
.text:0035E784 28 00 B0 FF                                   sd      $s0, 0x28+var_s0($sp)
.text:0035E788 25 F0 A0 03                                   move    $fp, $sp
.text:0035E78C 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035E790 25 28 C0 03                                   move    $a1, $fp
.text:0035E794 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)
.text:0035E798 6A 7B 0D 0C                                   jal     operator>>(CRunningScript &,int &)
.text:0035E79C 00 00 00 00                                   nop
.text:0035E7A0 10 00 D0 8F                                   lw      $s0, 0x28+var_18($fp)
.text:0035E7A4 00 00 C2 8F                                   lw      $v0, 0x28+var_28($fp)
.text:0035E7A8 0A 00 41 04                                   bgez    $v0, loc_35E7D4
.text:0035E7AC 00 00 00 00                                   nop
.text:0035E7B0 10 00 C4 8F                                   lw      $a0, 0x28+var_18($fp)  # this
.text:0035E7B4 8F 7A 0D 0C                                   jal     CRunningScript::GetBasePointer(void)
.text:0035E7B8 00 00 00 00                                   nop
.text:0035E7BC 25 18 40 00                                   move    $v1, $v0
.text:0035E7C0 00 00 C2 8F                                   lw      $v0, 0x28+var_28($fp)
.text:0035E7C4 23 10 02 00                                   negu    $v0, $v0
.text:0035E7C8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035E7CC 05 00 00 10                                   b       loc_35E7E4
.text:0035E7D0 00 00 00 00                                   nop
.text:0035E7D4                                # ---------------------------------------------------------------------------
.text:0035E7D4
.text:0035E7D4                               loc_35E7D4:
.text:0035E7D4 6B 00 02 3C F0 1F 42 8C                       lw      $v0, CTheScripts_ScriptSpace
.text:0035E7DC 00 00 C3 8F                                   lw      $v1, 0x28+var_28($fp)
.text:0035E7E0 21 10 43 00                                   addu    $v0, $v1
.text:0035E7E4
.text:0035E7E4                               loc_35E7E4:
.text:0035E7E4 25 28 40 00                                   move    $a1, $v0
.text:0035E7E8 25 20 00 02                                   move    $a0, $s0
.text:0035E7EC 3F 7C 0D 0C                                   jal     operator<<<uchar>(CRunningScript &,uchar *)
.text:0035E7F0 00 00 00 00                                   nop
.text:0035E7F4 25 10 00 00                                   move    $v0, $zero
.text:0035E7F8 25 E8 C0 03                                   move    $sp, $fp
.text:0035E7FC 38 00 BF DF                                   ld      $ra, 0x28+var_s10($sp)
.text:0035E800 30 00 BE DF                                   ld      $fp, 0x28+var_s8($sp)
.text:0035E804 28 00 B0 DF                                   ld      $s0, 0x28+var_s0($sp)
.text:0035E808 40 00 BD 27                                   addiu   $sp, 0x40
.text:0035E80C 08 00 E0 03                                   jr      $ra
.text:0035E810 00 00 00 00                                   nop
.text:0035E810                                # } // starts at 35E778
.text:0035E810                                # End of function opcode_0AC6(CRunningScript *)
.text:0035E810
.text:0035E814
.text:0035E814                                # =============== S U B R O U T I N E =======================================
.text:0035E814
.text:0035E814                                # Attributes: bp-based frame fpd=0x18
.text:0035E814
.text:0035E814                                # _DWORD __fastcall opcode_0AC7(CRunningScript *)
.text:0035E814                                               .globl opcode_0AC7(CRunningScript *)
.text:0035E814                               opcode_0AC7(CRunningScript *):
.text:0035E814
.text:0035E814                               var_18          = -0x18
.text:0035E814                               var_s0          =  0
.text:0035E814                               var_s8          =  8
.text:0035E814                               var_s10         =  0x10
.text:0035E814
.text:0035E814                                # __unwind {
.text:0035E814 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035E818 28 00 BF FF                                   sd      $ra, 0x18+var_s10($sp)
.text:0035E81C 20 00 BE FF                                   sd      $fp, 0x18+var_s8($sp)
.text:0035E820 18 00 B0 FF                                   sd      $s0, 0x18+var_s0($sp)
.text:0035E824 25 F0 A0 03                                   move    $fp, $sp
.text:0035E828 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035E82C 00 00 D0 8F                                   lw      $s0, 0x18+var_18($fp)
.text:0035E830 01 00 05 24                                   li      $a1, 1
.text:0035E834 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)
.text:0035E838 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035E83C 00 00 00 00                                   nop
.text:0035E840 25 28 40 00                                   move    $a1, $v0
.text:0035E844 25 20 00 02                                   move    $a0, $s0
.text:0035E848 53 7C 0D 0C                                   jal     operator<<<SCRIPT_VAR>(CRunningScript &,SCRIPT_VAR *)
.text:0035E84C 00 00 00 00                                   nop
.text:0035E850 25 10 00 00                                   move    $v0, $zero
.text:0035E854 25 E8 C0 03                                   move    $sp, $fp
.text:0035E858 28 00 BF DF                                   ld      $ra, 0x18+var_s10($sp)
.text:0035E85C 20 00 BE DF                                   ld      $fp, 0x18+var_s8($sp)
.text:0035E860 18 00 B0 DF                                   ld      $s0, 0x18+var_s0($sp)
.text:0035E864 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035E868 08 00 E0 03                                   jr      $ra
.text:0035E86C 00 00 00 00                                   nop
.text:0035E86C                                # } // starts at 35E814
.text:0035E86C                                # End of function opcode_0AC7(CRunningScript *)
.text:0035E86C
.text:0035E870
.text:0035E870                                # =============== S U B R O U T I N E =======================================
.text:0035E870
.text:0035E870                                # Attributes: bp-based frame fpd=0x10
.text:0035E870
.text:0035E870                                # _DWORD __fastcall opcode_0ACA(CRunningScript *)
.text:0035E870                                               .globl opcode_0ACA(CRunningScript *)
.text:0035E870                               opcode_0ACA(CRunningScript *):
.text:0035E870
.text:0035E870                               var_10          = -0x10
.text:0035E870                               var_s0          =  0
.text:0035E870                               var_s8          =  8
.text:0035E870
.text:0035E870                                # __unwind {
.text:0035E870 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035E874 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035E878 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035E87C 25 F0 A0 03                                   move    $fp, $sp
.text:0035E880 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035E884 25 30 00 00                                   move    $a2, $zero       # unsigned __int8
.text:0035E888 25 28 00 00                                   move    $a1, $zero       # char *
.text:0035E88C 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)  # CRunningScript *
.text:0035E890 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E894 00 00 00 00                                   nop
.text:0035E898 25 38 00 00                                   move    $a3, $zero       # int
.text:0035E89C 25 30 00 00                                   move    $a2, $zero       # int
.text:0035E8A0 25 28 00 00                                   move    $a1, $zero       # int
.text:0035E8A4 25 20 40 00                                   move    $a0, $v0         # char *
.text:0035E8A8 5C A4 0A 0C                                   jal     PrintHelp(char *,int,int,int)
.text:0035E8AC 00 00 00 00                                   nop
.text:0035E8B0 25 10 00 00                                   move    $v0, $zero
.text:0035E8B4 25 E8 C0 03                                   move    $sp, $fp
.text:0035E8B8 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035E8BC 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035E8C0 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035E8C4 08 00 E0 03                                   jr      $ra
.text:0035E8C8 00 00 00 00                                   nop
.text:0035E8C8                                # } // starts at 35E870
.text:0035E8C8                                # End of function opcode_0ACA(CRunningScript *)
.text:0035E8C8
.text:0035E8CC
.text:0035E8CC                                # =============== S U B R O U T I N E =======================================
.text:0035E8CC
.text:0035E8CC                                # Attributes: bp-based frame fpd=0x110
.text:0035E8CC
.text:0035E8CC                                # _DWORD __fastcall opcode_0ACE(CRunningScript *)
.text:0035E8CC                                               .globl opcode_0ACE(CRunningScript *)
.text:0035E8CC                               opcode_0ACE(CRunningScript *):
.text:0035E8CC
.text:0035E8CC                               var_90          = -0x90
.text:0035E8CC                               var_10          = -0x10
.text:0035E8CC                               var_s0          =  0
.text:0035E8CC                               var_s8          =  8
.text:0035E8CC
.text:0035E8CC                                # __unwind {
.text:0035E8CC E0 FE BD 27                                   addiu   $sp, -0x120
.text:0035E8D0 18 01 BF FF                                   sd      $ra, 0x110+var_s8($sp)
.text:0035E8D4 10 01 BE FF                                   sd      $fp, 0x110+var_s0($sp)
.text:0035E8D8 25 F0 A0 03                                   move    $fp, $sp
.text:0035E8DC 00 01 C4 AF                                   sw      $a0, 0x110+var_10($fp)
.text:0035E8E0 80 00 06 24                                   li      $a2, 0x80        # unsigned __int8
.text:0035E8E4 25 28 C0 03                                   move    $a1, $fp         # char *
.text:0035E8E8 00 01 C4 8F                                   lw      $a0, 0x110+var_10($fp)  # CRunningScript *
.text:0035E8EC FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E8F0 00 00 00 00                                   nop
.text:0035E8F4 80 00 C2 27                                   addiu   $v0, $fp, 0x110+var_90
.text:0035E8F8 25 38 C0 03                                   move    $a3, $fp         # char *
.text:0035E8FC 80 00 06 24                                   li      $a2, 0x80        # unsigned int
.text:0035E900 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035E904 00 01 C4 8F                                   lw      $a0, 0x110+var_10($fp)  # CRunningScript *
.text:0035E908 6B 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035E90C 00 00 00 00                                   nop
.text:0035E910 80 00 C2 27                                   addiu   $v0, $fp, 0x110+var_90
.text:0035E914 25 38 00 00                                   move    $a3, $zero       # int
.text:0035E918 25 30 00 00                                   move    $a2, $zero       # int
.text:0035E91C 25 28 00 00                                   move    $a1, $zero       # int
.text:0035E920 25 20 40 00                                   move    $a0, $v0         # char *
.text:0035E924 5C A4 0A 0C                                   jal     PrintHelp(char *,int,int,int)
.text:0035E928 00 00 00 00                                   nop
.text:0035E92C 00 01 C4 8F                                   lw      $a0, 0x110+var_10($fp)  # CRunningScript *
.text:0035E930 00 7B 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035E934 00 00 00 00                                   nop
.text:0035E938 25 10 00 00                                   move    $v0, $zero
.text:0035E93C 25 E8 C0 03                                   move    $sp, $fp
.text:0035E940 18 01 BF DF                                   ld      $ra, 0x110+var_s8($sp)
.text:0035E944 10 01 BE DF                                   ld      $fp, 0x110+var_s0($sp)
.text:0035E948 20 01 BD 27                                   addiu   $sp, 0x120
.text:0035E94C 08 00 E0 03                                   jr      $ra
.text:0035E950 00 00 00 00                                   nop
.text:0035E950                                # } // starts at 35E8CC
.text:0035E950                                # End of function opcode_0ACE(CRunningScript *)
.text:0035E950
.text:0035E954
.text:0035E954                                # =============== S U B R O U T I N E =======================================
.text:0035E954
.text:0035E954                                # Attributes: bp-based frame fpd=0xA0
.text:0035E954
.text:0035E954                                # _DWORD __fastcall opcode_0AD3(CRunningScript *)
.text:0035E954                                               .globl opcode_0AD3(CRunningScript *)
.text:0035E954                               opcode_0AD3(CRunningScript *):
.text:0035E954
.text:0035E954                               var_20          = -0x20
.text:0035E954                               var_10          = -0x10
.text:0035E954                               var_s0          =  0
.text:0035E954                               var_s8          =  8
.text:0035E954
.text:0035E954                                # __unwind {
.text:0035E954 50 FF BD 27                                   addiu   $sp, -0xB0
.text:0035E958 A8 00 BF FF                                   sd      $ra, 0xA0+var_s8($sp)
.text:0035E95C A0 00 BE FF                                   sd      $fp, 0xA0+var_s0($sp)
.text:0035E960 25 F0 A0 03                                   move    $fp, $sp
.text:0035E964 90 00 C4 AF                                   sw      $a0, 0xA0+var_10($fp)
.text:0035E968 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)  # this
.text:0035E96C 9A 7A 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035E970 00 00 00 00                                   nop
.text:0035E974 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035E978 0B 00 40 10                                   beqz    $v0, loc_35E9A8
.text:0035E97C 00 00 00 00                                   nop
.text:0035E980 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)  # this
.text:0035E984 9A 7A 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035E988 00 00 00 00                                   nop
.text:0035E98C 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035E990 09 00 42 2C                                   sltiu   $v0, 9
.text:0035E994 04 00 40 10                                   beqz    $v0, loc_35E9A8
.text:0035E998 00 00 00 00                                   nop
.text:0035E99C 01 00 02 24                                   li      $v0, 1
.text:0035E9A0 02 00 00 10                                   b       loc_35E9AC
.text:0035E9A4 00 00 00 00                                   nop
.text:0035E9A8                                # ---------------------------------------------------------------------------
.text:0035E9A8
.text:0035E9A8                               loc_35E9A8:
.text:0035E9A8 25 10 00 00                                   move    $v0, $zero
.text:0035E9AC
.text:0035E9AC                               loc_35E9AC:
.text:0035E9AC 08 00 40 10                                   beqz    $v0, loc_35E9D0
.text:0035E9B0 00 00 00 00                                   nop
.text:0035E9B4 80 00 C2 27                                   addiu   $v0, $fp, 0xA0+var_20
.text:0035E9B8 25 28 40 00                                   move    $a1, $v0
.text:0035E9BC 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)
.text:0035E9C0 A8 7B 0D 0C                                   jal     operator>>(CRunningScript &,char *&)
.text:0035E9C4 00 00 00 00                                   nop
.text:0035E9C8 06 00 00 10                                   b       loc_35E9E4
.text:0035E9CC 00 00 00 00                                   nop
.text:0035E9D0                                # ---------------------------------------------------------------------------
.text:0035E9D0
.text:0035E9D0                               loc_35E9D0:
.text:0035E9D0 01 00 05 24                                   li      $a1, 1
.text:0035E9D4 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)
.text:0035E9D8 C0 E0 07 0C                                   jal     GetScriptParamPointer(CRunningScript *,int)
.text:0035E9DC 00 00 00 00                                   nop
.text:0035E9E0 80 00 C2 AF                                   sw      $v0, 0xA0+var_20($fp)
.text:0035E9E4
.text:0035E9E4                               loc_35E9E4:                              # unsigned __int8
.text:0035E9E4 80 00 06 24                                   li      $a2, 0x80
.text:0035E9E8 25 28 C0 03                                   move    $a1, $fp         # char *
.text:0035E9EC 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)  # CRunningScript *
.text:0035E9F0 FA 71 0D 0C                                   jal     readString(CRunningScript *,char *,uchar)
.text:0035E9F4 00 00 00 00                                   nop
.text:0035E9F8 80 00 C2 8F                                   lw      $v0, 0xA0+var_20($fp)
.text:0035E9FC 25 38 C0 03                                   move    $a3, $fp         # char *
.text:0035EA00 FF FF 06 24                                   li      $a2, 0xFFFFFFFF  # unsigned int
.text:0035EA04 25 28 40 00                                   move    $a1, $v0         # char *
.text:0035EA08 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)  # CRunningScript *
.text:0035EA0C 6B 72 0D 0C                                   jal     format(CRunningScript *,char *,uint,char const*)
.text:0035EA10 00 00 00 00                                   nop
.text:0035EA14 90 00 C4 8F                                   lw      $a0, 0xA0+var_10($fp)  # CRunningScript *
.text:0035EA18 00 7B 0D 0C                                   jal     SkipUnusedParameters(CRunningScript *)
.text:0035EA1C 00 00 00 00                                   nop
.text:0035EA20 25 10 00 00                                   move    $v0, $zero
.text:0035EA24 25 E8 C0 03                                   move    $sp, $fp
.text:0035EA28 A8 00 BF DF                                   ld      $ra, 0xA0+var_s8($sp)
.text:0035EA2C A0 00 BE DF                                   ld      $fp, 0xA0+var_s0($sp)
.text:0035EA30 B0 00 BD 27                                   addiu   $sp, 0xB0
.text:0035EA34 08 00 E0 03                                   jr      $ra
.text:0035EA38 00 00 00 00                                   nop
.text:0035EA38                                # } // starts at 35E954
.text:0035EA38                                # End of function opcode_0AD3(CRunningScript *)
.text:0035EA38
.text:0035EA3C
.text:0035EA3C                                # =============== S U B R O U T I N E =======================================
.text:0035EA3C
.text:0035EA3C                                # Attributes: bp-based frame fpd=0x18
.text:0035EA3C
.text:0035EA3C                                # _DWORD CRunningScript::GetBasePointer(CRunningScript *__hidden this)
.text:0035EA3C                                               .globl CRunningScript::GetBasePointer(void)  # weak
.text:0035EA3C                               CRunningScript::GetBasePointer(void):
.text:0035EA3C
.text:0035EA3C                               var_18          = -0x18
.text:0035EA3C                               var_s0          =  0
.text:0035EA3C
.text:0035EA3C                                # __unwind {
.text:0035EA3C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EA40 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035EA44 25 F0 A0 03                                   move    $fp, $sp
.text:0035EA48 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035EA4C 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035EA50 10 00 42 8C                                   lw      $v0, 0x10($v0)
.text:0035EA54 25 E8 C0 03                                   move    $sp, $fp
.text:0035EA58 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035EA5C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EA60 08 00 E0 03                                   jr      $ra
.text:0035EA64 00 00 00 00                                   nop
.text:0035EA64                                # } // starts at 35EA3C
.text:0035EA64                                # End of function CRunningScript::GetBasePointer(void)
.text:0035EA64
.text:0035EA68
.text:0035EA68                                # =============== S U B R O U T I N E =======================================
.text:0035EA68
.text:0035EA68                                # Attributes: bp-based frame fpd=0x18
.text:0035EA68
.text:0035EA68                                # _DWORD CRunningScript::GetBytePointer(CRunningScript *__hidden this)
.text:0035EA68                                               .globl CRunningScript::GetBytePointer(void)  # weak
.text:0035EA68                               CRunningScript::GetBytePointer(void):
.text:0035EA68
.text:0035EA68                               var_18          = -0x18
.text:0035EA68                               var_s0          =  0
.text:0035EA68
.text:0035EA68                                # __unwind {
.text:0035EA68 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EA6C 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035EA70 25 F0 A0 03                                   move    $fp, $sp
.text:0035EA74 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035EA78 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035EA7C 14 00 42 8C                                   lw      $v0, 0x14($v0)
.text:0035EA80 25 E8 C0 03                                   move    $sp, $fp
.text:0035EA84 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035EA88 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EA8C 08 00 E0 03                                   jr      $ra
.text:0035EA90 00 00 00 00                                   nop
.text:0035EA90                                # } // starts at 35EA68
.text:0035EA90                                # End of function CRunningScript::GetBytePointer(void)
.text:0035EA90
.text:0035EA94
.text:0035EA94                                # =============== S U B R O U T I N E =======================================
.text:0035EA94
.text:0035EA94                                # Attributes: bp-based frame fpd=0x18
.text:0035EA94
.text:0035EA94                                # _DWORD __fastcall CRunningScript::SetIp(CRunningScript *__hidden this, void *)
.text:0035EA94                                               .globl CRunningScript::SetIp(void *)  # weak
.text:0035EA94                               CRunningScript::SetIp(void *):
.text:0035EA94
.text:0035EA94                               var_18          = -0x18
.text:0035EA94                               var_14          = -0x14
.text:0035EA94                               var_s0          =  0
.text:0035EA94
.text:0035EA94                                # __unwind {
.text:0035EA94 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EA98 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035EA9C 25 F0 A0 03                                   move    $fp, $sp
.text:0035EAA0 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035EAA4 04 00 C5 AF                                   sw      $a1, 0x18+var_14($fp)
.text:0035EAA8 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035EAAC 04 00 C3 8F                                   lw      $v1, 0x18+var_14($fp)
.text:0035EAB0 14 00 43 AC                                   sw      $v1, 0x14($v0)
.text:0035EAB4 00 00 00 00                                   nop
.text:0035EAB8 25 E8 C0 03                                   move    $sp, $fp
.text:0035EABC 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035EAC0 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EAC4 08 00 E0 03                                   jr      $ra
.text:0035EAC8 00 00 00 00                                   nop
.text:0035EAC8                                # } // starts at 35EA94
.text:0035EAC8                                # End of function CRunningScript::SetIp(void *)
.text:0035EAC8
.text:0035EACC
.text:0035EACC                                # =============== S U B R O U T I N E =======================================
.text:0035EACC
.text:0035EACC                                # Attributes: bp-based frame fpd=0x18
.text:0035EACC
.text:0035EACC                                # _DWORD CRunningScript::GetConditionResult(CRunningScript *__hidden this)
.text:0035EACC                                               .globl CRunningScript::GetConditionResult(void)  # weak
.text:0035EACC                               CRunningScript::GetConditionResult(void):
.text:0035EACC
.text:0035EACC                               var_18          = -0x18
.text:0035EACC                               var_s0          =  0
.text:0035EACC
.text:0035EACC                                # __unwind {
.text:0035EACC E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EAD0 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035EAD4 25 F0 A0 03                                   move    $fp, $sp
.text:0035EAD8 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035EADC 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035EAE0 C5 00 42 90                                   lbu     $v0, 0xC5($v0)
.text:0035EAE4 2B 10 02 00                                   sltu    $v0, $zero, $v0
.text:0035EAE8 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035EAEC 25 E8 C0 03                                   move    $sp, $fp
.text:0035EAF0 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035EAF4 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EAF8 08 00 E0 03                                   jr      $ra
.text:0035EAFC 00 00 00 00                                   nop
.text:0035EAFC                                # } // starts at 35EACC
.text:0035EAFC                                # End of function CRunningScript::GetConditionResult(void)
.text:0035EAFC
.text:0035EB00
.text:0035EB00                                # =============== S U B R O U T I N E =======================================
.text:0035EB00
.text:0035EB00                                # Attributes: bp-based frame fpd=0x28
.text:0035EB00
.text:0035EB00                                # _DWORD CRunningScript::ReadDataByte(CRunningScript *__hidden this)
.text:0035EB00                                               .globl CRunningScript::ReadDataByte(void)  # weak
.text:0035EB00                               CRunningScript::ReadDataByte(void):
.text:0035EB00
.text:0035EB00                               var_28          = -0x28
.text:0035EB00                               var_18          = -0x18
.text:0035EB00                               var_s0          =  0
.text:0035EB00
.text:0035EB00                                # __unwind {
.text:0035EB00 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EB04 28 00 BE FF                                   sd      $fp, 0x28+var_s0($sp)
.text:0035EB08 25 F0 A0 03                                   move    $fp, $sp
.text:0035EB0C 10 00 C4 AF                                   sw      $a0, 0x28+var_18($fp)
.text:0035EB10 10 00 C2 8F                                   lw      $v0, 0x28+var_18($fp)
.text:0035EB14 14 00 42 8C                                   lw      $v0, 0x14($v0)
.text:0035EB18 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035EB1C 00 00 C2 A3                                   sb      $v0, 0x28+var_28($fp)
.text:0035EB20 10 00 C2 8F                                   lw      $v0, 0x28+var_18($fp)
.text:0035EB24 14 00 42 8C                                   lw      $v0, 0x14($v0)
.text:0035EB28 01 00 43 24                                   addiu   $v1, $v0, 1
.text:0035EB2C 10 00 C2 8F                                   lw      $v0, 0x28+var_18($fp)
.text:0035EB30 14 00 43 AC                                   sw      $v1, 0x14($v0)
.text:0035EB34 00 00 C2 83                                   lb      $v0, 0x28+var_28($fp)
.text:0035EB38 25 E8 C0 03                                   move    $sp, $fp
.text:0035EB3C 28 00 BE DF                                   ld      $fp, 0x28+var_s0($sp)
.text:0035EB40 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035EB44 08 00 E0 03                                   jr      $ra
.text:0035EB48 00 00 00 00                                   nop
.text:0035EB48                                # } // starts at 35EB00
.text:0035EB48                                # End of function CRunningScript::ReadDataByte(void)
.text:0035EB48
.text:0035EB4C
.text:0035EB4C                                # =============== S U B R O U T I N E =======================================
.text:0035EB4C
.text:0035EB4C                                # Attributes: bp-based frame fpd=0x18
.text:0035EB4C
.text:0035EB4C                                # _DWORD __fastcall CRunningScript::PushStack(CRunningScript *__hidden this, unsigned __int8 *)
.text:0035EB4C                                               .globl CRunningScript::PushStack(unsigned char *)  # weak
.text:0035EB4C                               CRunningScript::PushStack(unsigned char *):
.text:0035EB4C
.text:0035EB4C                               var_18          = -0x18
.text:0035EB4C                               var_14          = -0x14
.text:0035EB4C                               var_s0          =  0
.text:0035EB4C
.text:0035EB4C                                # __unwind {
.text:0035EB4C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EB50 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035EB54 25 F0 A0 03                                   move    $fp, $sp
.text:0035EB58 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035EB5C 04 00 C5 AF                                   sw      $a1, 0x18+var_14($fp)
.text:0035EB60 04 00 C3 8F                                   lw      $v1, 0x18+var_14($fp)
.text:0035EB64 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035EB68 38 00 42 94                                   lhu     $v0, 0x38($v0)
.text:0035EB6C 01 00 44 24                                   addiu   $a0, $v0, 1
.text:0035EB70 FF FF 85 30                                   andi    $a1, $a0, 0xFFFF
.text:0035EB74 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)
.text:0035EB78 38 00 85 A4                                   sh      $a1, 0x38($a0)
.text:0035EB7C 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)
.text:0035EB80 06 00 42 24                                   addiu   $v0, 6
.text:0035EB84 80 10 02 00                                   sll     $v0, 2
.text:0035EB88 21 10 82 00                                   addu    $v0, $a0, $v0
.text:0035EB8C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035EB90 00 00 00 00                                   nop
.text:0035EB94 25 E8 C0 03                                   move    $sp, $fp
.text:0035EB98 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035EB9C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EBA0 08 00 E0 03                                   jr      $ra
.text:0035EBA4 00 00 00 00                                   nop
.text:0035EBA4                                # } // starts at 35EB4C
.text:0035EBA4                                # End of function CRunningScript::PushStack(uchar *)
.text:0035EBA4
.text:0035EBA8
.text:0035EBA8                                # =============== S U B R O U T I N E =======================================
.text:0035EBA8
.text:0035EBA8                                # Attributes: bp-based frame fpd=0x18
.text:0035EBA8
.text:0035EBA8                                # _DWORD CRunningScript::PopStack(CRunningScript *__hidden this)
.text:0035EBA8                                               .globl CRunningScript::PopStack(void)  # weak
.text:0035EBA8                               CRunningScript::PopStack(void):
.text:0035EBA8
.text:0035EBA8                               var_18          = -0x18
.text:0035EBA8                               var_s0          =  0
.text:0035EBA8
.text:0035EBA8                                # __unwind {
.text:0035EBA8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EBAC 18 00 BE FF                                   sd      $fp, 0x18+var_s0($sp)
.text:0035EBB0 25 F0 A0 03                                   move    $fp, $sp
.text:0035EBB4 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035EBB8 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035EBBC 38 00 42 94                                   lhu     $v0, 0x38($v0)
.text:0035EBC0 FF FF 42 24                                   addiu   $v0, -1
.text:0035EBC4 FF FF 43 30                                   andi    $v1, $v0, 0xFFFF
.text:0035EBC8 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035EBCC 38 00 43 A4                                   sh      $v1, 0x38($v0)
.text:0035EBD0 00 00 C2 8F                                   lw      $v0, 0x18+var_18($fp)
.text:0035EBD4 38 00 42 94                                   lhu     $v0, 0x38($v0)
.text:0035EBD8 00 00 C3 8F                                   lw      $v1, 0x18+var_18($fp)
.text:0035EBDC 06 00 42 24                                   addiu   $v0, 6
.text:0035EBE0 80 10 02 00                                   sll     $v0, 2
.text:0035EBE4 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035EBE8 00 00 42 8C                                   lw      $v0, 0($v0)
.text:0035EBEC 25 E8 C0 03                                   move    $sp, $fp
.text:0035EBF0 18 00 BE DF                                   ld      $fp, 0x18+var_s0($sp)
.text:0035EBF4 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EBF8 08 00 E0 03                                   jr      $ra
.text:0035EBFC 00 00 00 00                                   nop
.text:0035EBFC                                # } // starts at 35EBA8
.text:0035EBFC                                # End of function CRunningScript::PopStack(void)
.text:0035EBFC
.text:0035EC00
.text:0035EC00                                # =============== S U B R O U T I N E =======================================
.text:0035EC00
.text:0035EC00                                # Attributes: bp-based frame fpd=0x10
.text:0035EC00
.text:0035EC00                                # _DWORD __fastcall SkipUnusedParameters(CRunningScript *)
.text:0035EC00                                               .globl SkipUnusedParameters(CRunningScript *)  # weak
.text:0035EC00                               SkipUnusedParameters(CRunningScript *):
.text:0035EC00
.text:0035EC00                               var_10          = -0x10
.text:0035EC00                               var_s0          =  0
.text:0035EC00                               var_s8          =  8
.text:0035EC00
.text:0035EC00                                # __unwind {
.text:0035EC00 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EC04 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EC08 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035EC0C 25 F0 A0 03                                   move    $fp, $sp
.text:0035EC10 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035EC14 05 00 00 10                                   b       loc_35EC2C
.text:0035EC18 00 00 00 00                                   nop
.text:0035EC1C                                # ---------------------------------------------------------------------------
.text:0035EC1C
.text:0035EC1C                               loc_35EC1C:
.text:0035EC1C 01 00 05 24                                   li      $a1, 1
.text:0035EC20 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035EC24 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035EC28 00 00 00 00                                   nop
.text:0035EC2C
.text:0035EC2C                               loc_35EC2C:                              # this
.text:0035EC2C 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035EC30 9A 7A 0D 0C                                   jal     CRunningScript::GetBytePointer(void)
.text:0035EC34 00 00 00 00                                   nop
.text:0035EC38 00 00 42 90                                   lbu     $v0, 0($v0)
.text:0035EC3C 2B 10 02 00                                   sltu    $v0, $zero, $v0
.text:0035EC40 FF 00 42 30                                   andi    $v0, 0xFF
.text:0035EC44 F5 FF 40 14                                   bnez    $v0, loc_35EC1C
.text:0035EC48 00 00 00 00                                   nop
.text:0035EC4C 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)  # this
.text:0035EC50 C0 7A 0D 0C                                   jal     CRunningScript::ReadDataByte(void)
.text:0035EC54 00 00 00 00                                   nop
.text:0035EC58 00 00 00 00                                   nop
.text:0035EC5C 25 E8 C0 03                                   move    $sp, $fp
.text:0035EC60 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035EC64 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035EC68 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EC6C 08 00 E0 03                                   jr      $ra
.text:0035EC70 00 00 00 00                                   nop
.text:0035EC70                                # } // starts at 35EC00
.text:0035EC70                                # End of function SkipUnusedParameters(CRunningScript *)
.text:0035EC70
.text:0035EC74
.text:0035EC74                                # =============== S U B R O U T I N E =======================================
.text:0035EC74
.text:0035EC74                                # Attributes: bp-based frame fpd=0x18
.text:0035EC74
.text:0035EC74                                # _DWORD __fastcall ThreadJump(CRunningScript *, int)
.text:0035EC74                                               .globl ThreadJump(CRunningScript *, int)  # weak
.text:0035EC74                               ThreadJump(CRunningScript *, int):
.text:0035EC74
.text:0035EC74                               var_18          = -0x18
.text:0035EC74                               var_14          = -0x14
.text:0035EC74                               var_s0          =  0
.text:0035EC74                               var_s8          =  8
.text:0035EC74                               var_s10         =  0x10
.text:0035EC74
.text:0035EC74                                # __unwind {
.text:0035EC74 D0 FF BD 27                                   addiu   $sp, -0x30
.text:0035EC78 28 00 BF FF                                   sd      $ra, 0x18+var_s10($sp)
.text:0035EC7C 20 00 BE FF                                   sd      $fp, 0x18+var_s8($sp)
.text:0035EC80 18 00 B0 FF                                   sd      $s0, 0x18+var_s0($sp)
.text:0035EC84 25 F0 A0 03                                   move    $fp, $sp
.text:0035EC88 00 00 C4 AF                                   sw      $a0, 0x18+var_18($fp)
.text:0035EC8C 04 00 C5 AF                                   sw      $a1, 0x18+var_14($fp)
.text:0035EC90 00 00 D0 8F                                   lw      $s0, 0x18+var_18($fp)
.text:0035EC94 04 00 C2 8F                                   lw      $v0, 0x18+var_14($fp)
.text:0035EC98 0A 00 41 04                                   bgez    $v0, loc_35ECC4
.text:0035EC9C 00 00 00 00                                   nop
.text:0035ECA0 00 00 C4 8F                                   lw      $a0, 0x18+var_18($fp)  # this
.text:0035ECA4 8F 7A 0D 0C                                   jal     CRunningScript::GetBasePointer(void)
.text:0035ECA8 00 00 00 00                                   nop
.text:0035ECAC 25 18 40 00                                   move    $v1, $v0
.text:0035ECB0 04 00 C2 8F                                   lw      $v0, 0x18+var_14($fp)
.text:0035ECB4 23 10 02 00                                   negu    $v0, $v0
.text:0035ECB8 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035ECBC 05 00 00 10                                   b       loc_35ECD4
.text:0035ECC0 00 00 00 00                                   nop
.text:0035ECC4                                # ---------------------------------------------------------------------------
.text:0035ECC4
.text:0035ECC4                               loc_35ECC4:
.text:0035ECC4 6B 00 02 3C                                   lui     $v0, 0x6B  # 'k'
.text:0035ECC8 F0 1F 43 8C                                   lw      $v1, CTheScripts_ScriptSpace
.text:0035ECCC 04 00 C2 8F                                   lw      $v0, 0x18+var_14($fp)
.text:0035ECD0 21 10 62 00                                   addu    $v0, $v1, $v0
.text:0035ECD4
.text:0035ECD4                               loc_35ECD4:                              # void *
.text:0035ECD4 25 28 40 00                                   move    $a1, $v0
.text:0035ECD8 25 20 00 02                                   move    $a0, $s0         # this
.text:0035ECDC A5 7A 0D 0C                                   jal     CRunningScript::SetIp(void *)
.text:0035ECE0 00 00 00 00                                   nop
.text:0035ECE4 00 00 00 00                                   nop
.text:0035ECE8 25 E8 C0 03                                   move    $sp, $fp
.text:0035ECEC 28 00 BF DF                                   ld      $ra, 0x18+var_s10($sp)
.text:0035ECF0 20 00 BE DF                                   ld      $fp, 0x18+var_s8($sp)
.text:0035ECF4 18 00 B0 DF                                   ld      $s0, 0x18+var_s0($sp)
.text:0035ECF8 30 00 BD 27                                   addiu   $sp, 0x30
.text:0035ECFC 08 00 E0 03                                   jr      $ra
.text:0035ED00 00 00 00 00                                   nop
.text:0035ED00                                # } // starts at 35EC74
.text:0035ED00                                # End of function ThreadJump(CRunningScript *,int)
.text:0035ED00
.text:0035ED04
.text:0035ED04                                # =============== S U B R O U T I N E =======================================
.text:0035ED04
.text:0035ED04                                # Attributes: bp-based frame fpd=0x10
.text:0035ED04
.text:0035ED04                                               .globl operator>>(CRunningScript &, unsigned long &)  # weak
.text:0035ED04                               operator>>(CRunningScript &, unsigned long &):
.text:0035ED04
.text:0035ED04                               var_10          = -0x10
.text:0035ED04                               var_C           = -0xC
.text:0035ED04                               var_s0          =  0
.text:0035ED04                               var_s8          =  8
.text:0035ED04
.text:0035ED04                                # __unwind {
.text:0035ED04 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035ED08 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035ED0C 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035ED10 25 F0 A0 03                                   move    $fp, $sp
.text:0035ED14 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035ED18 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035ED1C 01 00 05 24                                   li      $a1, 1
.text:0035ED20 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035ED24 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035ED28 00 00 00 00                                   nop
.text:0035ED2C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035ED30 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035ED34 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035ED38 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035ED3C 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035ED40 25 E8 C0 03                                   move    $sp, $fp
.text:0035ED44 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035ED48 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035ED4C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035ED50 08 00 E0 03                                   jr      $ra
.text:0035ED54 00 00 00 00                                   nop
.text:0035ED54                                # } // starts at 35ED04
.text:0035ED54                                # End of function operator>>(CRunningScript &,ulong &)
.text:0035ED54
.text:0035ED58
.text:0035ED58                                # =============== S U B R O U T I N E =======================================
.text:0035ED58
.text:0035ED58                                # Attributes: bp-based frame fpd=0x10
.text:0035ED58
.text:0035ED58                                               .globl operator<<(CRunningScript &, unsigned long)  # weak
.text:0035ED58                               operator<<(CRunningScript &, unsigned long):
.text:0035ED58
.text:0035ED58                               var_10          = -0x10
.text:0035ED58                               var_C           = -0xC
.text:0035ED58                               var_s0          =  0
.text:0035ED58                               var_s8          =  8
.text:0035ED58
.text:0035ED58                                # __unwind {
.text:0035ED58 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035ED5C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035ED60 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035ED64 25 F0 A0 03                                   move    $fp, $sp
.text:0035ED68 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035ED6C 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035ED70 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035ED74 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035ED78 B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035ED7C 01 00 05 24                                   li      $a1, 1
.text:0035ED80 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035ED84 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035ED88 00 00 00 00                                   nop
.text:0035ED8C 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035ED90 25 E8 C0 03                                   move    $sp, $fp
.text:0035ED94 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035ED98 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035ED9C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EDA0 08 00 E0 03                                   jr      $ra
.text:0035EDA4 00 00 00 00                                   nop
.text:0035EDA4                                # } // starts at 35ED58
.text:0035EDA4                                # End of function operator<<(CRunningScript &,ulong)
.text:0035EDA4
.text:0035EDA8
.text:0035EDA8                                # =============== S U B R O U T I N E =======================================
.text:0035EDA8
.text:0035EDA8                                # Attributes: bp-based frame fpd=0x10
.text:0035EDA8
.text:0035EDA8                                               .globl operator>>(CRunningScript &, int &)  # weak
.text:0035EDA8                               operator>>(CRunningScript &, int &):
.text:0035EDA8
.text:0035EDA8                               var_10          = -0x10
.text:0035EDA8                               var_C           = -0xC
.text:0035EDA8                               var_s0          =  0
.text:0035EDA8                               var_s8          =  8
.text:0035EDA8
.text:0035EDA8                                # __unwind {
.text:0035EDA8 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EDAC 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EDB0 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035EDB4 25 F0 A0 03                                   move    $fp, $sp
.text:0035EDB8 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035EDBC 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035EDC0 01 00 05 24                                   li      $a1, 1
.text:0035EDC4 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035EDC8 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035EDCC 00 00 00 00                                   nop
.text:0035EDD0 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035EDD4 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035EDD8 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035EDDC 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035EDE0 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035EDE4 25 E8 C0 03                                   move    $sp, $fp
.text:0035EDE8 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035EDEC 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035EDF0 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EDF4 08 00 E0 03                                   jr      $ra
.text:0035EDF8 00 00 00 00                                   nop
.text:0035EDF8                                # } // starts at 35EDA8
.text:0035EDF8                                # End of function operator>>(CRunningScript &,int &)
.text:0035EDF8
.text:0035EDFC
.text:0035EDFC                                # =============== S U B R O U T I N E =======================================
.text:0035EDFC
.text:0035EDFC                                # Attributes: bp-based frame fpd=0x10
.text:0035EDFC
.text:0035EDFC                                               .globl operator<<(CRunningScript &, int)  # weak
.text:0035EDFC                               operator<<(CRunningScript &, int):
.text:0035EDFC
.text:0035EDFC                               var_10          = -0x10
.text:0035EDFC                               var_C           = -0xC
.text:0035EDFC                               var_s0          =  0
.text:0035EDFC                               var_s8          =  8
.text:0035EDFC
.text:0035EDFC                                # __unwind {
.text:0035EDFC E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EE00 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EE04 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035EE08 25 F0 A0 03                                   move    $fp, $sp
.text:0035EE0C 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035EE10 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035EE14 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035EE18 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035EE1C B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035EE20 01 00 05 24                                   li      $a1, 1
.text:0035EE24 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035EE28 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035EE2C 00 00 00 00                                   nop
.text:0035EE30 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035EE34 25 E8 C0 03                                   move    $sp, $fp
.text:0035EE38 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035EE3C 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035EE40 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EE44 08 00 E0 03                                   jr      $ra
.text:0035EE48 00 00 00 00                                   nop
.text:0035EE48                                # } // starts at 35EDFC
.text:0035EE48                                # End of function operator<<(CRunningScript &,int)
.text:0035EE48
.text:0035EE4C
.text:0035EE4C                                # =============== S U B R O U T I N E =======================================
.text:0035EE4C
.text:0035EE4C                                # Attributes: bp-based frame fpd=0x10
.text:0035EE4C
.text:0035EE4C                                               .globl operator>>(CRunningScript &, float &)  # weak
.text:0035EE4C                               operator>>(CRunningScript &, float &):
.text:0035EE4C
.text:0035EE4C                               var_10          = -0x10
.text:0035EE4C                               var_C           = -0xC
.text:0035EE4C                               var_s0          =  0
.text:0035EE4C                               var_s8          =  8
.text:0035EE4C
.text:0035EE4C                                # __unwind {
.text:0035EE4C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EE50 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EE54 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035EE58 25 F0 A0 03                                   move    $fp, $sp
.text:0035EE5C 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035EE60 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035EE64 01 00 05 24                                   li      $a1, 1
.text:0035EE68 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035EE6C F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035EE70 00 00 00 00                                   nop
.text:0035EE74 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035EE78 B0 DF 40 C4                                   lwc1    $f0, opcodeParams
.text:0035EE7C 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035EE80 00 00 40 E4                                   swc1    $f0, 0($v0)
.text:0035EE84 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035EE88 25 E8 C0 03                                   move    $sp, $fp
.text:0035EE8C 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035EE90 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035EE94 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EE98 08 00 E0 03                                   jr      $ra
.text:0035EE9C 00 00 00 00                                   nop
.text:0035EE9C                                # } // starts at 35EE4C
.text:0035EE9C                                # End of function operator>>(CRunningScript &,float &)
.text:0035EE9C
.text:0035EEA0
.text:0035EEA0                                # =============== S U B R O U T I N E =======================================
.text:0035EEA0
.text:0035EEA0                                # Attributes: bp-based frame fpd=0x10
.text:0035EEA0
.text:0035EEA0                                               .globl operator>>(CRunningScript &, char *&)  # weak
.text:0035EEA0                               operator>>(CRunningScript &, char *&):
.text:0035EEA0
.text:0035EEA0                               var_10          = -0x10
.text:0035EEA0                               var_C           = -0xC
.text:0035EEA0                               var_s0          =  0
.text:0035EEA0                               var_s8          =  8
.text:0035EEA0
.text:0035EEA0                                # __unwind {
.text:0035EEA0 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EEA4 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EEA8 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035EEAC 25 F0 A0 03                                   move    $fp, $sp
.text:0035EEB0 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035EEB4 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035EEB8 01 00 05 24                                   li      $a1, 1
.text:0035EEBC 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035EEC0 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035EEC4 00 00 00 00                                   nop
.text:0035EEC8 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035EECC B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035EED0 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035EED4 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035EED8 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035EEDC 25 E8 C0 03                                   move    $sp, $fp
.text:0035EEE0 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035EEE4 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035EEE8 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EEEC 08 00 E0 03                                   jr      $ra
.text:0035EEF0 00 00 00 00                                   nop
.text:0035EEF0                                # } // starts at 35EEA0
.text:0035EEF0                                # End of function operator>>(CRunningScript &,char *&)
.text:0035EEF0
.text:0035EEF4
.text:0035EEF4                                # =============== S U B R O U T I N E =======================================
.text:0035EEF4
.text:0035EEF4                                # Attributes: bp-based frame fpd=0x10
.text:0035EEF4
.text:0035EEF4                                               .globl operator>>(CRunningScript &, void *&)  # weak
.text:0035EEF4                               operator>>(CRunningScript &, void *&):
.text:0035EEF4
.text:0035EEF4                               var_10          = -0x10
.text:0035EEF4                               var_C           = -0xC
.text:0035EEF4                               var_s0          =  0
.text:0035EEF4                               var_s8          =  8
.text:0035EEF4
.text:0035EEF4                                # __unwind {
.text:0035EEF4 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EEF8 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EEFC 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035EF00 25 F0 A0 03                                   move    $fp, $sp
.text:0035EF04 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035EF08 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035EF0C 01 00 05 24                                   li      $a1, 1
.text:0035EF10 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035EF14 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035EF18 00 00 00 00                                   nop
.text:0035EF1C 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035EF20 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035EF24 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035EF28 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035EF2C 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035EF30 25 E8 C0 03                                   move    $sp, $fp
.text:0035EF34 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035EF38 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035EF3C 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EF40 08 00 E0 03                                   jr      $ra
.text:0035EF44 00 00 00 00                                   nop
.text:0035EF44                                # } // starts at 35EEF4
.text:0035EF44                                # End of function operator>>(CRunningScript &,void *&)
.text:0035EF44
.text:0035EF48
.text:0035EF48                                # =============== S U B R O U T I N E =======================================
.text:0035EF48
.text:0035EF48                                # Attributes: bp-based frame fpd=0x10
.text:0035EF48
.text:0035EF48                                               .globl CRunningScript & operator>><unsigned long>(CRunningScript &, unsigned long *&)  # weak
.text:0035EF48                               CRunningScript & operator>><unsigned long>(CRunningScript &, unsigned long *&):
.text:0035EF48
.text:0035EF48                               var_10          = -0x10
.text:0035EF48                               var_C           = -0xC
.text:0035EF48                               var_s0          =  0
.text:0035EF48                               var_s8          =  8
.text:0035EF48
.text:0035EF48                                # __unwind {
.text:0035EF48 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EF4C 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EF50 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035EF54 25 F0 A0 03                                   move    $fp, $sp
.text:0035EF58 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035EF5C 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035EF60 01 00 05 24                                   li      $a1, 1
.text:0035EF64 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035EF68 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035EF6C 00 00 00 00                                   nop
.text:0035EF70 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035EF74 B0 DF 43 8C                                   lw      $v1, opcodeParams
.text:0035EF78 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035EF7C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035EF80 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035EF84 25 E8 C0 03                                   move    $sp, $fp
.text:0035EF88 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035EF8C 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035EF90 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EF94 08 00 E0 03                                   jr      $ra
.text:0035EF98 00 00 00 00                                   nop
.text:0035EF98                                # } // starts at 35EF48
.text:0035EF98                                # End of function operator>><ulong>(CRunningScript &,ulong *&)
.text:0035EF98
.text:0035EF9C
.text:0035EF9C                                # =============== S U B R O U T I N E =======================================
.text:0035EF9C
.text:0035EF9C                                # Attributes: bp-based frame fpd=0x10
.text:0035EF9C
.text:0035EF9C                                               .globl CRunningScript & operator>><void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035EF9C                               CRunningScript & operator>><void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035EF9C
.text:0035EF9C                               var_10          = -0x10
.text:0035EF9C                               var_C           = -0xC
.text:0035EF9C                               var_s0          =  0
.text:0035EF9C                               var_s8          =  8
.text:0035EF9C
.text:0035EF9C                                # __unwind {
.text:0035EF9C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EFA0 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EFA4 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035EFA8 25 F0 A0 03                                   move    $fp, $sp
.text:0035EFAC 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035EFB0 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035EFB4 01 00 05 24                                   li      $a1, 1
.text:0035EFB8 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035EFBC F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035EFC0 00 00 00 00                                   nop
.text:0035EFC4 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035EFCC 25 18 40 00                                   move    $v1, $v0
.text:0035EFD0 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035EFD4 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035EFD8 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035EFDC 25 E8 C0 03                                   move    $sp, $fp
.text:0035EFE0 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035EFE4 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035EFE8 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035EFEC 08 00 E0 03                                   jr      $ra
.text:0035EFF0 00 00 00 00                                   nop
.text:0035EFF0                                # } // starts at 35EF9C
.text:0035EFF0                                # End of function operator>><void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035EFF0
.text:0035EFF4
.text:0035EFF4                                # =============== S U B R O U T I N E =======================================
.text:0035EFF4
.text:0035EFF4                                # Attributes: bp-based frame fpd=0x10
.text:0035EFF4
.text:0035EFF4                                               .globl CRunningScript & operator>><void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035EFF4                               CRunningScript & operator>><void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, void ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035EFF4
.text:0035EFF4                               var_10          = -0x10
.text:0035EFF4                               var_C           = -0xC
.text:0035EFF4                               var_s0          =  0
.text:0035EFF4                               var_s8          =  8
.text:0035EFF4
.text:0035EFF4                                # __unwind {
.text:0035EFF4 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035EFF8 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035EFFC 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F000 25 F0 A0 03                                   move    $fp, $sp
.text:0035F004 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F008 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F00C 01 00 05 24                                   li      $a1, 1
.text:0035F010 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F014 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035F018 00 00 00 00                                   nop
.text:0035F01C 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035F024 25 18 40 00                                   move    $v1, $v0
.text:0035F028 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035F02C 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035F030 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F034 25 E8 C0 03                                   move    $sp, $fp
.text:0035F038 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F03C 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F040 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F044 08 00 E0 03                                   jr      $ra
.text:0035F048 00 00 00 00                                   nop
.text:0035F048                                # } // starts at 35EFF4
.text:0035F048                                # End of function operator>><void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,void ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035F048
.text:0035F04C
.text:0035F04C                                # =============== S U B R O U T I N E =======================================
.text:0035F04C
.text:0035F04C                                # Attributes: bp-based frame fpd=0x10
.text:0035F04C
.text:0035F04C                                               .globl CRunningScript & operator>><unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035F04C                               CRunningScript & operator>><unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035F04C
.text:0035F04C                               var_10          = -0x10
.text:0035F04C                               var_C           = -0xC
.text:0035F04C                               var_s0          =  0
.text:0035F04C                               var_s8          =  8
.text:0035F04C
.text:0035F04C                                # __unwind {
.text:0035F04C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F050 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F054 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F058 25 F0 A0 03                                   move    $fp, $sp
.text:0035F05C 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F060 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F064 01 00 05 24                                   li      $a1, 1
.text:0035F068 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F06C F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035F070 00 00 00 00                                   nop
.text:0035F074 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035F07C 25 18 40 00                                   move    $v1, $v0
.text:0035F080 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035F084 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035F088 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F08C 25 E8 C0 03                                   move    $sp, $fp
.text:0035F090 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F094 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F098 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F09C 08 00 E0 03                                   jr      $ra
.text:0035F0A0 00 00 00 00                                   nop
.text:0035F0A0                                # } // starts at 35F04C
.text:0035F0A0                                # End of function operator>><ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035F0A0
.text:0035F0A4
.text:0035F0A4                                # =============== S U B R O U T I N E =======================================
.text:0035F0A4
.text:0035F0A4                                # Attributes: bp-based frame fpd=0x10
.text:0035F0A4
.text:0035F0A4                                               .globl CRunningScript & operator>><unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&)  # weak
.text:0035F0A4                               CRunningScript & operator>><unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR)>(CRunningScript &, unsigned long ()(void *, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR, SCRIPT_VAR) *&):
.text:0035F0A4
.text:0035F0A4                               var_10          = -0x10
.text:0035F0A4                               var_C           = -0xC
.text:0035F0A4                               var_s0          =  0
.text:0035F0A4                               var_s8          =  8
.text:0035F0A4
.text:0035F0A4                                # __unwind {
.text:0035F0A4 E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F0A8 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F0AC 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F0B0 25 F0 A0 03                                   move    $fp, $sp
.text:0035F0B4 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F0B8 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F0BC 01 00 05 24                                   li      $a1, 1
.text:0035F0C0 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F0C4 F4 DD 07 0C                                   jal     GetScriptParams(CRunningScript *,int)
.text:0035F0C8 00 00 00 00                                   nop
.text:0035F0CC 70 00 02 3C B0 DF 42 8C                       lw      $v0, opcodeParams
.text:0035F0D4 25 18 40 00                                   move    $v1, $v0
.text:0035F0D8 04 00 C2 8F                                   lw      $v0, 0x10+var_C($fp)
.text:0035F0DC 00 00 43 AC                                   sw      $v1, 0($v0)
.text:0035F0E0 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F0E4 25 E8 C0 03                                   move    $sp, $fp
.text:0035F0E8 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F0EC 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F0F0 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F0F4 08 00 E0 03                                   jr      $ra
.text:0035F0F8 00 00 00 00                                   nop
.text:0035F0F8                                # } // starts at 35F0A4
.text:0035F0F8                                # End of function operator>><ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR)>(CRunningScript &,ulong ()(void *,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR,SCRIPT_VAR) *&)
.text:0035F0F8
.text:0035F0FC
.text:0035F0FC                                # =============== S U B R O U T I N E =======================================
.text:0035F0FC
.text:0035F0FC                                # Attributes: bp-based frame fpd=0x10
.text:0035F0FC
.text:0035F0FC                                               .globl CRunningScript & operator<<<unsigned char>(CRunningScript &, unsigned char *)  # weak
.text:0035F0FC                               CRunningScript & operator<<<unsigned char>(CRunningScript &, unsigned char *):
.text:0035F0FC
.text:0035F0FC                               var_10          = -0x10
.text:0035F0FC                               var_C           = -0xC
.text:0035F0FC                               var_s0          =  0
.text:0035F0FC                               var_s8          =  8
.text:0035F0FC
.text:0035F0FC                                # __unwind {
.text:0035F0FC E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F100 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F104 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F108 25 F0 A0 03                                   move    $fp, $sp
.text:0035F10C 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F110 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F114 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035F118 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035F11C B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035F120 01 00 05 24                                   li      $a1, 1
.text:0035F124 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F128 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035F12C 00 00 00 00                                   nop
.text:0035F130 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F134 25 E8 C0 03                                   move    $sp, $fp
.text:0035F138 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F13C 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F140 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F144 08 00 E0 03                                   jr      $ra
.text:0035F148 00 00 00 00                                   nop
.text:0035F148                                # } // starts at 35F0FC
.text:0035F148                                # End of function operator<<<uchar>(CRunningScript &,uchar *)
.text:0035F148
.text:0035F14C
.text:0035F14C                                # =============== S U B R O U T I N E =======================================
.text:0035F14C
.text:0035F14C                                # Attributes: bp-based frame fpd=0x10
.text:0035F14C
.text:0035F14C                                               .globl CRunningScript & operator<<<SCRIPT_VAR>(CRunningScript &, SCRIPT_VAR *)  # weak
.text:0035F14C                               CRunningScript & operator<<<SCRIPT_VAR>(CRunningScript &, SCRIPT_VAR *):
.text:0035F14C
.text:0035F14C                               var_10          = -0x10
.text:0035F14C                               var_C           = -0xC
.text:0035F14C                               var_s0          =  0
.text:0035F14C                               var_s8          =  8
.text:0035F14C
.text:0035F14C                                # __unwind {
.text:0035F14C E0 FF BD 27                                   addiu   $sp, -0x20
.text:0035F150 18 00 BF FF                                   sd      $ra, 0x10+var_s8($sp)
.text:0035F154 10 00 BE FF                                   sd      $fp, 0x10+var_s0($sp)
.text:0035F158 25 F0 A0 03                                   move    $fp, $sp
.text:0035F15C 00 00 C4 AF                                   sw      $a0, 0x10+var_10($fp)
.text:0035F160 04 00 C5 AF                                   sw      $a1, 0x10+var_C($fp)
.text:0035F164 70 00 02 3C                                   lui     $v0, 0x70  # 'p'
.text:0035F168 04 00 C3 8F                                   lw      $v1, 0x10+var_C($fp)
.text:0035F16C B0 DF 43 AC                                   sw      $v1, opcodeParams
.text:0035F170 01 00 05 24                                   li      $a1, 1
.text:0035F174 00 00 C4 8F                                   lw      $a0, 0x10+var_10($fp)
.text:0035F178 48 DF 07 0C                                   jal     SetScriptParams(CRunningScript *,int)
.text:0035F17C 00 00 00 00                                   nop
.text:0035F180 00 00 C2 8F                                   lw      $v0, 0x10+var_10($fp)
.text:0035F184 25 E8 C0 03                                   move    $sp, $fp
.text:0035F188 18 00 BF DF                                   ld      $ra, 0x10+var_s8($sp)
.text:0035F18C 10 00 BE DF                                   ld      $fp, 0x10+var_s0($sp)
.text:0035F190 20 00 BD 27                                   addiu   $sp, 0x20
.text:0035F194 08 00 E0 03                                   jr      $ra
.text:0035F198 00 00 00 00                                   nop
.text:0035F198                                # } // starts at 35F14C
.text:0035F198                                # End of function operator<<<SCRIPT_VAR>(CRunningScript &,SCRIPT_VAR *)
.text:0035F198
.text:0035F198                                # ---------------------------------------------------------------------------
.text:0035F19C 00 00 00 00                                   .align 4
.text:0035F1A0 25 64 00 00                   int_fmt:        .word 0x6425
.text:0035F1A4 00 00 00 00                                   .word 0
.text:0035F1A8 25 30 38 58                   ptrstr:         .word 0x58383025
.text:0035F1AC 00 00 00 00                                   .word 0
.text:0035F1B0 25 66 00 00                   fltstr:         .word 0x6625
.text:0035F1B4 00 00 00 00                                   .word 0
.text:0035F1B8 28 6E 75 6C                   none:           .word 0x6C756E28
.text:0035F1BC 6C 29 00 00                                   .word 0x296C
.text:0035F1C0 CC DA 35 00                   jpt_35D900:     .word 0x35DACC           # jump table for switch statement
.text:0035F1C4 4C DA 35 00                                   .word loc_35DA4C         # jumptable 0035D900 cases 1-5,7,8
.text:0035F1C8 4C DA 35 00                                   .word 0x35DA4C
.text:0035F1CC 4C DA 35 00                                   .word 0x35DA4C
.text:0035F1D0 4C DA 35 00                                   .word 0x35DA4C
.text:0035F1D4 4C DA 35 00                                   .word 0x35DA4C
.text:0035F1D8 08 D9 35 00                                   .word 0x35D908
.text:0035F1DC 4C DA 35 00                                   .word 0x35DA4C
.text:0035F1E0 4C DA 35 00                                   .word 0x35DA4C
.text:0035F1E4 8C DA 35 00                                   .word 0x35DA8C
.text:0035F1E8 68 DA 35 00                                   .word 0x35DA68
.text:0035F1EC 68 DA 35 00                                   .word 0x35DA68
.text:0035F1F0 CC DA 35 00                                   .word 0x35DACC
.text:0035F1F4 CC DA 35 00                                   .word 0x35DACC
.text:0035F1F8 8C DA 35 00                                   .word 0x35DA8C
.text:0035F1FC CC DA 35 00                                   .word 0x35DACC
.text:0035F200 68 DA 35 00                                   .word 0x35DA68
.text:0035F204 68 DA 35 00                                   .word 0x35DA68
.text:0035F208 4C D9 35 00                   jpt_35D944:     .word 0x35D94C           # jump table for switch statement
.text:0035F20C 5C D9 35 00                                   .word 0x35D95C
.text:0035F210 6C D9 35 00                                   .word 0x35D96C
.text:0035F214 7C D9 35 00                                   .word 0x35D97C
.text:0035F218 8C D9 35 00                                   .word 0x35D98C
.text:0035F21C 9C D9 35 00                                   .word 0x35D99C
.text:0035F220 AC D9 35 00                                   .word 0x35D9AC
.text:0035F224 BC D9 35 00                                   .word 0x35D9BC
.text:0035F228 CC D9 35 00                                   .word 0x35D9CC
.text:0035F22C DC D9 35 00                                   .word 0x35D9DC
.text:0035F230 EC D9 35 00                                   .word 0x35D9EC
.text:0035F234 FC D9 35 00                                   .word 0x35D9FC
.text:0035F238 0C DA 35 00                                   .word 0x35DA0C
.text:0035F23C 1C DA 35 00                                   .word 0x35DA1C
.text:0035F240 2C DA 35 00                                   .word 0x35DA2C
.text:0035F244 9C DE 35 00                   jpt_35DCD0:     .word 0x35DE9C           # jump table for switch statement
.text:0035F248 1C DE 35 00                                   .word 0x35DE1C
.text:0035F24C 1C DE 35 00                                   .word 0x35DE1C
.text:0035F250 1C DE 35 00                                   .word 0x35DE1C
.text:0035F254 1C DE 35 00                                   .word 0x35DE1C
.text:0035F258 1C DE 35 00                                   .word 0x35DE1C
.text:0035F25C D8 DC 35 00                                   .word 0x35DCD8
.text:0035F260 1C DE 35 00                                   .word 0x35DE1C
.text:0035F264 1C DE 35 00                                   .word 0x35DE1C
.text:0035F268 5C DE 35 00                                   .word 0x35DE5C
.text:0035F26C 38 DE 35 00                                   .word 0x35DE38
.text:0035F270 38 DE 35 00                                   .word 0x35DE38
.text:0035F274 9C DE 35 00                                   .word 0x35DE9C
.text:0035F278 9C DE 35 00                                   .word 0x35DE9C
.text:0035F27C 5C DE 35 00                                   .word 0x35DE5C
.text:0035F280 9C DE 35 00                                   .word 0x35DE9C
.text:0035F284 38 DE 35 00                                   .word 0x35DE38
.text:0035F288 38 DE 35 00                                   .word 0x35DE38
.text:0035F28C 1C DD 35 00                   jpt_35DD14:     .word 0x35DD1C           # jump table for switch statement
.text:0035F290 2C DD 35 00                                   .word 0x35DD2C
.text:0035F294 3C DD 35 00                                   .word 0x35DD3C
.text:0035F298 4C DD 35 00                                   .word 0x35DD4C
.text:0035F29C 5C DD 35 00                                   .word 0x35DD5C
.text:0035F2A0 6C DD 35 00                                   .word 0x35DD6C
.text:0035F2A4 7C DD 35 00                                   .word 0x35DD7C
.text:0035F2A8 8C DD 35 00                                   .word 0x35DD8C
.text:0035F2AC 9C DD 35 00                                   .word 0x35DD9C
.text:0035F2B0 AC DD 35 00                                   .word 0x35DDAC
.text:0035F2B4 BC DD 35 00                                   .word 0x35DDBC
.text:0035F2B8 CC DD 35 00                                   .word 0x35DDCC
.text:0035F2BC DC DD 35 00                                   .word 0x35DDDC
.text:0035F2C0 EC DD 35 00                                   .word 0x35DDEC
.text:0035F2C4 FC DD 35 00                                   .word 0x35DDFC
.text:0035F2C8 64 E2 35 00                   jpt_35E098:     .word 0x35E264           # jump table for switch statement
.text:0035F2CC E4 E1 35 00                                   .word 0x35E1E4
.text:0035F2D0 E4 E1 35 00                                   .word 0x35E1E4
.text:0035F2D4 E4 E1 35 00                                   .word 0x35E1E4
.text:0035F2D8 E4 E1 35 00                                   .word 0x35E1E4
.text:0035F2DC E4 E1 35 00                                   .word 0x35E1E4
.text:0035F2E0 A0 E0 35 00                                   .word 0x35E0A0
.text:0035F2E4 E4 E1 35 00                                   .word 0x35E1E4
.text:0035F2E8 E4 E1 35 00                                   .word 0x35E1E4
.text:0035F2EC 24 E2 35 00                                   .word 0x35E224
.text:0035F2F0 00 E2 35 00                                   .word 0x35E200
.text:0035F2F4 00 E2 35 00                                   .word 0x35E200
.text:0035F2F8 64 E2 35 00                                   .word 0x35E264
.text:0035F2FC 64 E2 35 00                                   .word 0x35E264
.text:0035F300 24 E2 35 00                                   .word 0x35E224
.text:0035F304 64 E2 35 00                                   .word 0x35E264
.text:0035F308 00 E2 35 00                                   .word 0x35E200
.text:0035F30C 00 E2 35 00                                   .word 0x35E200
.text:0035F310 E4 E0 35 00                   jpt_35E0DC:     .word 0x35E0E4           # jump table for switch statement
.text:0035F314 F4 E0 35 00                                   .word 0x35E0F4
.text:0035F318 04 E1 35 00                                   .word 0x35E104
.text:0035F31C 14 E1 35 00                                   .word 0x35E114
.text:0035F320 24 E1 35 00                                   .word 0x35E124
.text:0035F324 34 E1 35 00                                   .word 0x35E134
.text:0035F328 44 E1 35 00                                   .word 0x35E144
.text:0035F32C 54 E1 35 00                                   .word 0x35E154
.text:0035F330 64 E1 35 00                                   .word 0x35E164
.text:0035F334 74 E1 35 00                                   .word 0x35E174
.text:0035F338 84 E1 35 00                                   .word 0x35E184
.text:0035F33C 94 E1 35 00                                   .word 0x35E194
.text:0035F340 A4 E1 35 00                                   .word 0x35E1A4
.text:0035F344 B4 E1 35 00                                   .word 0x35E1B4
.text:0035F348 C4 E1 35 00                                   .word 0x35E1C4
.text:0035F34C 48 E6 35 00                   jpt_35E47C:     .word 0x35E648           # jump table for switch statement
.text:0035F350 C8 E5 35 00                                   .word 0x35E5C8
.text:0035F354 C8 E5 35 00                                   .word 0x35E5C8
.text:0035F358 C8 E5 35 00                                   .word 0x35E5C8
.text:0035F35C C8 E5 35 00                                   .word 0x35E5C8
.text:0035F360 C8 E5 35 00                                   .word 0x35E5C8
.text:0035F364 84 E4 35 00                                   .word 0x35E484
.text:0035F368 C8 E5 35 00                                   .word 0x35E5C8
.text:0035F36C C8 E5 35 00                                   .word 0x35E5C8
.text:0035F370 08 E6 35 00                                   .word 0x35E608
.text:0035F374 E4 E5 35 00                                   .word 0x35E5E4
.text:0035F378 E4 E5 35 00                                   .word 0x35E5E4
.text:0035F37C 48 E6 35 00                                   .word 0x35E648
.text:0035F380 48 E6 35 00                                   .word 0x35E648
.text:0035F384 08 E6 35 00                                   .word 0x35E608
.text:0035F388 48 E6 35 00                                   .word 0x35E648
.text:0035F38C E4 E5 35 00                                   .word 0x35E5E4
.text:0035F390 E4 E5 35 00                                   .word 0x35E5E4
.text:0035F394 C8 E4 35 00                   jpt_35E4C0:     .word 0x35E4C8           # jump table for switch statement
.text:0035F398 D8 E4 35 00                                   .word 0x35E4D8
.text:0035F39C E8 E4 35 00                                   .word 0x35E4E8
.text:0035F3A0 F8 E4 35 00                                   .word 0x35E4F8
.text:0035F3A4 08 E5 35 00                                   .word 0x35E508
.text:0035F3A8 18 E5 35 00                                   .word 0x35E518
.text:0035F3AC 28 E5 35 00                                   .word 0x35E528
.text:0035F3B0 38 E5 35 00                                   .word 0x35E538
.text:0035F3B4 48 E5 35 00                                   .word 0x35E548
.text:0035F3B8 58 E5 35 00                                   .word 0x35E558
.text:0035F3BC 68 E5 35 00                                   .word 0x35E568
.text:0035F3C0 78 E5 35 00                                   .word 0x35E578
.text:0035F3C4 88 E5 35 00                                   .word 0x35E588
.text:0035F3C8 98 E5 35 00                                   .word 0x35E598
.text:0035F3CC A8 E5 35 00                                   .word 0x35E5A8
.text:0035F3D0                                               .globl _fdata
.text:0035F3D0 F8 D1 35 00                   _fdata:         .word 0x35D1F8           # Alternative name is '_fdata'
.text:0035F3D0                                                                        # customOpcodeHandlers
.text:0035F3D4                                # ---------------------------------------------------------------------------
.text:0035F3D4 CC D2 35 00                                   syscall 0xD74B
.text:0035F3D8 98 D3 35 00                                   mult    $k0, $at, $s5
.text:0035F3DC 08 D4 35 00                                   jr.hb   $at
.text:0035F3E0 78 D4 35 00                                   dsll    $k0, $s5, 17
.text:0035F3E0                                # ---------------------------------------------------------------------------
.text:0035F3E4 E8 D4 35 00                                   .word opcode_0A91(CRunningScript *)
.text:0035F3E8 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F3EC D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F3F0 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F3F4 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F3F8 64 D5 35 00                                   .word opcode_0A96(CRunningScript *)
.text:0035F3FC DC D5 35 00                                   .word opcode_0A97(CRunningScript *)
.text:0035F400 54 D6 35 00                                   .word opcode_0A98(CRunningScript *)
.text:0035F404 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F408 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F40C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F410 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F414 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F418 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F41C CC D6 35 00                                   .word opcode_0A9F(CRunningScript *)
.text:0035F420 18 D7 35 00                                   .word opcode_0AA0(CRunningScript *)
.text:0035F424 B4 D7 35 00                                   .word opcode_0AA1(CRunningScript *)
.text:0035F428 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F42C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F430 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F434 2C D8 35 00                                   .word opcode_0AA5(CRunningScript *)
.text:0035F438 E8 DB 35 00                                   .word opcode_0AA6(CRunningScript *)
.text:0035F43C C4 DF 35 00                                   .word opcode_0AA7(CRunningScript *)
.text:0035F440 94 E3 35 00                                   .word opcode_0AA8(CRunningScript *)
.text:0035F444 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F448 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F44C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F450 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F454 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F458 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F45C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F460 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F464 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F468 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F46C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F470 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F474 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F478 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F47C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F480 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F484 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F488 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F48C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F490 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F494 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F498 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F49C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4A0 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4A4 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4A8 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4AC D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4B0 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4B4 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4B8 78 E7 35 00                                   .word opcode_0AC6(CRunningScript *)
.text:0035F4BC 14 E8 35 00                                   .word opcode_0AC7(CRunningScript *)
.text:0035F4C0 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4C4 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4C8 70 E8 35 00                                   .word opcode_0ACA(CRunningScript *)
.text:0035F4CC D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4D0 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4D4 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4D8 CC E8 35 00                                   .word opcode_0ACE(CRunningScript *)
.text:0035F4DC D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4E0 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4E4 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4E8 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4EC 54 E9 35 00                                   .word opcode_0AD3(CRunningScript *)
.text:0035F4F0 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4F4 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4F8 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F4FC D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F500 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F504 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F508 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F50C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F510 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F514 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F518 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F51C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F520 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F524 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F528 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F52C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F530 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F534 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F538 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F53C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F540 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F544 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F548 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F54C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F550 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F554 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F558 D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F55C D0 D1 35 00                                   .word opcode_defa(CRunningScript *)
.text:0035F560 00 00 00 00                   readString(CRunningScript *, char *, unsigned char)::result:.word 0
.text:0035F564 00 00 00 00                                   .word 0
.text:0035F568 00 00 00 00                                   .word 0
.text:0035F56C 00 00 00 00                                   .word 0
.text:0035F570 00 00 00 00                                   .word 0
.text:0035F574 00 00 00 00                                   .word 0
.text:0035F578 00 00 00 00                                   .word 0
.text:0035F57C 00 00 00 00                                   .word 0
.text:0035F580 00 00 00 00                                   .word 0
.text:0035F584 00 00 00 00                                   .word 0
.text:0035F588 00 00 00 00                                   .word 0
.text:0035F58C 00 00 00 00                                   .word 0
.text:0035F590 00 00 00 00                                   .word 0
.text:0035F594 00 00 00 00                                   .word 0
.text:0035F598 00 00 00 00                                   .word 0
.text:0035F59C 00 00 00 00                                   .word 0
.text:0035F5A0 00 00 00 00                                   .word 0
.text:0035F5A4 00 00 00 00                                   .word 0
.text:0035F5A8 00 00 00 00                                   .word 0
.text:0035F5AC 00 00 00 00                                   .word 0
.text:0035F5B0 00 00 00 00                                   .word 0
.text:0035F5B4 00 00 00 00                                   .word 0
.text:0035F5B8 00 00 00 00                                   .word 0
.text:0035F5BC 00 00 00 00                                   .word 0
.text:0035F5C0 00 00 00 00                                   .word 0
.text:0035F5C4 00 00 00 00                                   .word 0
.text:0035F5C8 00 00 00 00                                   .word 0
.text:0035F5CC 00 00 00 00                                   .word 0
.text:0035F5D0 00 00 00 00                                   .word 0
.text:0035F5D4 00 00 00 00                                   .word 0
.text:0035F5D8 00 00 00 00                                   .word 0
.text:0035F5DC 00 00 00 00                                   .word 0
.text:0035F5E0 00 00 00 00                   textParams:     .word 0
.text:0035F5E4 00 00 00 00                                   .word 0
.text:0035F5E8 00 00 00 00                                   .word 0
.text:0035F5EC 00 00 00 00                                   .word 0
.text:0035F5F0 00 00 00 00                                   .word 0
.text:0035F5F4 00 00 00 00                                   .word 0
.text:0035F5F8 00 00 00 00                                   .word 0
.text:0035F5FC 00 00 00 00                                   .word 0
.text:0035F600 00 00 00 00                                   .word 0
.text:0035F604 00 00 00 00                                   .word 0
.text:0035F608 00 00 00 00                                   .word 0
.text:0035F60C 00 00 00 00                                   .word 0
.text:0035F610 00 00 00 00                                   .word 0
.text:0035F614 00 00 00 00                                   .word 0
.text:0035F618 00 00 00 00                                   .word 0
.text:0035F61C 00 00 00 00                                   .word 0
.text:0035F620 00 00 00 00                                   .word 0
.text:0035F624 00 00 00 00                                   .word 0
.text:0035F628 00 00 00 00                                   .word 0
.text:0035F62C 00 00 00 00                                   .word 0
.text:0035F630 00 00 00 00                                   .word 0
.text:0035F634 00 00 00 00                                   .word 0
.text:0035F638 00 00 00 00                                   .word 0
.text:0035F63C 00 00 00 00                                   .word 0
.text:0035F640 00 00 00 00                                   .word 0
.text:0035F644 00 00 00 00                                   .word 0
.text:0035F648 00 00 00 00                                   .word 0
.text:0035F64C 00 00 00 00                                   .word 0
.text:0035F650 00 00 00 00                                   .word 0
.text:0035F654 00 00 00 00                                   .word 0
.text:0035F658 00 00 00 00                                   .word 0
.text:0035F65C 00 00 00 00                                   .word 0
.text:0035F660 00 00 00 00                                   .word 0
.text:0035F664 00 00 00 00                                   .word 0
.text:0035F668 00 00 00 00                                   .word 0
.text:0035F66C 00 00 00 00                                   .word 0
.text:0035F670 00 00 00 00                                   .word 0
.text:0035F674 00 00 00 00                                   .word 0
.text:0035F678 00 00 00 00                                   .word 0
.text:0035F67C 00 00 00 00                                   .word 0
.text:0035F680 00 00 00 00                                   .word 0
.text:0035F684 00 00 00 00                                   .word 0
.text:0035F688 00 00 00 00                                   .word 0
.text:0035F68C 00 00 00 00                                   .word 0
.text:0035F690 00 00 00 00                                   .word 0
.text:0035F694 00 00 00 00                                   .word 0
.text:0035F698 00 00 00 00                                   .word 0
.text:0035F69C 00 00 00 00                                   .word 0
.text:0035F6A0 00 00 00 00                                   .word 0
.text:0035F6A4 00 00 00 00                                   .word 0
.text:0035F6A8 00 00 00 00                                   .word 0
.text:0035F6AC 00 00 00 00                                   .word 0
.text:0035F6B0 00 00 00 00                                   .word 0
.text:0035F6B4 00 00 00 00                                   .word 0
.text:0035F6B8 00 00 00 00                                   .word 0
.text:0035F6BC 00 00 00 00                                   .word 0
.text:0035F6C0 00 00 00 00                                   .word 0
.text:0035F6C4 00 00 00 00                                   .word 0
.text:0035F6C8 00 00 00 00                                   .word 0
.text:0035F6CC 00 00 00 00                                   .word 0
.text:0035F6D0 00 00 00 00                                   .word 0
.text:0035F6D4 00 00 00 00                                   .word 0
.text:0035F6D8 00 00 00 00                                   .word 0
.text:0035F6DC 00 00 00 00                                   .word 0
.text:0035F6E0 00 00 00 00                                   .word 0
.text:0035F6E4 00 00 00 00                                   .word 0
.text:0035F6E8 00 00 00 00                                   .word 0
.text:0035F6EC 00 00 00 00                                   .word 0
.text:0035F6F0 00 00 00 00                                   .word 0
.text:0035F6F4 00 00 00 00                                   .word 0
.text:0035F6F8 00 00 00 00                                   .word 0
.text:0035F6FC 00 00 00 00                                   .word 0
.text:0035F700 00 00 00 00                                   .word 0
.text:0035F704 00 00 00 00                                   .word 0
.text:0035F708 00 00 00 00                                   .word 0
.text:0035F70C 00 00 00 00                                   .word 0
.text:0035F710 00 00 00 00                                   .word 0
.text:0035F714 00 00 00 00                                   .word 0
.text:0035F718 00 00 00 00                                   .word 0
.text:0035F71C 00 00 00 00                                   .word 0
.text:0035F720 00 00 00 00                                   .word 0
.text:0035F724 00 00 00 00                                   .word 0
.text:0035F728 00 00 00 00                                   .word 0
.text:0035F72C 00 00 00 00                                   .word 0
.text:0035F730 00 00 00 00                                   .word 0
.text:0035F734 00 00 00 00                                   .word 0
.text:0035F738 00 00 00 00                                   .word 0
.text:0035F73C 00 00 00 00                                   .word 0
.text:0035F740 00 00 00 00                                   .word 0
.text:0035F744 00 00 00 00                                   .word 0
.text:0035F748 00 00 00 00                                   .word 0
.text:0035F74C 00 00 00 00                                   .word 0
.text:0035F750 00 00 00 00                                   .word 0
.text:0035F754 00 00 00 00                                   .word 0
.text:0035F758 00 00 00 00                                   .word 0
.text:0035F75C 00 00 00 00                                   .word 0
.text:0035F760 00 00 00 00                                   .word 0
.text:0035F764 00 00 00 00                                   .word 0
.text:0035F768 00 00 00 00                                   .word 0
.text:0035F76C 00 00 00 00                                   .word 0
.text:0035F770 00 00 00 00                                   .word 0
.text:0035F774 00 00 00 00                                   .word 0
.text:0035F778 00 00 00 00                                   .word 0
.text:0035F77C 00 00 00 00                                   .word 0
.text:0035F780 00 00 00 00                                   .word 0
.text:0035F784 00 00 00 00                                   .word 0
.text:0035F788 00 00 00 00                                   .word 0
.text:0035F78C 00 00 00 00                                   .word 0
.text:0035F790 00 00 00 00                                   .word 0
.text:0035F794 00 00 00 00                                   .word 0
.text:0035F798 00 00 00 00                                   .word 0
.text:0035F79C 00 00 00 00                                   .word 0
.text:0035F7A0 00 00 00 00                                   .word 0
.text:0035F7A4 00 00 00 00                                   .word 0
.text:0035F7A8 00 00 00 00                                   .word 0
.text:0035F7AC 00 00 00 00                                   .word 0
.text:0035F7B0 00 00 00 00                                   .word 0
.text:0035F7B4 00 00 00 00                                   .word 0
.text:0035F7B8 00 00 00 00                                   .word 0
.text:0035F7BC 00 00 00 00                                   .word 0
.text:0035F7C0 00 00 00 00                                   .word 0
.text:0035F7C4 00 00 00 00                                   .word 0
.text:0035F7C8 00 00 00 00                                   .word 0
.text:0035F7CC 00 00 00 00                                   .word 0
.text:0035F7D0 00 00 00 00                                   .word 0
.text:0035F7D4 00 00 00 00                                   .word 0
.text:0035F7D8 00 00 00 00                                   .word 0
.text:0035F7DC 00 00 00 00                                   .word 0
.text:0035F7E0 00 00 00 00                                   .word 0
.text:0035F7E4 00 00 00 00                                   .word 0
.text:0035F7E8 00 00 00 00                                   .word 0
.text:0035F7EC 00 00 00 00                                   .word 0
.text:0035F7F0 00 00 00 00                                   .word 0
.text:0035F7F4 00 00 00 00                                   .word 0
.text:0035F7F8 00 00 00 00                                   .word 0
.text:0035F7FC 00 00 00 00                                   .word 0
.text:0035F800 00 00 00 00                                   .word 0
.text:0035F804 00 00 00 00                                   .word 0
.text:0035F808 00 00 00 00                                   .word 0
.text:0035F80C 00 00 00 00                                   .word 0
.text:0035F810 00 00 00 00                                   .word 0
.text:0035F814 00 00 00 00                                   .word 0
.text:0035F818 00 00 00 00                                   .word 0
.text:0035F81C 00 00 00 00                                   .word 0
.text:0035F820 00 00 00 00                                   .word 0
.text:0035F824 00 00 00 00                                   .word 0
.text:0035F828 00 00 00 00                                   .word 0
.text:0035F82C 00 00 00 00                                   .word 0
.text:0035F830 00 00 00 00                                   .word 0
.text:0035F834 00 00 00 00                                   .word 0
.text:0035F838 00 00 00 00                                   .word 0
.text:0035F83C 00 00 00 00                                   .word 0
.text:0035F840 00 00 00 00                                   .word 0
.text:0035F844 00 00 00 00                                   .word 0
.text:0035F848 00 00 00 00                                   .word 0
.text:0035F84C 00 00 00 00                                   .word 0
.text:0035F850 00 00 00 00                                   .word 0
.text:0035F854 00 00 00 00                                   .word 0
.text:0035F858 00 00 00 00                                   .word 0
.text:0035F85C 00 00 00 00                                   .word 0
.text:0035F860 00 00 00 00                   arguments:      .word 0
.text:0035F864 00 00 00 00                   dword_35F864:   .word 0
.text:0035F868 00 00 00 00                   dword_35F868:   .word 0
.text:0035F86C 00 00 00 00                   dword_35F86C:   .word 0
.text:0035F870 00 00 00 00                   dword_35F870:   .word 0
.text:0035F874 00 00 00 00                   dword_35F874:   .word 0
.text:0035F878 00 00 00 00                   dword_35F878:   .word 0
.text:0035F87C 00 00 00 00                   dword_35F87C:   .word 0
.text:0035F880 00 00 00 00                   dword_35F880:   .word 0
.text:0035F884 00 00 00 00                   dword_35F884:   .word 0
.text:0035F888 00 00 00 00                   dword_35F888:   .word 0
.text:0035F88C 00 00 00 00                   dword_35F88C:   .word 0
.text:0035F890 00 00 00 00                   dword_35F890:   .word 0
.text:0035F894 00 00 00 00                   dword_35F894:   .word 0
.text:0035F898 00 00 00 00                   dword_35F898:   .word 0
.text:0035F89C 00 00 00 00                                   .word 0
.text:0035F8A0 00 00 00 00                                   .word 0